# Created as: cat out | grep -v get_divs | grep -v get_ext_graph | grep -v save_tool_dct | grep -v get_bases_lst | grep -v get_dynkin_type > out_short

start_timer(200): start time = 1564579977.96 
get_tool_dct(157): Loading from: /home/LOCAL/nlubbes/ns_lattice-15/src/ns_lattice/ns_tools 
get_tool_dct(163): Cannot load ".__tool_dct":  [Errno 2] No such file or directory: '/home/LOCAL/nlubbes/ns_lattice-15/src/ns_lattice/ns_tools.sobj' 
get_cls(1059): rank = 3 
get_bas_lst(582): start 
update(86): ETA = 7.5340e-7 m, counter = 0 / 2 , time = 7.5340e-6 m, info = get_bas_lst rank = 3  
update(86): ETA = 5.0505e-7 m, counter = 0 / 2 , time = 5.0505e-6 m, info = get_bas_lst rank = 3  
update(86): ETA = 3.6995e-7 m, counter = 0 / 2 , time = 3.6995e-6 m, info = get_bas_lst rank = 3  
update(86): ETA = 2.4319e-7 m, counter = 0 / 1 , time = 4.8637e-6 m, info = get_bas_lst rank = 3  
get_inv_lst(666): rank = 3 
update(86): ETA = 1.2716e-7 m, counter = 0 / 2 , time = 6.3578e-8 m, info = A0  
get_inv_lst(680): Found type of involution:  A0 
update(86): ETA = 0.00040210 m, counter = 1 / 2 , time = 0.00040216 m, info = A1  
get_inv_lst(680): Found type of involution:  A1 
get_cls(1066): start looping through inv_lst:  2 ['A0', 'A1'] 
get_cls(1070): looping through inv_lst: (3, 'A0', []) 
get_cls(1075): Since Mtype equals A0 we recover the classification from bas_lst. 
get_cls(1070): looping through inv_lst: (3, 'A1', [e1-e2]) 
get_part_roots(875): r_lst      = 1 [e1-e2] 
get_part_roots(876): s_lst      = 0 [] 
get_part_roots(877): tq1_lst    = 0 [] 
get_part_roots(878): tq_lst     = 0 [] 
get_part_roots(879): q_lst      = 0 [] 
get_part_roots(880):        M --> 0 [] 
get_part_roots(881): inv.Md_lst = A1 [e1-e2] , rank = 3 
get_cls(1086): looping through inv_lst continued after recursive call: (3, 'A1', [e1-e2]) 
get_cls(1094): bas1_lst = 1 [('A1', 'A0')] 
get_cls(1095): s_lst    = 0 [] 
get_cls(1096): q_lst    = 0 [] 
update(86): ETA = 2.0663e-6 m, counter = 0 / 2 , time = 1.0331e-6 m, info = get_cls seeking bases in s_lst and q_lst:  (3, 'A1', 'A0')  
update(86): ETA = 0.000066034 m, counter = 1 / 2 , time = 0.000067067 m, info = get_cls seeking bases in s_lst and q_lst:  (3, 'A1', '{A1}')  
get_cls(1130): Setting Dynkin types of 2 items...please wait... 
update(86): ETA = 0.000022729 m, counter = 0 / 2 , time = 0.000011365 m, info = 3 A1 A0  
update(86): ETA = 0.000025086 m, counter = 1 / 2 , time = 0.000036450 m, info = 3 A1 A0  
get_cls(1145): inv      = A1 , rank = 3 
get_cls(1146): bas1_lst = 1 [('A0', 1)] 
get_cls(1147): bas2_lst = 1 [('A0', 1)] 
get_cls(1148): bas3_lst = 1 [('A0', 1)] 
update(86): ETA = 6.7552e-8 m, counter = 0 / 1 , time = 6.7552e-8 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', 'A0', 'A0')  
get_cls(1168): 	 appended:  (3, 'A1', 'A0') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A0', 'A0') 
usecase__get_cls(68): Classification of root bases:
 rownr rank   Mtype            type  #-2  #-1 #fam #-2R  #-1R  #famR                                                                Md_lst                                                                                                                                  d_lst                                                                                                                                                                                                                                                                                                                                                   M
     0    3      A0              A0    0    3    2    0     3      2                                                                    []                                                                                                                                     []                                                                                                                                                                                                                                                                                                                   [(1, 0, 0), (0, 1, 0), (0, 0, 1)]
     1    3      A0            {A1}    1    2    1    1     2      1                                                                    []                                                                                                                                [e1-e2]                                                                                                                                                                                                                                                                                                                   [(1, 0, 0), (0, 1, 0), (0, 0, 1)]
     2    3      A1              A0    0    3    2    0     1      0                                                               [e1-e2]                                                                                                                                     []                                                                                                                                                                                                                                                                                                                   [(1, 0, 0), (0, 0, 1), (0, 1, 0)]
 
usecase__get_cls(69): rank = 3 , len = 3 
usecase__get_cls(70): ################################################################################ 
get_cls(1059): rank = 4 
get_bas_lst(582): start 
update(86): ETA = 9.4970e-7 m, counter = 0 / 4 , time = 4.7485e-6 m, info = get_bas_lst rank = 4  
update(86): ETA = 1.9534e-6 m, counter = 0 / 8 , time = 4.8836e-6 m, info = get_bas_lst rank = 4  
update(86): ETA = 7.3671e-7 m, counter = 0 / 4 , time = 3.6836e-6 m, info = get_bas_lst rank = 4  
update(86): ETA = 3.6518e-7 m, counter = 0 / 2 , time = 3.6518e-6 m, info = get_bas_lst rank = 4  
get_inv_lst(666): rank = 4 
update(86): ETA = 3.0994e-7 m, counter = 0 / 6 , time = 5.1657e-8 m, info = A0  
get_inv_lst(680): Found type of involution:  A0 
update(86): ETA = 0.0030552 m, counter = 1 / 6 , time = 0.00061110 m, info = A1  
get_inv_lst(680): Found type of involution:  A1 
update(86): ETA = 0.0035193 m, counter = 2 / 6 , time = 0.0014909 m, info = A1  
get_inv_lst(680): Found type of involution:  A1 
update(86): ETA = 0.0025926 m, counter = 3 / 6 , time = 0.0023552 m, info = 2A1  
get_inv_lst(680): Found type of involution:  2A1 
update(86): ETA = 0.0017987 m, counter = 4 / 6 , time = 0.0032545 m, info = A2  
update(86): ETA = 0.000097366 m, counter = 5 / 6 , time = 0.0033519 m, info = A1+A2  
get_cls(1066): start looping through inv_lst:  4 ['A0', 'A1', "A1'", '2A1'] 
get_cls(1070): looping through inv_lst: (4, 'A0', []) 
get_cls(1075): Since Mtype equals A0 we recover the classification from bas_lst. 
get_cls(1070): looping through inv_lst: (4, 'A1', [e1-e2]) 
get_part_roots(875): r_lst      = 4 [e1-e2, e2-e3, e1-e3, e0-e1-e2-e3] 
get_part_roots(876): s_lst      = 1 [e0-e1-e2-e3] 
get_part_roots(877): tq1_lst    = 2 [e2-e3, e1-e3] 
get_part_roots(878): tq_lst     = 0 [] 
get_part_roots(879): q_lst      = 0 [] 
get_part_roots(880):        M --> 0 [] 
get_part_roots(881): inv.Md_lst = A1 [e1-e2] , rank = 4 
import_cls(1015): importing:  (4, 'A1', 'A0') [e1-e2] == [e1-e2] 
get_cls(1086): looping through inv_lst continued after recursive call: (4, 'A1', [e1-e2]) 
get_cls(1094): bas1_lst = 1 [('A1', 'A0')] 
get_cls(1095): s_lst    = 1 [e0-e1-e2-e3] 
get_cls(1096): q_lst    = 0 [] 
update(86): ETA = 0.000011706 m, counter = 0 / 6 , time = 1.9511e-6 m, info = get_cls seeking bases in s_lst and q_lst:  (4, 'A1', 'A0')  
update(86): ETA = 0.00044535 m, counter = 1 / 6 , time = 0.000091020 m, info = get_cls seeking bases in s_lst and q_lst:  (4, 'A1', '{A1}')  
update(86): ETA = 0.00035553 m, counter = 2 / 6 , time = 0.00017990 m, info = get_cls seeking bases in s_lst and q_lst:  (4, 'A1', '{A1}')  
update(86): ETA = 0.00027875 m, counter = 3 / 6 , time = 0.00027282 m, info = get_cls seeking bases in s_lst and q_lst:  (4, 'A1', '2{A1}')  
update(86): ETA = 0.00025113 m, counter = 4 / 6 , time = 0.00039839 m, info = get_cls seeking bases in s_lst and q_lst:  (4, 'A1', '{A2}')  
update(86): ETA = 0.00023135 m, counter = 5 / 6 , time = 0.00062974 m, info = get_cls seeking bases in s_lst and q_lst:  (4, 'A1', '{A1}+{A2}')  
get_cls(1130): Setting Dynkin types of 3 items...please wait... 
update(86): ETA = 0.00040400 m, counter = 0 / 3 , time = 0.00013467 m, info = 4 A1 A0  
update(86): ETA = 0.00053987 m, counter = 1 / 3 , time = 0.00040460 m, info = 4 A1 A1  
update(86): ETA = 0.00016730 m, counter = 2 / 3 , time = 0.00057190 m, info = 4 A1 A0  
get_cls(1145): inv      = A1 , rank = 4 
get_cls(1146): bas1_lst = 1 [('A0', 1)] 
get_cls(1147): bas2_lst = 2 [('A0', 1), ('A1', 1)] 
get_cls(1148): bas3_lst = 1 [('A0', 1)] 
update(86): ETA = 8.3446e-8 m, counter = 0 / 2 , time = 8.3446e-8 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', 'A0', 'A0')  
get_cls(1168): 	 appended:  (4, 'A1', 'A0') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A0', 'A0') 
get_cls(1168): 	 appended:  (4, 'A1', '{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A1', 'A0') 
get_cls(1070): looping through inv_lst: (4, "A1'", [e0-e1-e2-e3]) 
get_part_roots(875): r_lst      = 4 [e1-e2, e2-e3, e1-e3, e0-e1-e2-e3] 
get_part_roots(876): s_lst      = 3 [e1-e2, e2-e3, e1-e3] 
get_part_roots(877): tq1_lst    = 0 [] 
get_part_roots(878): tq_lst     = 0 [] 
get_part_roots(879): q_lst      = 0 [] 
get_part_roots(880):        M --> 0 [] 
get_part_roots(881): inv.Md_lst = A1 [e0-e1-e2-e3] , rank = 4 
get_cls(1086): looping through inv_lst continued after recursive call: (4, "A1'", [e0-e1-e2-e3]) 
get_cls(1094): bas1_lst = 1 [('A1', 'A0')] 
get_cls(1095): s_lst    = 3 [e1-e2, e2-e3, e1-e3] 
get_cls(1096): q_lst    = 0 [] 
update(86): ETA = 0.000011706 m, counter = 0 / 6 , time = 1.9511e-6 m, info = get_cls seeking bases in s_lst and q_lst:  (4, "A1'", 'A0')  
update(86): ETA = 0.00044441 m, counter = 1 / 6 , time = 0.000090834 m, info = get_cls seeking bases in s_lst and q_lst:  (4, "A1'", '{A1}')  
update(86): ETA = 0.00044193 m, counter = 2 / 6 , time = 0.00020132 m, info = get_cls seeking bases in s_lst and q_lst:  (4, "A1'", '{A1}')  
update(86): ETA = 0.00028040 m, counter = 3 / 6 , time = 0.00029478 m, info = get_cls seeking bases in s_lst and q_lst:  (4, "A1'", '2{A1}')  
update(86): ETA = 0.00024780 m, counter = 4 / 6 , time = 0.00041868 m, info = get_cls seeking bases in s_lst and q_lst:  (4, "A1'", '{A2}')  
update(86): ETA = 0.00031468 m, counter = 5 / 6 , time = 0.00073337 m, info = get_cls seeking bases in s_lst and q_lst:  (4, "A1'", '{A1}+{A2}')  
get_cls(1130): Setting Dynkin types of 6 items...please wait... 
update(86): ETA = 0.00081031 m, counter = 0 / 6 , time = 0.00013505 m, info = 4 A1' A0  
update(86): ETA = 0.0013712 m, counter = 1 / 6 , time = 0.00040930 m, info = 4 A1' A1  
update(86): ETA = 0.0010440 m, counter = 2 / 6 , time = 0.00067030 m, info = 4 A1' A1  
update(86): ETA = 0.00075785 m, counter = 3 / 6 , time = 0.00092292 m, info = 4 A1' A1  
update(86): ETA = 0.00069880 m, counter = 4 / 6 , time = 0.0012723 m, info = 4 A1' A2  
update(86): ETA = 0.00015197 m, counter = 5 / 6 , time = 0.0014243 m, info = 4 A1' A0  
get_cls(1145): inv      = A1' , rank = 4 
get_cls(1146): bas1_lst = 1 [('A0', 1)] 
get_cls(1147): bas2_lst = 5 [('A0', 1), ('A1', 3), ('A2', 1)] 
get_cls(1148): bas3_lst = 1 [('A0', 1)] 
update(86): ETA = 1.3113e-7 m, counter = 0 / 5 , time = 1.3113e-7 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', 'A0', 'A0')  
get_cls(1168): 	 appended:  (4, "A1'", 'A0') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A0', 'A0') 
get_cls(1168): 	 appended:  (4, "A1'", '{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A1', 'A0') 
get_cls(1168): 	 appended:  (4, "A1'", '{A2}') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A2', 'A0') 
get_cls(1070): looping through inv_lst: (4, '2A1', [e1-e2, e0-e1-e2-e3]) 
get_part_roots(875): r_lst      = 4 [e1-e2, e2-e3, e1-e3, e0-e1-e2-e3] 
get_part_roots(876): s_lst      = 0 [] 
get_part_roots(877): tq1_lst    = 2 [e2-e3, e1-e3] 
get_part_roots(878): tq_lst     = 0 [] 
get_part_roots(879): q_lst      = 0 [] 
get_part_roots(880):        M --> 0 [] 
get_part_roots(881): inv.Md_lst = 2A1 [e1-e2, e0-e1-e2-e3] , rank = 4 
get_cls(1086): looping through inv_lst continued after recursive call: (4, '2A1', [e1-e2, e0-e1-e2-e3]) 
get_cls(1094): bas1_lst = 1 [('2A1', 'A0')] 
get_cls(1095): s_lst    = 0 [] 
get_cls(1096): q_lst    = 0 [] 
update(86): ETA = 6.4850e-6 m, counter = 0 / 6 , time = 1.0808e-6 m, info = get_cls seeking bases in s_lst and q_lst:  (4, '2A1', 'A0')  
update(86): ETA = 0.00044409 m, counter = 1 / 6 , time = 0.000089900 m, info = get_cls seeking bases in s_lst and q_lst:  (4, '2A1', '{A1}')  
update(86): ETA = 0.00019499 m, counter = 2 / 6 , time = 0.00013865 m, info = get_cls seeking bases in s_lst and q_lst:  (4, '2A1', '{A1}')  
update(86): ETA = 0.00027760 m, counter = 3 / 6 , time = 0.00023118 m, info = get_cls seeking bases in s_lst and q_lst:  (4, '2A1', '2{A1}')  
update(86): ETA = 0.00024734 m, counter = 4 / 6 , time = 0.00035485 m, info = get_cls seeking bases in s_lst and q_lst:  (4, '2A1', '{A2}')  
update(86): ETA = 0.00017930 m, counter = 5 / 6 , time = 0.00053415 m, info = get_cls seeking bases in s_lst and q_lst:  (4, '2A1', '{A1}+{A2}')  
get_cls(1130): Setting Dynkin types of 2 items...please wait... 
update(86): ETA = 0.00031200 m, counter = 0 / 2 , time = 0.00015600 m, info = 4 2A1 A0  
update(86): ETA = 0.00016630 m, counter = 1 / 2 , time = 0.00032230 m, info = 4 2A1 A0  
get_cls(1145): inv      = 2A1 , rank = 4 
get_cls(1146): bas1_lst = 1 [('A0', 1)] 
get_cls(1147): bas2_lst = 1 [('A0', 1)] 
get_cls(1148): bas3_lst = 1 [('A0', 1)] 
update(86): ETA = 9.9341e-8 m, counter = 0 / 1 , time = 9.9341e-8 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', 'A0', 'A0')  
get_cls(1168): 	 appended:  (4, '2A1', 'A0') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A0', 'A0') 
usecase__get_cls(68): Classification of root bases:
 rownr rank   Mtype            type  #-2  #-1 #fam #-2R  #-1R  #famR                                                                Md_lst                                                                                                                                  d_lst                                                                                                                                                                                                                                                                                                                                                   M
     3    4      A0              A0    0    6    3    0     6      3                                                                    []                                                                                                                                     []                                                                                                                                                                                                                                                                                            [(1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1)]
     4    4      A0            {A1}    1    4    2    1     4      2                                                                    []                                                                                                                                [e1-e2]                                                                                                                                                                                                                                                                                            [(1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1)]
     5    4      A0            {A1}    1    3    3    1     3      3                                                                    []                                                                                                                          [e0-e1-e2-e3]                                                                                                                                                                                                                                                                                            [(1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1)]
     6    4      A0           2{A1}    2    2    2    2     2      2                                                                    []                                                                                                                   [e1-e2, e0-e1-e2-e3]                                                                                                                                                                                                                                                                                            [(1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1)]
     7    4      A0            {A2}    2    2    1    2     2      1                                                                    []                                                                                                                         [e1-e2, e2-e3]                                                                                                                                                                                                                                                                                            [(1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1)]
     8    4      A0       {A1}+{A2}    3    1    1    3     1      1                                                                    []                                                                                                            [e1-e2, e2-e3, e0-e1-e2-e3]                                                                                                                                                                                                                                                                                            [(1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1)]
     9    4      A1              A0    0    6    3    0     2      1                                                               [e1-e2]                                                                                                                                     []                                                                                                                                                                                                                                                                                            [(1, 0, 0, 0), (0, 0, 1, 0), (0, 1, 0, 0), (0, 0, 0, 1)]
    10    4      A1            {A1}    1    3    3    1     1      1                                                               [e1-e2]                                                                                                                          [e0-e1-e2-e3]                                                                                                                                                                                                                                                                                            [(1, 0, 0, 0), (0, 0, 1, 0), (0, 1, 0, 0), (0, 0, 0, 1)]
    11    4     A1'              A0    0    6    3    0     0      3                                                         [e0-e1-e2-e3]                                                                                                                                     []                                                                                                                                                                                                                                                                                   [(2, 1, 1, 1), (-1, 0, -1, -1), (-1, -1, 0, -1), (-1, -1, -1, 0)]
    12    4     A1'            {A1}    1    4    2    1     0      2                                                         [e0-e1-e2-e3]                                                                                                                                [e1-e2]                                                                                                                                                                                                                                                                                   [(2, 1, 1, 1), (-1, 0, -1, -1), (-1, -1, 0, -1), (-1, -1, -1, 0)]
    13    4     A1'            {A2}    2    2    1    2     0      1                                                         [e0-e1-e2-e3]                                                                                                                         [e1-e2, e2-e3]                                                                                                                                                                                                                                                                                   [(2, 1, 1, 1), (-1, 0, -1, -1), (-1, -1, 0, -1), (-1, -1, -1, 0)]
    14    4     2A1              A0    0    6    3    0     0      1                                                  [e1-e2, e0-e1-e2-e3]                                                                                                                                     []                                                                                                                                                                                                                                                                                   [(2, 1, 1, 1), (-1, -1, 0, -1), (-1, 0, -1, -1), (-1, -1, -1, 0)]
 
usecase__get_cls(69): rank = 4 , len = 12 
usecase__get_cls(70): ################################################################################ 
get_cls(1059): rank = 5 
get_bas_lst(582): start 
update(86): ETA = 1.9201e-6 m, counter = 0 / 8 , time = 4.8002e-6 m, info = get_bas_lst rank = 5  
update(86): ETA = 0.000023505 m, counter = 0 / 16 , time = 0.000029381 m, info = get_bas_lst rank = 5  
update(86): ETA = 1.9264e-6 m, counter = 0 / 8 , time = 4.8161e-6 m, info = get_bas_lst rank = 5  
update(86): ETA = 3.5842e-7 m, counter = 0 / 2 , time = 3.5842e-6 m, info = get_bas_lst rank = 5  
get_inv_lst(666): rank = 5 
update(86): ETA = 4.7286e-7 m, counter = 0 / 7 , time = 6.7552e-8 m, info = A0  
get_inv_lst(680): Found type of involution:  A0 
update(86): ETA = 0.0075759 m, counter = 1 / 7 , time = 0.0012627 m, info = A1  
get_inv_lst(680): Found type of involution:  A1 
update(86): ETA = 0.0094134 m, counter = 2 / 7 , time = 0.0031454 m, info = 2A1  
get_inv_lst(680): Found type of involution:  2A1 
update(86): ETA = 0.0078832 m, counter = 3 / 7 , time = 0.0051162 m, info = A2  
update(86): ETA = 0.00044795 m, counter = 4 / 7 , time = 0.0052655 m, info = A1+A2  
update(86): ETA = 0.00034897 m, counter = 5 / 7 , time = 0.0054400 m, info = A3  
update(86): ETA = 0.00011823 m, counter = 6 / 7 , time = 0.0055582 m, info = A4  
get_cls(1066): start looping through inv_lst:  3 ['A0', 'A1', '2A1'] 
get_cls(1070): looping through inv_lst: (5, 'A0', []) 
get_cls(1075): Since Mtype equals A0 we recover the classification from bas_lst. 
get_cls(1070): looping through inv_lst: (5, 'A1', [e1-e2]) 
get_part_roots(875): r_lst      = 10 [e1-e2, e2-e3, e1-e3, e3-e4, e2-e4, e1-e4, e0-e1-e2-e3, e0-e1-e2-e4, e0-e1-e3-e4, e0-e2-e3-e4] 
get_part_roots(876): s_lst      = 3 [e3-e4, e0-e1-e2-e3, e0-e1-e2-e4] 
get_part_roots(877): tq1_lst    = 6 [e2-e3, e1-e3, e2-e4, e1-e4, e0-e1-e3-e4, e0-e2-e3-e4] 
get_part_roots(878): tq_lst     = 0 [] 
get_part_roots(879): q_lst      = 0 [] 
get_part_roots(880):        M --> 0 [] 
get_part_roots(881): inv.Md_lst = A1 [e1-e2] , rank = 5 
import_cls(1015): importing:  (5, 'A1', 'A0') [e1-e2] == [e1-e2] 
import_cls(1015): importing:  (5, 'A1', '{A1}') [e1-e2] == [e1-e2] 
get_cls(1086): looping through inv_lst continued after recursive call: (5, 'A1', [e1-e2]) 
get_cls(1094): bas1_lst = 2 [('A1', 'A0'), ('A1', 'A1')] 
get_cls(1095): s_lst    = 2 [e3-e4, e0-e1-e2-e4] 
get_cls(1096): q_lst    = 0 [] 
update(86): ETA = 6.6479e-6 m, counter = 0 / 7 , time = 9.4970e-7 m, info = get_cls seeking bases in s_lst and q_lst:  (5, 'A1', 'A0')  
update(86): ETA = 0.00085041 m, counter = 1 / 7 , time = 0.00014269 m, info = get_cls seeking bases in s_lst and q_lst:  (5, 'A1', '{A1}')  
update(86): ETA = 0.00096865 m, counter = 2 / 7 , time = 0.00033642 m, info = get_cls seeking bases in s_lst and q_lst:  (5, 'A1', '2{A1}')  
update(86): ETA = 0.00049901 m, counter = 3 / 7 , time = 0.00046117 m, info = get_cls seeking bases in s_lst and q_lst:  (5, 'A1', '{A2}')  
update(86): ETA = 0.00092244 m, counter = 4 / 7 , time = 0.00076865 m, info = get_cls seeking bases in s_lst and q_lst:  (5, 'A1', '{A1}+{A2}')  
update(86): ETA = 0.00044427 m, counter = 5 / 7 , time = 0.00099078 m, info = get_cls seeking bases in s_lst and q_lst:  (5, 'A1', '{A3}')  
update(86): ETA = 0.00034277 m, counter = 6 / 7 , time = 0.0013336 m, info = get_cls seeking bases in s_lst and q_lst:  (5, 'A1', '{A4}')  
get_cls(1130): Setting Dynkin types of 4 items...please wait... 
update(86): ETA = 0.000043790 m, counter = 0 / 4 , time = 0.000010947 m, info = 5 A1 A0  
update(86): ETA = 0.00010511 m, counter = 1 / 4 , time = 0.000045983 m, info = 5 A1 A1  
update(86): ETA = 0.000070564 m, counter = 2 / 4 , time = 0.000081265 m, info = 5 A1 A1  
update(86): ETA = 0.000024617 m, counter = 3 / 4 , time = 0.00010588 m, info = 5 A1 A0  
get_cls(1145): inv      = A1 , rank = 5 
get_cls(1146): bas1_lst = 2 [('A0', 1), ('A1', 1)] 
get_cls(1147): bas2_lst = 3 [('A0', 1), ('A1', 2)] 
get_cls(1148): bas3_lst = 1 [('A0', 1)] 
update(86): ETA = 1.1524e-7 m, counter = 0 / 6 , time = 1.1524e-7 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', 'A0', 'A0')  
get_cls(1168): 	 appended:  (5, 'A1', 'A0') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A0', 'A0') 
get_cls(1168): 	 appended:  (5, 'A1', '{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A1', 'A0') 
get_cls(1168): 	 appended:  (5, 'A1', '{A2}') , ( bas1.type, bas2.type, bas3.type ) = ('A1', 'A1', 'A0') 
get_cls(1070): looping through inv_lst: (5, '2A1', [e1-e2, e3-e4]) 
get_part_roots(875): r_lst      = 10 [e1-e2, e2-e3, e1-e3, e3-e4, e2-e4, e1-e4, e0-e1-e2-e3, e0-e1-e2-e4, e0-e1-e3-e4, e0-e2-e3-e4] 
get_part_roots(876): s_lst      = 0 [] 
get_part_roots(877): tq1_lst    = 8 [e2-e3, e1-e3, e2-e4, e1-e4, e0-e1-e2-e3, e0-e1-e2-e4, e0-e1-e3-e4, e0-e2-e3-e4] 
get_part_roots(878): tq_lst     = 4 [e2-e3, e1-e3, e2-e4, e1-e4] 
get_part_roots(879): q_lst      = 2 [e2-e3, e1-e3] 
get_part_roots(880):        M --> 2 [e1-e4, e2-e4] 
get_part_roots(881): inv.Md_lst = 2A1 [e1-e2, e3-e4] , rank = 5 
get_cls(1086): looping through inv_lst continued after recursive call: (5, '2A1', [e1-e2, e3-e4]) 
get_cls(1094): bas1_lst = 1 [('2A1', 'A0')] 
get_cls(1095): s_lst    = 0 [] 
get_cls(1096): q_lst    = 2 [e2-e3, e1-e3] 
update(86): ETA = 7.2320e-6 m, counter = 0 / 7 , time = 1.0331e-6 m, info = get_cls seeking bases in s_lst and q_lst:  (5, '2A1', 'A0')  
update(86): ETA = 0.00085490 m, counter = 1 / 7 , time = 0.00014352 m, info = get_cls seeking bases in s_lst and q_lst:  (5, '2A1', '{A1}')  
update(86): ETA = 0.00089534 m, counter = 2 / 7 , time = 0.00032258 m, info = get_cls seeking bases in s_lst and q_lst:  (5, '2A1', '2{A1}')  
update(86): ETA = 0.00063999 m, counter = 3 / 7 , time = 0.00048258 m, info = get_cls seeking bases in s_lst and q_lst:  (5, '2A1', '{A2}')  
update(86): ETA = 0.00065160 m, counter = 4 / 7 , time = 0.00069978 m, info = get_cls seeking bases in s_lst and q_lst:  (5, '2A1', '{A1}+{A2}')  
update(86): ETA = 0.00044810 m, counter = 5 / 7 , time = 0.00092383 m, info = get_cls seeking bases in s_lst and q_lst:  (5, '2A1', '{A3}')  
update(86): ETA = 0.00034453 m, counter = 6 / 7 , time = 0.0012684 m, info = get_cls seeking bases in s_lst and q_lst:  (5, '2A1', '{A4}')  
get_cls(1130): Setting Dynkin types of 4 items...please wait... 
update(86): ETA = 0.00011473 m, counter = 0 / 4 , time = 0.000028682 m, info = 5 2A1 A0  
update(86): ETA = 0.00012676 m, counter = 1 / 4 , time = 0.000070933 m, info = 5 2A1 A0  
update(86): ETA = 0.00014093 m, counter = 2 / 4 , time = 0.00014140 m, info = 5 2A1 2A1  
update(86): ETA = 0.000070751 m, counter = 3 / 4 , time = 0.00021215 m, info = 5 2A1 2A1  
get_cls(1145): inv      = 2A1 , rank = 5 
get_cls(1146): bas1_lst = 1 [('A0', 1)] 
get_cls(1147): bas2_lst = 1 [('A0', 1)] 
get_cls(1148): bas3_lst = 3 [('2A1', 2), ('A0', 1)] 
update(86): ETA = 1.3510e-7 m, counter = 0 / 3 , time = 1.3510e-7 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', 'A0', 'A0')  
get_cls(1168): 	 appended:  (5, '2A1', 'A0') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A0', 'A0') 
get_cls(1168): 	 appended:  (5, '2A1', '2A1') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A0', '2A1') 
usecase__get_cls(68): Classification of root bases:
 rownr rank   Mtype            type  #-2  #-1 #fam #-2R  #-1R  #famR                                                                Md_lst                                                                                                                                  d_lst                                                                                                                                                                                                                                                                                                                                                   M
    15    5      A0              A0    0   10    5    0    10      5                                                                    []                                                                                                                                     []                                                                                                                                                                                                                                                               [(1, 0, 0, 0, 0), (0, 1, 0, 0, 0), (0, 0, 1, 0, 0), (0, 0, 0, 1, 0), (0, 0, 0, 0, 1)]
    16    5      A0            {A1}    1    7    4    1     7      4                                                                    []                                                                                                                                [e1-e2]                                                                                                                                                                                                                                                               [(1, 0, 0, 0, 0), (0, 1, 0, 0, 0), (0, 0, 1, 0, 0), (0, 0, 0, 1, 0), (0, 0, 0, 0, 1)]
    17    5      A0           2{A1}    2    5    3    2     5      3                                                                    []                                                                                                                         [e1-e2, e3-e4]                                                                                                                                                                                                                                                               [(1, 0, 0, 0, 0), (0, 1, 0, 0, 0), (0, 0, 1, 0, 0), (0, 0, 0, 1, 0), (0, 0, 0, 0, 1)]
    18    5      A0            {A2}    2    4    3    2     4      3                                                                    []                                                                                                                         [e1-e2, e2-e3]                                                                                                                                                                                                                                                               [(1, 0, 0, 0, 0), (0, 1, 0, 0, 0), (0, 0, 1, 0, 0), (0, 0, 0, 1, 0), (0, 0, 0, 0, 1)]
    19    5      A0       {A1}+{A2}    3    3    2    3     3      2                                                                    []                                                                                                            [e1-e2, e2-e3, e0-e1-e2-e3]                                                                                                                                                                                                                                                               [(1, 0, 0, 0, 0), (0, 1, 0, 0, 0), (0, 0, 1, 0, 0), (0, 0, 0, 1, 0), (0, 0, 0, 0, 1)]
    20    5      A0            {A3}    3    2    2    3     2      2                                                                    []                                                                                                                  [e1-e2, e2-e3, e3-e4]                                                                                                                                                                                                                                                               [(1, 0, 0, 0, 0), (0, 1, 0, 0, 0), (0, 0, 1, 0, 0), (0, 0, 0, 1, 0), (0, 0, 0, 0, 1)]
    21    5      A0            {A4}    4    1    1    4     1      1                                                                    []                                                                                                     [e1-e2, e2-e3, e3-e4, e0-e1-e2-e3]                                                                                                                                                                                                                                                               [(1, 0, 0, 0, 0), (0, 1, 0, 0, 0), (0, 0, 1, 0, 0), (0, 0, 0, 1, 0), (0, 0, 0, 0, 1)]
    22    5      A1              A0    0   10    5    0     4      3                                                               [e1-e2]                                                                                                                                     []                                                                                                                                                                                                                                                               [(1, 0, 0, 0, 0), (0, 0, 1, 0, 0), (0, 1, 0, 0, 0), (0, 0, 0, 1, 0), (0, 0, 0, 0, 1)]
    23    5      A1            {A1}    1    7    4    1     3      2                                                               [e1-e2]                                                                                                                                [e3-e4]                                                                                                                                                                                                                                                               [(1, 0, 0, 0, 0), (0, 0, 1, 0, 0), (0, 1, 0, 0, 0), (0, 0, 0, 1, 0), (0, 0, 0, 0, 1)]
    24    5      A1            {A2}    2    4    3    2     2      1                                                               [e1-e2]                                                                                                                   [e0-e1-e2-e3, e3-e4]                                                                                                                                                                                                                                                               [(1, 0, 0, 0, 0), (0, 0, 1, 0, 0), (0, 1, 0, 0, 0), (0, 0, 0, 1, 0), (0, 0, 0, 0, 1)]
    25    5     2A1              A0    0   10    5    0     2      1                                                        [e1-e2, e3-e4]                                                                                                                                     []                                                                                                                                                                                                                                                               [(1, 0, 0, 0, 0), (0, 0, 1, 0, 0), (0, 1, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0)]
    26    5     2A1             2A1    2    5    3    0     1      1                                                        [e1-e2, e3-e4]                                                                                                                         [e2-e3, e1-e4]                                                                                                                                                                                                                                                               [(1, 0, 0, 0, 0), (0, 0, 1, 0, 0), (0, 1, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0)]
 
usecase__get_cls(69): rank = 5 , len = 12 
usecase__get_cls(70): ################################################################################ 
get_cls(1059): rank = 6 
get_bas_lst(582): start 
update(86): ETA = 3.7575e-6 m, counter = 0 / 16 , time = 4.6968e-6 m, info = get_bas_lst rank = 6  
update(86): ETA = 0.000012156 m, counter = 0 / 64 , time = 3.7988e-6 m, info = get_bas_lst rank = 6  
update(86): ETA = 0.12895 m, counter = 20 / 64 , time = 0.058619 m, info = get_bas_lst rank = 6  
update(86): ETA = 0.056126 m, counter = 40 / 64 , time = 0.10539 m, info = get_bas_lst rank = 6  
update(86): ETA = 0.0049188 m, counter = 60 / 64 , time = 0.12998 m, info = get_bas_lst rank = 6  
update(86): ETA = 2.8801e-6 m, counter = 0 / 16 , time = 3.6001e-6 m, info = get_bas_lst rank = 6  
update(86): ETA = 7.2320e-7 m, counter = 0 / 4 , time = 3.6160e-6 m, info = get_bas_lst rank = 6  
get_inv_lst(666): rank = 6 
update(86): ETA = 1.0173e-6 m, counter = 0 / 16 , time = 6.3578e-8 m, info = A0  
get_inv_lst(680): Found type of involution:  A0 
update(86): ETA = 0.060845 m, counter = 1 / 16 , time = 0.0040564 m, info = A1  
get_inv_lst(680): Found type of involution:  A1 
update(86): ETA = 0.064876 m, counter = 2 / 16 , time = 0.0086904 m, info = 2A1  
get_inv_lst(680): Found type of involution:  2A1 
update(86): ETA = 0.055036 m, counter = 3 / 16 , time = 0.012924 m, info = 2A1  
get_inv_lst(680): Found type of involution:  2A1 
update(86): ETA = 0.050281 m, counter = 4 / 16 , time = 0.017114 m, info = A2  
update(86): ETA = 0.0016942 m, counter = 5 / 16 , time = 0.017268 m, info = 3A1  
get_inv_lst(680): Found type of involution:  3A1 
update(86): ETA = 0.042566 m, counter = 6 / 16 , time = 0.021525 m, info = A1+A2  
update(86): ETA = 0.0016434 m, counter = 7 / 16 , time = 0.021707 m, info = A3  
update(86): ETA = 0.0016455 m, counter = 8 / 16 , time = 0.021913 m, info = A3  
update(86): ETA = 0.0010804 m, counter = 9 / 16 , time = 0.022067 m, info = 2A1+A2  
update(86): ETA = 0.00090241 m, counter = 10 / 16 , time = 0.022218 m, info = 4A1  
get_inv_lst(680): Found type of involution:  4A1 
update(86): ETA = 0.021444 m, counter = 11 / 16 , time = 0.026506 m, info = A1+A3  
update(86): ETA = 0.0010233 m, counter = 12 / 16 , time = 0.026762 m, info = A4  
update(86): ETA = 0.00063680 m, counter = 13 / 16 , time = 0.026975 m, info = D4  
get_inv_lst(680): Found type of involution:  D4 
get_inv_lst(695): 	Ambitious type: D4 == 4A1  inv>inv_prv:  True  ambitious types = ['D4', '4A1'] 
update(86): ETA = 0.0091042 m, counter = 14 / 16 , time = 0.031527 m, info = 2A1+A3  
update(86): ETA = 0.00010573 m, counter = 15 / 16 , time = 0.031632 m, info = D5  
get_cls(1066): start looping through inv_lst:  6 ['A0', 'A1', '2A1', "2A1'", '3A1', 'D4'] 
get_cls(1070): looping through inv_lst: (6, 'A0', []) 
get_cls(1075): Since Mtype equals A0 we recover the classification from bas_lst. 
get_cls(1070): looping through inv_lst: (6, 'A1', [e1-e2]) 
get_part_roots(875): r_lst      = 20 [e1-e2, e2-e3, e1-e3, e3-e4, e2-e4, e1-e4, e4-e5, e3-e5, e2-e5, e1-e5, e0-e1-e2-e3, e0-e1-e2-e4, e0-e1-e3-e4, e0-e2-e3-e4, e0-e1-e2-e5, e0-e1-e3-e5, e0-e2-e3-e5, e0-e1-e4-e5, e0-e2-e4-e5, e0-e3-e4-e5] 
get_part_roots(876): s_lst      = 7 [e3-e4, e4-e5, e3-e5, e0-e1-e2-e3, e0-e1-e2-e4, e0-e1-e2-e5, e0-e3-e4-e5] 
get_part_roots(877): tq1_lst    = 12 [e2-e3, e1-e3, e2-e4, e1-e4, e2-e5, e1-e5, e0-e1-e3-e4, e0-e2-e3-e4, e0-e1-e3-e5, e0-e2-e3-e5, e0-e1-e4-e5, e0-e2-e4-e5] 
get_part_roots(878): tq_lst     = 0 [] 
get_part_roots(879): q_lst      = 0 [] 
get_part_roots(880):        M --> 0 [] 
get_part_roots(881): inv.Md_lst = A1 [e1-e2] , rank = 6 
import_cls(1015): importing:  (6, 'A1', 'A0') [e1-e2] == [e1-e2] 
import_cls(1015): importing:  (6, 'A1', '{A1}') [e1-e2] == [e1-e2] 
import_cls(1015): importing:  (6, 'A1', '{A2}') [e1-e2] == [e1-e2] 
get_cls(1086): looping through inv_lst continued after recursive call: (6, 'A1', [e1-e2]) 
get_cls(1094): bas1_lst = 3 [('A1', 'A0'), ('A1', 'A1'), ('A1', 'A2')] 
get_cls(1095): s_lst    = 4 [e4-e5, e3-e5, e0-e1-e2-e5, e0-e3-e4-e5] 
get_cls(1096): q_lst    = 0 [] 
update(86): ETA = 0.000016530 m, counter = 0 / 16 , time = 1.0331e-6 m, info = get_cls seeking bases in s_lst and q_lst:  (6, 'A1', 'A0')  
update(86): ETA = 0.0036025 m, counter = 1 / 16 , time = 0.00024120 m, info = get_cls seeking bases in s_lst and q_lst:  (6, 'A1', '{A1}')  
update(86): ETA = 0.0048596 m, counter = 2 / 16 , time = 0.00058832 m, info = get_cls seeking bases in s_lst and q_lst:  (6, 'A1', '2{A1}')  
update(86): ETA = 0.0072726 m, counter = 3 / 16 , time = 0.0011478 m, info = get_cls seeking bases in s_lst and q_lst:  (6, 'A1', '2{A1}')  
update(86): ETA = 0.0015316 m, counter = 4 / 16 , time = 0.0012754 m, info = get_cls seeking bases in s_lst and q_lst:  (6, 'A1', '{A2}')  
update(86): ETA = 0.0050785 m, counter = 5 / 16 , time = 0.0017371 m, info = get_cls seeking bases in s_lst and q_lst:  (6, 'A1', '3{A1}')  
update(86): ETA = 0.0084188 m, counter = 6 / 16 , time = 0.0025790 m, info = get_cls seeking bases in s_lst and q_lst:  (6, 'A1', '{A1}+{A2}')  
update(86): ETA = 0.0048192 m, counter = 7 / 16 , time = 0.0031144 m, info = get_cls seeking bases in s_lst and q_lst:  (6, 'A1', '{A3}')  
update(86): ETA = 0.0042849 m, counter = 8 / 16 , time = 0.0036500 m, info = get_cls seeking bases in s_lst and q_lst:  (6, 'A1', '{A3}')  
update(86): ETA = 0.0017878 m, counter = 9 / 16 , time = 0.0039054 m, info = get_cls seeking bases in s_lst and q_lst:  (6, 'A1', '2{A1}+{A2}')  
update(86): ETA = 0.0013539 m, counter = 10 / 16 , time = 0.0041311 m, info = get_cls seeking bases in s_lst and q_lst:  (6, 'A1', '4{A1}')  
update(86): ETA = 0.0014978 m, counter = 11 / 16 , time = 0.0044307 m, info = get_cls seeking bases in s_lst and q_lst:  (6, 'A1', '{A1}+{A3}')  
update(86): ETA = 0.0040811 m, counter = 12 / 16 , time = 0.0054509 m, info = get_cls seeking bases in s_lst and q_lst:  (6, 'A1', '{A4}')  
update(86): ETA = 0.0010630 m, counter = 13 / 16 , time = 0.0058052 m, info = get_cls seeking bases in s_lst and q_lst:  (6, 'A1', '{D4}')  
update(86): ETA = 0.00076194 m, counter = 14 / 16 , time = 0.0061862 m, info = get_cls seeking bases in s_lst and q_lst:  (6, 'A1', '2{A1}+{A3}')  
update(86): ETA = 0.00050182 m, counter = 15 / 16 , time = 0.0066880 m, info = get_cls seeking bases in s_lst and q_lst:  (6, 'A1', '{D5}')  
get_cls(1130): Setting Dynkin types of 9 items...please wait... 
update(86): ETA = 0.0031923 m, counter = 0 / 9 , time = 0.00035470 m, info = 6 A1 A0  
update(86): ETA = 0.0053752 m, counter = 1 / 9 , time = 0.0010266 m, info = 6 A1 A1  
update(86): ETA = 0.0046439 m, counter = 2 / 9 , time = 0.0016900 m, info = 6 A1 A1  
update(86): ETA = 0.0041454 m, counter = 3 / 9 , time = 0.0023809 m, info = 6 A1 A1  
update(86): ETA = 0.0033368 m, counter = 4 / 9 , time = 0.0030483 m, info = 6 A1 A1  
update(86): ETA = 0.0035607 m, counter = 5 / 9 , time = 0.0039385 m, info = 6 A1 2A1  
update(86): ETA = 0.0026441 m, counter = 6 / 9 , time = 0.0048198 m, info = 6 A1 2A1  
update(86): ETA = 0.0017537 m, counter = 7 / 9 , time = 0.0056967 m, info = 6 A1 2A1  
update(86): ETA = 0.00036643 m, counter = 8 / 9 , time = 0.0060631 m, info = 6 A1 A0  
get_cls(1145): inv      = A1 , rank = 6 
get_cls(1146): bas1_lst = 3 [('A0', 1), ('A1', 1), ('A2', 1)] 
get_cls(1147): bas2_lst = 8 [('2A1', 3), ('A0', 1), ('A1', 4)] 
get_cls(1148): bas3_lst = 1 [('A0', 1)] 
update(86): ETA = 8.1062e-7 m, counter = 0 / 24 , time = 6.7552e-8 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', 'A0', 'A0')  
get_cls(1168): 	 appended:  (6, 'A1', 'A0') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A0', 'A0') 
get_cls(1168): 	 appended:  (6, 'A1', '{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A1', 'A0') 
update(86): ETA = 0.054053 m, counter = 2 / 24 , time = 0.0049139 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', 'A1', 'A0')  
update(86): ETA = 0.044336 m, counter = 4 / 24 , time = 0.0093476 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', 'A1', 'A0')  
get_cls(1168): 	 appended:  (6, 'A1', '{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A1', 'A0') 
get_cls(1168): 	 appended:  (6, 'A1', '2{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A0', '2A1', 'A0') 
update(86): ETA = 0.039471 m, counter = 6 / 24 , time = 0.013733 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', '2A1', 'A0')  
update(86): ETA = 0.032537 m, counter = 8 / 24 , time = 0.017800 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A1', 'A0', 'A0')  
get_cls(1168): 	 appended:  (6, 'A1', '{A2}') , ( bas1.type, bas2.type, bas3.type ) = ('A1', 'A1', 'A0') 
update(86): ETA = 0.029453 m, counter = 10 / 24 , time = 0.022008 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A1', 'A1', 'A0')  
get_cls(1168): 	 appended:  (6, 'A1', '2{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A1', 'A1', 'A0') 
update(86): ETA = 0.011636 m, counter = 12 / 24 , time = 0.023947 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A1', 'A1', 'A0')  
get_cls(1168): 	 appended:  (6, 'A1', '{A1}+{A2}') , ( bas1.type, bas2.type, bas3.type ) = ('A1', '2A1', 'A0') 
update(86): ETA = 0.020798 m, counter = 14 / 24 , time = 0.028107 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A1', '2A1', 'A0')  
get_cls(1168): 	 appended:  (6, 'A1', '3{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A1', '2A1', 'A0') 
update(86): ETA = 0.0083915 m, counter = 16 / 24 , time = 0.030205 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A2', 'A0', 'A0')  
get_cls(1168): 	 appended:  (6, 'A1', '{A3}') , ( bas1.type, bas2.type, bas3.type ) = ('A2', 'A1', 'A0') 
update(86): ETA = 0.011214 m, counter = 18 / 24 , time = 0.033943 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A2', 'A1', 'A0')  
update(86): ETA = 0.00013374 m, counter = 20 / 24 , time = 0.034010 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A2', 'A1', 'A0')  
get_cls(1168): 	 appended:  (6, 'A1', '{A1}+{A3}') , ( bas1.type, bas2.type, bas3.type ) = ('A2', '2A1', 'A0') 
update(86): ETA = 0.0041380 m, counter = 22 / 24 , time = 0.038148 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A2', '2A1', 'A0')  
get_cls(1070): looping through inv_lst: (6, '2A1', [e1-e2, e3-e4]) 
get_part_roots(875): r_lst      = 20 [e1-e2, e2-e3, e1-e3, e3-e4, e2-e4, e1-e4, e4-e5, e3-e5, e2-e5, e1-e5, e0-e1-e2-e3, e0-e1-e2-e4, e0-e1-e3-e4, e0-e2-e3-e4, e0-e1-e2-e5, e0-e1-e3-e5, e0-e2-e3-e5, e0-e1-e4-e5, e0-e2-e4-e5, e0-e3-e4-e5] 
get_part_roots(876): s_lst      = 2 [e0-e1-e2-e5, e0-e3-e4-e5] 
get_part_roots(877): tq1_lst    = 16 [e2-e3, e1-e3, e2-e4, e1-e4, e4-e5, e3-e5, e2-e5, e1-e5, e0-e1-e2-e3, e0-e1-e2-e4, e0-e1-e3-e4, e0-e2-e3-e4, e0-e1-e3-e5, e0-e2-e3-e5, e0-e1-e4-e5, e0-e2-e4-e5] 
get_part_roots(878): tq_lst     = 8 [e2-e3, e1-e3, e2-e4, e1-e4, e0-e1-e3-e5, e0-e2-e3-e5, e0-e1-e4-e5, e0-e2-e4-e5] 
get_part_roots(879): q_lst      = 4 [e2-e3, e1-e3, e0-e1-e3-e5, e0-e2-e3-e5] 
get_part_roots(880):        M --> 4 [e1-e4, e2-e4, e0-e2-e4-e5, e0-e1-e4-e5] 
get_part_roots(881): inv.Md_lst = 2A1 [e1-e2, e3-e4] , rank = 6 
import_cls(1015): importing:  (6, '2A1', 'A0') [e1-e2, e3-e4] == [e1-e2, e3-e4] 
import_cls(1015): importing:  (6, '2A1', '2A1') [e1-e2, e3-e4] == [e1-e2, e3-e4] 
get_cls(1086): looping through inv_lst continued after recursive call: (6, '2A1', [e1-e2, e3-e4]) 
get_cls(1094): bas1_lst = 2 [('2A1', 'A0'), ('2A1', '2A1')] 
get_cls(1095): s_lst    = 2 [e0-e1-e2-e5, e0-e3-e4-e5] 
get_cls(1096): q_lst    = 2 [e0-e1-e3-e5, e0-e2-e3-e5] 
update(86): ETA = 0.000032806 m, counter = 0 / 16 , time = 2.0504e-6 m, info = get_cls seeking bases in s_lst and q_lst:  (6, '2A1', 'A0')  
update(86): ETA = 0.0036427 m, counter = 1 / 16 , time = 0.00024490 m, info = get_cls seeking bases in s_lst and q_lst:  (6, '2A1', '{A1}')  
update(86): ETA = 0.0053958 m, counter = 2 / 16 , time = 0.00063032 m, info = get_cls seeking bases in s_lst and q_lst:  (6, '2A1', '2{A1}')  
update(86): ETA = 0.0050100 m, counter = 3 / 16 , time = 0.0010157 m, info = get_cls seeking bases in s_lst and q_lst:  (6, '2A1', '2{A1}')  
update(86): ETA = 0.0015434 m, counter = 4 / 16 , time = 0.0011443 m, info = get_cls seeking bases in s_lst and q_lst:  (6, '2A1', '{A2}')  
update(86): ETA = 0.0046865 m, counter = 5 / 16 , time = 0.0015704 m, info = get_cls seeking bases in s_lst and q_lst:  (6, '2A1', '3{A1}')  
update(86): ETA = 0.0018777 m, counter = 6 / 16 , time = 0.0017581 m, info = get_cls seeking bases in s_lst and q_lst:  (6, '2A1', '{A1}+{A2}')  
update(86): ETA = 0.0020714 m, counter = 7 / 16 , time = 0.0019883 m, info = get_cls seeking bases in s_lst and q_lst:  (6, '2A1', '{A3}')  
update(86): ETA = 0.0036366 m, counter = 8 / 16 , time = 0.0024429 m, info = get_cls seeking bases in s_lst and q_lst:  (6, '2A1', '{A3}')  
update(86): ETA = 0.0017918 m, counter = 9 / 16 , time = 0.0026988 m, info = get_cls seeking bases in s_lst and q_lst:  (6, '2A1', '2{A1}+{A2}')  
update(86): ETA = 0.0013608 m, counter = 10 / 16 , time = 0.0029256 m, info = get_cls seeking bases in s_lst and q_lst:  (6, '2A1', '4{A1}')  
update(86): ETA = 0.0015009 m, counter = 11 / 16 , time = 0.0032258 m, info = get_cls seeking bases in s_lst and q_lst:  (6, '2A1', '{A1}+{A3}')  
update(86): ETA = 0.0014182 m, counter = 12 / 16 , time = 0.0035804 m, info = get_cls seeking bases in s_lst and q_lst:  (6, '2A1', '{A4}')  
update(86): ETA = 0.0010669 m, counter = 13 / 16 , time = 0.0039360 m, info = get_cls seeking bases in s_lst and q_lst:  (6, '2A1', '{D4}')  
update(86): ETA = 0.00076446 m, counter = 14 / 16 , time = 0.0043182 m, info = get_cls seeking bases in s_lst and q_lst:  (6, '2A1', '2{A1}+{A3}')  
update(86): ETA = 0.00050439 m, counter = 15 / 16 , time = 0.0048226 m, info = get_cls seeking bases in s_lst and q_lst:  (6, '2A1', '{D5}')  
get_cls(1130): Setting Dynkin types of 7 items...please wait... 
update(86): ETA = 0.0026083 m, counter = 0 / 7 , time = 0.00037262 m, info = 6 2A1 A0  
update(86): ETA = 0.0042392 m, counter = 1 / 7 , time = 0.0010791 m, info = 6 2A1 A1  
update(86): ETA = 0.0034309 m, counter = 2 / 7 , time = 0.0017653 m, info = 6 2A1 A1  
update(86): ETA = 0.0036481 m, counter = 3 / 7 , time = 0.0026774 m, info = 6 2A1 2A1  
update(86): ETA = 0.0011564 m, counter = 4 / 7 , time = 0.0030628 m, info = 6 2A1 A0  
update(86): ETA = 0.0018467 m, counter = 5 / 7 , time = 0.0039862 m, info = 6 2A1 2A1  
update(86): ETA = 0.00091356 m, counter = 6 / 7 , time = 0.0048997 m, info = 6 2A1 2A1  
get_cls(1145): inv      = 2A1 , rank = 6 
get_cls(1146): bas1_lst = 2 [('2A1', 1), ('A0', 1)] 
get_cls(1147): bas2_lst = 4 [('2A1', 1), ('A0', 1), ('A1', 2)] 
get_cls(1148): bas3_lst = 3 [('2A1', 2), ('A0', 1)] 
update(86): ETA = 1.1921e-6 m, counter = 0 / 24 , time = 9.9341e-8 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', 'A0', 'A0')  
get_cls(1168): 	 appended:  (6, '2A1', 'A0') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A0', 'A0') 
get_cls(1168): 	 appended:  (6, '2A1', '2A1') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A0', '2A1') 
update(86): ETA = 0.052880 m, counter = 2 / 24 , time = 0.0048074 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', 'A0', '2A1')  
get_cls(1168): 	 appended:  (6, '2A1', '{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A1', 'A0') 
update(86): ETA = 0.043202 m, counter = 4 / 24 , time = 0.0091276 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', 'A1', '2A1')  
update(86): ETA = 0.00034200 m, counter = 6 / 24 , time = 0.0091656 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', 'A1', 'A0')  
update(86): ETA = 0.018130 m, counter = 8 / 24 , time = 0.011432 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', 'A1', '2A1')  
get_cls(1168): 	 appended:  (6, '2A1', '2{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A0', '2A1', 'A0') 
update(86): ETA = 0.015094 m, counter = 10 / 24 , time = 0.013588 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', '2A1', '2A1')  
update(86): ETA = 0.00029600 m, counter = 12 / 24 , time = 0.013637 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('2A1', 'A0', 'A0')  
update(86): ETA = 0.010352 m, counter = 14 / 24 , time = 0.015708 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('2A1', 'A0', '2A1')  
get_cls(1168): 	 appended:  (6, '2A1', '4A1') , ( bas1.type, bas2.type, bas3.type ) = ('2A1', 'A0', '2A1') 
get_cls(1168): 	 appended:  (6, '2A1', '[A3]') , ( bas1.type, bas2.type, bas3.type ) = ('2A1', 'A1', 'A0') 
update(86): ETA = 0.017320 m, counter = 16 / 24 , time = 0.020038 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('2A1', 'A1', '2A1')  
update(86): ETA = 0.00036005 m, counter = 18 / 24 , time = 0.020158 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('2A1', 'A1', 'A0')  
update(86): ETA = 0.000099198 m, counter = 20 / 24 , time = 0.020207 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('2A1', 'A1', '2A1')  
update(86): ETA = 0.000055687 m, counter = 22 / 24 , time = 0.020263 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('2A1', '2A1', '2A1')  
get_cls(1070): looping through inv_lst: (6, "2A1'", [e4-e5, e0-e1-e2-e3]) 
get_part_roots(875): r_lst      = 20 [e1-e2, e2-e3, e1-e3, e3-e4, e2-e4, e1-e4, e4-e5, e3-e5, e2-e5, e1-e5, e0-e1-e2-e3, e0-e1-e2-e4, e0-e1-e3-e4, e0-e2-e3-e4, e0-e1-e2-e5, e0-e1-e3-e5, e0-e2-e3-e5, e0-e1-e4-e5, e0-e2-e4-e5, e0-e3-e4-e5] 
get_part_roots(876): s_lst      = 6 [e1-e2, e2-e3, e1-e3, e0-e1-e4-e5, e0-e2-e4-e5, e0-e3-e4-e5] 
get_part_roots(877): tq1_lst    = 12 [e3-e4, e2-e4, e1-e4, e3-e5, e2-e5, e1-e5, e0-e1-e2-e4, e0-e1-e3-e4, e0-e2-e3-e4, e0-e1-e2-e5, e0-e1-e3-e5, e0-e2-e3-e5] 
get_part_roots(878): tq_lst     = 12 [e3-e4, e2-e4, e1-e4, e3-e5, e2-e5, e1-e5, e0-e1-e2-e4, e0-e1-e3-e4, e0-e2-e3-e4, e0-e1-e2-e5, e0-e1-e3-e5, e0-e2-e3-e5] 
get_part_roots(879): q_lst      = 6 [e3-e4, e2-e4, e1-e4, e3-e5, e2-e5, e1-e5] 
get_part_roots(880):        M --> 6 [e0-e1-e2-e5, e0-e1-e3-e5, e0-e2-e3-e5, e0-e1-e2-e4, e0-e1-e3-e4, e0-e2-e3-e4] 
get_part_roots(881): inv.Md_lst = 2A1 [e4-e5, e0-e1-e2-e3] , rank = 6 
get_cls(1086): looping through inv_lst continued after recursive call: (6, "2A1'", [e4-e5, e0-e1-e2-e3]) 
get_cls(1094): bas1_lst = 1 [('2A1', 'A0')] 
get_cls(1095): s_lst    = 6 [e1-e2, e2-e3, e1-e3, e0-e1-e4-e5, e0-e2-e4-e5, e0-e3-e4-e5] 
get_cls(1096): q_lst    = 6 [e3-e4, e2-e4, e1-e4, e3-e5, e2-e5, e1-e5] 
update(86): ETA = 0.000031726 m, counter = 0 / 16 , time = 1.9828e-6 m, info = get_cls seeking bases in s_lst and q_lst:  (6, "2A1'", 'A0')  
update(86): ETA = 0.0036322 m, counter = 1 / 16 , time = 0.00024413 m, info = get_cls seeking bases in s_lst and q_lst:  (6, "2A1'", '{A1}')  
update(86): ETA = 0.010903 m, counter = 2 / 16 , time = 0.0010230 m, info = get_cls seeking bases in s_lst and q_lst:  (6, "2A1'", '2{A1}')  
update(86): ETA = 0.029698 m, counter = 3 / 16 , time = 0.0033074 m, info = get_cls seeking bases in s_lst and q_lst:  (6, "2A1'", '2{A1}')  
update(86): ETA = 0.0015502 m, counter = 4 / 16 , time = 0.0034366 m, info = get_cls seeking bases in s_lst and q_lst:  (6, "2A1'", '{A2}')  
update(86): ETA = 0.012241 m, counter = 5 / 16 , time = 0.0045495 m, info = get_cls seeking bases in s_lst and q_lst:  (6, "2A1'", '3{A1}')  
update(86): ETA = 0.0018845 m, counter = 6 / 16 , time = 0.0047379 m, info = get_cls seeking bases in s_lst and q_lst:  (6, "2A1'", '{A1}+{A2}')  
update(86): ETA = 0.0020785 m, counter = 7 / 16 , time = 0.0049689 m, info = get_cls seeking bases in s_lst and q_lst:  (6, "2A1'", '{A3}')  
update(86): ETA = 0.010754 m, counter = 8 / 16 , time = 0.0063131 m, info = get_cls seeking bases in s_lst and q_lst:  (6, "2A1'", '{A3}')  
update(86): ETA = 0.0018020 m, counter = 9 / 16 , time = 0.0065705 m, info = get_cls seeking bases in s_lst and q_lst:  (6, "2A1'", '2{A1}+{A2}')  
update(86): ETA = 0.0013668 m, counter = 10 / 16 , time = 0.0067983 m, info = get_cls seeking bases in s_lst and q_lst:  (6, "2A1'", '4{A1}')  
update(86): ETA = 0.0015556 m, counter = 11 / 16 , time = 0.0071095 m, info = get_cls seeking bases in s_lst and q_lst:  (6, "2A1'", '{A1}+{A3}')  
update(86): ETA = 0.0014218 m, counter = 12 / 16 , time = 0.0074649 m, info = get_cls seeking bases in s_lst and q_lst:  (6, "2A1'", '{A4}')  
update(86): ETA = 0.0010692 m, counter = 13 / 16 , time = 0.0078213 m, info = get_cls seeking bases in s_lst and q_lst:  (6, "2A1'", '{D4}')  
update(86): ETA = 0.00076530 m, counter = 14 / 16 , time = 0.0082040 m, info = get_cls seeking bases in s_lst and q_lst:  (6, "2A1'", '2{A1}+{A3}')  
update(86): ETA = 0.00050353 m, counter = 15 / 16 , time = 0.0087075 m, info = get_cls seeking bases in s_lst and q_lst:  (6, "2A1'", '{D5}')  
get_cls(1130): Setting Dynkin types of 28 items...please wait... 
update(86): ETA = 0.0052369 m, counter = 0 / 28 , time = 0.00037407 m, info = 6 2A1' A0  
update(86): ETA = 0.017777 m, counter = 2 / 28 , time = 0.0017415 m, info = 6 2A1' A1  
update(86): ETA = 0.016621 m, counter = 4 / 28 , time = 0.0031266 m, info = 6 2A1' A1  
update(86): ETA = 0.014918 m, counter = 6 / 28 , time = 0.0044827 m, info = 6 2A1' A1  
update(86): ETA = 0.018008 m, counter = 8 / 28 , time = 0.0062835 m, info = 6 2A1' 2A1  
update(86): ETA = 0.016342 m, counter = 10 / 28 , time = 0.0080993 m, info = 6 2A1' A2  
update(86): ETA = 0.014334 m, counter = 12 / 28 , time = 0.0098910 m, info = 6 2A1' A2  
update(86): ETA = 0.014146 m, counter = 14 / 28 , time = 0.011912 m, info = 6 2A1' A3  
update(86): ETA = 0.0077594 m, counter = 16 / 28 , time = 0.013205 m, info = 6 2A1' 2A1  
update(86): ETA = 0.0089827 m, counter = 18 / 28 , time = 0.015002 m, info = 6 2A1' 2A1  
update(86): ETA = 0.0071394 m, counter = 20 / 28 , time = 0.016787 m, info = 6 2A1' 2A1  
update(86): ETA = 0.0066594 m, counter = 22 / 28 , time = 0.019006 m, info = 6 2A1' 4A1  
update(86): ETA = 0.0053712 m, counter = 24 / 28 , time = 0.021692 m, info = 6 2A1' 4A1  
update(86): ETA = 0.0026697 m, counter = 26 / 28 , time = 0.024362 m, info = 6 2A1' 4A1  
get_cls(1145): inv      = 2A1' , rank = 6 
get_cls(1146): bas1_lst = 1 [('A0', 1)] 
get_cls(1147): bas2_lst = 15 [('2A1', 3), ('A0', 1), ('A1', 6), ('A2', 4), ('A3', 1)] 
get_cls(1148): bas3_lst = 13 [('2A1', 6), ('4A1', 6), ('A0', 1)] 
update(86): ETA = 1.1827e-6 m, counter = 0 / 195 , time = 1.1524e-7 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', 'A0', 'A0')  
get_cls(1168): 	 appended:  (6, "2A1'", 'A0') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A0', 'A0') 
get_cls(1168): 	 appended:  (6, "2A1'", '2A1') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A0', '2A1') 
get_cls(1168): 	 appended:  (6, "2A1'", '4A1') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A0', '4A1') 
get_cls(1168): 	 appended:  (6, "2A1'", '{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A1', 'A0') 
get_cls(1168): 	 appended:  (6, "2A1'", '2A1+{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A1', '2A1') 
get_cls(1168): 	 appended:  (6, "2A1'", '[A3]') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A1', '2A1') 
update(86): ETA = 0.33758 m, counter = 19 / 195 , time = 0.036443 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', 'A1', '2A1')  
get_cls(1168): 	 appended:  (6, "2A1'", '2A1+[A3]') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A1', '4A1') 
update(86): ETA = 0.15490 m, counter = 38 / 195 , time = 0.055189 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', 'A1', '4A1')  
update(86): ETA = 0.13226 m, counter = 57 / 195 , time = 0.073399 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', 'A1', '2A1')  
update(86): ETA = 0.051715 m, counter = 76 / 195 , time = 0.081656 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', 'A1', '4A1')  
get_cls(1168): 	 appended:  (6, "2A1'", '2{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A0', '2A1', 'A0') 
get_cls(1168): 	 appended:  (6, "2A1'", '2A1+2{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A0', '2A1', '2A1') 
update(86): ETA = 0.055627 m, counter = 95 / 195 , time = 0.092225 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', '2A1', '2A1')  
update(86): ETA = 0.035087 m, counter = 114 / 195 , time = 0.10046 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', '2A1', '4A1')  
get_cls(1168): 	 appended:  (6, "2A1'", '{A2}') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A2', 'A0') 
get_cls(1168): 	 appended:  (6, "2A1'", '[D4]') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A2', '2A1') 
update(86): ETA = 0.033607 m, counter = 133 / 195 , time = 0.11075 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', 'A2', '2A1')  
update(86): ETA = 0.0089809 m, counter = 152 / 195 , time = 0.11472 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', 'A2', '4A1')  
update(86): ETA = 0.0050864 m, counter = 171 / 195 , time = 0.11875 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', 'A2', '2A1')  
get_cls(1168): 	 appended:  (6, "2A1'", '{A3}') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A3', 'A0') 
update(86): ETA = 0.00062407 m, counter = 190 / 195 , time = 0.12112 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', 'A3', '4A1')  
get_cls(1070): looping through inv_lst: (6, '3A1', [e1-e2, e4-e5, e0-e1-e2-e3]) 
get_part_roots(875): r_lst      = 20 [e1-e2, e2-e3, e1-e3, e3-e4, e2-e4, e1-e4, e4-e5, e3-e5, e2-e5, e1-e5, e0-e1-e2-e3, e0-e1-e2-e4, e0-e1-e3-e4, e0-e2-e3-e4, e0-e1-e2-e5, e0-e1-e3-e5, e0-e2-e3-e5, e0-e1-e4-e5, e0-e2-e4-e5, e0-e3-e4-e5] 
get_part_roots(876): s_lst      = 1 [e0-e3-e4-e5] 
get_part_roots(877): tq1_lst    = 16 [e2-e3, e1-e3, e3-e4, e2-e4, e1-e4, e3-e5, e2-e5, e1-e5, e0-e1-e2-e4, e0-e1-e3-e4, e0-e2-e3-e4, e0-e1-e2-e5, e0-e1-e3-e5, e0-e2-e3-e5, e0-e1-e4-e5, e0-e2-e4-e5] 
get_part_roots(878): tq_lst     = 12 [e3-e4, e2-e4, e1-e4, e3-e5, e2-e5, e1-e5, e0-e1-e2-e4, e0-e1-e3-e4, e0-e2-e3-e4, e0-e1-e2-e5, e0-e1-e3-e5, e0-e2-e3-e5] 
get_part_roots(879): q_lst      = 6 [e3-e4, e2-e4, e1-e4, e3-e5, e2-e5, e1-e5] 
get_part_roots(880):        M --> 6 [e0-e1-e2-e5, e0-e2-e3-e5, e0-e1-e3-e5, e0-e1-e2-e4, e0-e2-e3-e4, e0-e1-e3-e4] 
get_part_roots(881): inv.Md_lst = 3A1 [e1-e2, e4-e5, e0-e1-e2-e3] , rank = 6 
get_cls(1086): looping through inv_lst continued after recursive call: (6, '3A1', [e1-e2, e4-e5, e0-e1-e2-e3]) 
get_cls(1094): bas1_lst = 1 [('3A1', 'A0')] 
get_cls(1095): s_lst    = 1 [e0-e3-e4-e5] 
get_cls(1096): q_lst    = 6 [e3-e4, e2-e4, e1-e4, e3-e5, e2-e5, e1-e5] 
update(86): ETA = 0.000021299 m, counter = 0 / 16 , time = 1.3312e-6 m, info = get_cls seeking bases in s_lst and q_lst:  (6, '3A1', 'A0')  
update(86): ETA = 0.0035681 m, counter = 1 / 16 , time = 0.00023920 m, info = get_cls seeking bases in s_lst and q_lst:  (6, '3A1', '{A1}')  
update(86): ETA = 0.0090330 m, counter = 2 / 16 , time = 0.00088442 m, info = get_cls seeking bases in s_lst and q_lst:  (6, '3A1', '2{A1}')  
update(86): ETA = 0.019731 m, counter = 3 / 16 , time = 0.0024022 m, info = get_cls seeking bases in s_lst and q_lst:  (6, '3A1', '2{A1}')  
update(86): ETA = 0.0015198 m, counter = 4 / 16 , time = 0.0025288 m, info = get_cls seeking bases in s_lst and q_lst:  (6, '3A1', '{A2}')  
update(86): ETA = 0.0043815 m, counter = 5 / 16 , time = 0.0029271 m, info = get_cls seeking bases in s_lst and q_lst:  (6, '3A1', '3{A1}')  
update(86): ETA = 0.0018635 m, counter = 6 / 16 , time = 0.0031135 m, info = get_cls seeking bases in s_lst and q_lst:  (6, '3A1', '{A1}+{A2}')  
update(86): ETA = 0.0020568 m, counter = 7 / 16 , time = 0.0033420 m, info = get_cls seeking bases in s_lst and q_lst:  (6, '3A1', '{A3}')  
update(86): ETA = 0.0018281 m, counter = 8 / 16 , time = 0.0035705 m, info = get_cls seeking bases in s_lst and q_lst:  (6, '3A1', '{A3}')  
update(86): ETA = 0.0018461 m, counter = 9 / 16 , time = 0.0038343 m, info = get_cls seeking bases in s_lst and q_lst:  (6, '3A1', '2{A1}+{A2}')  
update(86): ETA = 0.0013440 m, counter = 10 / 16 , time = 0.0040583 m, info = get_cls seeking bases in s_lst and q_lst:  (6, '3A1', '4{A1}')  
update(86): ETA = 0.0014891 m, counter = 11 / 16 , time = 0.0043561 m, info = get_cls seeking bases in s_lst and q_lst:  (6, '3A1', '{A1}+{A3}')  
update(86): ETA = 0.0014055 m, counter = 12 / 16 , time = 0.0047075 m, info = get_cls seeking bases in s_lst and q_lst:  (6, '3A1', '{A4}')  
update(86): ETA = 0.0010660 m, counter = 13 / 16 , time = 0.0050628 m, info = get_cls seeking bases in s_lst and q_lst:  (6, '3A1', '{D4}')  
update(86): ETA = 0.00076114 m, counter = 14 / 16 , time = 0.0054434 m, info = get_cls seeking bases in s_lst and q_lst:  (6, '3A1', '2{A1}+{A3}')  
update(86): ETA = 0.00050089 m, counter = 15 / 16 , time = 0.0059443 m, info = get_cls seeking bases in s_lst and q_lst:  (6, '3A1', '{D5}')  
get_cls(1130): Setting Dynkin types of 13 items...please wait... 
update(86): ETA = 0.0052195 m, counter = 0 / 13 , time = 0.00040150 m, info = 6 3A1 A0  
update(86): ETA = 0.0086854 m, counter = 1 / 13 , time = 0.0011253 m, info = 6 3A1 A1  
update(86): ETA = 0.0045300 m, counter = 2 / 13 , time = 0.0015371 m, info = 6 3A1 A0  
update(86): ETA = 0.0094588 m, counter = 3 / 13 , time = 0.0024830 m, info = 6 3A1 2A1  
update(86): ETA = 0.0083703 m, counter = 4 / 13 , time = 0.0034130 m, info = 6 3A1 A2  
update(86): ETA = 0.0074376 m, counter = 5 / 13 , time = 0.0043427 m, info = 6 3A1 A2  
update(86): ETA = 0.0066136 m, counter = 6 / 13 , time = 0.0052875 m, info = 6 3A1 2A1  
update(86): ETA = 0.0056267 m, counter = 7 / 13 , time = 0.0062253 m, info = 6 3A1 A2  
update(86): ETA = 0.0046487 m, counter = 8 / 13 , time = 0.0071550 m, info = 6 3A1 A2  
update(86): ETA = 0.0053625 m, counter = 9 / 13 , time = 0.0084956 m, info = 6 3A1 2A1+A2  
update(86): ETA = 0.0040316 m, counter = 10 / 13 , time = 0.0098395 m, info = 6 3A1 2A1+A2  
update(86): ETA = 0.0027143 m, counter = 11 / 13 , time = 0.011197 m, info = 6 3A1 2A1+A2  
update(86): ETA = 0.0013573 m, counter = 12 / 13 , time = 0.012554 m, info = 6 3A1 2A1+A2  
get_cls(1145): inv      = 3A1 , rank = 6 
get_cls(1146): bas1_lst = 1 [('A0', 1)] 
get_cls(1147): bas2_lst = 2 [('A0', 1), ('A1', 1)] 
get_cls(1148): bas3_lst = 11 [('2A1', 2), ('2A1+A2', 4), ('A0', 1), ('A2', 4)] 
update(86): ETA = 1.2676e-6 m, counter = 0 / 22 , time = 1.1524e-7 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', 'A0', 'A0')  
get_cls(1168): 	 appended:  (6, '3A1', 'A0') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A0', 'A0') 
get_cls(1168): 	 appended:  (6, '3A1', '2A1') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A0', '2A1') 
update(86): ETA = 0.046560 m, counter = 2 / 22 , time = 0.0046561 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', 'A0', '2A1')  
get_cls(1168): 	 appended:  (6, '3A1', '[A2]') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A0', 'A2') 
update(86): ETA = 0.035007 m, counter = 4 / 22 , time = 0.0085458 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', 'A0', 'A2')  
update(86): ETA = 0.030740 m, counter = 6 / 22 , time = 0.012388 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', 'A0', 'A2')  
get_cls(1168): 	 appended:  (6, '3A1', '2A1+[A2]') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A0', '2A1+A2') 
update(86): ETA = 0.029472 m, counter = 8 / 22 , time = 0.016599 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', 'A0', '2A1+A2')  
update(86): ETA = 0.025019 m, counter = 10 / 22 , time = 0.020769 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', 'A0', '2A1+A2')  
get_cls(1168): 	 appended:  (6, '3A1', '{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A1', 'A0') 
update(86): ETA = 0.021775 m, counter = 12 / 22 , time = 0.025124 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', 'A1', '2A1')  
get_cls(1168): 	 appended:  (6, '3A1', '2A1+{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A1', '2A1') 
update(86): ETA = 0.016427 m, counter = 14 / 22 , time = 0.029230 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', 'A1', 'A2')  
update(86): ETA = 0.00011420 m, counter = 16 / 22 , time = 0.029268 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', 'A1', 'A2')  
update(86): ETA = 0.000074863 m, counter = 18 / 22 , time = 0.029306 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', 'A1', '2A1+A2')  
update(86): ETA = 0.000049384 m, counter = 20 / 22 , time = 0.029355 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', 'A1', '2A1+A2')  
get_cls(1070): looping through inv_lst: (6, 'D4', [e2-e3, e3-e4, e4-e5, e0-e1-e2-e3]) 
get_part_roots(875): r_lst      = 20 [e1-e2, e2-e3, e1-e3, e3-e4, e2-e4, e1-e4, e4-e5, e3-e5, e2-e5, e1-e5, e0-e1-e2-e3, e0-e1-e2-e4, e0-e1-e3-e4, e0-e2-e3-e4, e0-e1-e2-e5, e0-e1-e3-e5, e0-e2-e3-e5, e0-e1-e4-e5, e0-e2-e4-e5, e0-e3-e4-e5] 
get_part_roots(876): s_lst      = 0 [] 
get_part_roots(877): tq1_lst    = 8 [e1-e2, e1-e3, e1-e4, e1-e5, e0-e2-e3-e4, e0-e2-e3-e5, e0-e2-e4-e5, e0-e3-e4-e5] 
get_part_roots(878): tq_lst     = 8 [e1-e2, e1-e3, e1-e4, e1-e5, e0-e2-e3-e4, e0-e2-e3-e5, e0-e2-e4-e5, e0-e3-e4-e5] 
get_part_roots(879): q_lst      = 4 [e1-e2, e1-e3, e1-e4, e1-e5] 
get_part_roots(880):        M --> 4 [e0-e3-e4-e5, e0-e2-e4-e5, e0-e2-e3-e5, e0-e2-e3-e4] 
get_part_roots(881): inv.Md_lst = D4 [e2-e3, e3-e4, e4-e5, e0-e1-e2-e3] , rank = 6 
get_cls(1086): looping through inv_lst continued after recursive call: (6, 'D4', [e2-e3, e3-e4, e4-e5, e0-e1-e2-e3]) 
get_cls(1094): bas1_lst = 1 [('D4', 'A0')] 
get_cls(1095): s_lst    = 0 [] 
get_cls(1096): q_lst    = 4 [e1-e2, e1-e3, e1-e4, e1-e5] 
update(86): ETA = 0.000017357 m, counter = 0 / 16 , time = 1.0848e-6 m, info = get_cls seeking bases in s_lst and q_lst:  (6, 'D4', 'A0')  
update(86): ETA = 0.0037293 m, counter = 1 / 16 , time = 0.00024970 m, info = get_cls seeking bases in s_lst and q_lst:  (6, 'D4', '{A1}')  
update(86): ETA = 0.0042576 m, counter = 2 / 16 , time = 0.00055382 m, info = get_cls seeking bases in s_lst and q_lst:  (6, 'D4', '2{A1}')  
update(86): ETA = 0.0027785 m, counter = 3 / 16 , time = 0.00076755 m, info = get_cls seeking bases in s_lst and q_lst:  (6, 'D4', '2{A1}')  
update(86): ETA = 0.0015202 m, counter = 4 / 16 , time = 0.00089424 m, info = get_cls seeking bases in s_lst and q_lst:  (6, 'D4', '{A2}')  
update(86): ETA = 0.0029816 m, counter = 5 / 16 , time = 0.0011653 m, info = get_cls seeking bases in s_lst and q_lst:  (6, 'D4', '3{A1}')  
update(86): ETA = 0.0018605 m, counter = 6 / 16 , time = 0.0013513 m, info = get_cls seeking bases in s_lst and q_lst:  (6, 'D4', '{A1}+{A2}')  
update(86): ETA = 0.0020550 m, counter = 7 / 16 , time = 0.0015797 m, info = get_cls seeking bases in s_lst and q_lst:  (6, 'D4', '{A3}')  
update(86): ETA = 0.0018285 m, counter = 8 / 16 , time = 0.0018082 m, info = get_cls seeking bases in s_lst and q_lst:  (6, 'D4', '{A3}')  
update(86): ETA = 0.0017744 m, counter = 9 / 16 , time = 0.0020617 m, info = get_cls seeking bases in s_lst and q_lst:  (6, 'D4', '2{A1}+{A2}')  
update(86): ETA = 0.0013444 m, counter = 10 / 16 , time = 0.0022858 m, info = get_cls seeking bases in s_lst and q_lst:  (6, 'D4', '4{A1}')  
update(86): ETA = 0.0014821 m, counter = 11 / 16 , time = 0.0025822 m, info = get_cls seeking bases in s_lst and q_lst:  (6, 'D4', '{A1}+{A3}')  
update(86): ETA = 0.0014029 m, counter = 12 / 16 , time = 0.0029329 m, info = get_cls seeking bases in s_lst and q_lst:  (6, 'D4', '{A4}')  
update(86): ETA = 0.0010576 m, counter = 13 / 16 , time = 0.0032855 m, info = get_cls seeking bases in s_lst and q_lst:  (6, 'D4', '{D4}')  
update(86): ETA = 0.00075557 m, counter = 14 / 16 , time = 0.0036633 m, info = get_cls seeking bases in s_lst and q_lst:  (6, 'D4', '2{A1}+{A3}')  
update(86): ETA = 0.00049685 m, counter = 15 / 16 , time = 0.0041601 m, info = get_cls seeking bases in s_lst and q_lst:  (6, 'D4', '{D5}')  
get_cls(1130): Setting Dynkin types of 6 items...please wait... 
update(86): ETA = 0.0029088 m, counter = 0 / 6 , time = 0.00048480 m, info = 6 D4 A0  
update(86): ETA = 0.0024642 m, counter = 1 / 6 , time = 0.00097763 m, info = 6 D4 A0  
update(86): ETA = 0.0040581 m, counter = 2 / 6 , time = 0.0019922 m, info = 6 D4 2A1  
update(86): ETA = 0.0030027 m, counter = 3 / 6 , time = 0.0029931 m, info = 6 D4 2A1  
update(86): ETA = 0.0020074 m, counter = 4 / 6 , time = 0.0039967 m, info = 6 D4 2A1  
update(86): ETA = 0.0010136 m, counter = 5 / 6 , time = 0.0050103 m, info = 6 D4 2A1  
get_cls(1145): inv      = D4 , rank = 6 
get_cls(1146): bas1_lst = 1 [('A0', 1)] 
get_cls(1147): bas2_lst = 1 [('A0', 1)] 
get_cls(1148): bas3_lst = 5 [('2A1', 4), ('A0', 1)] 
update(86): ETA = 9.9341e-8 m, counter = 0 / 5 , time = 9.9341e-8 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', 'A0', 'A0')  
get_cls(1168): 	 appended:  (6, 'D4', 'A0') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A0', 'A0') 
get_cls(1168): 	 appended:  (6, 'D4', '2A1') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A0', '2A1') 
usecase__get_cls(68): Classification of root bases:
 rownr rank   Mtype            type  #-2  #-1 #fam #-2R  #-1R  #famR                                                                Md_lst                                                                                                                                  d_lst                                                                                                                                                                                                                                                                                                                                                   M
    27    6      A0              A0    0   16   10    0    16     10                                                                    []                                                                                                                                     []                                                                                                                                                                                                                            [(1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0), (0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 1)]
    28    6      A0            {A1}    1   12    8    1    12      8                                                                    []                                                                                                                                [e1-e2]                                                                                                                                                                                                                            [(1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0), (0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 1)]
    29    6      A0           2{A1}    2    9    6    2     9      6                                                                    []                                                                                                                         [e1-e2, e3-e4]                                                                                                                                                                                                                            [(1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0), (0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 1)]
    30    6      A0           2{A1}    2    8    7    2     8      7                                                                    []                                                                                                                   [e4-e5, e0-e1-e2-e3]                                                                                                                                                                                                                            [(1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0), (0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 1)]
    31    6      A0            {A2}    2    8    6    2     8      6                                                                    []                                                                                                                         [e1-e2, e2-e3]                                                                                                                                                                                                                            [(1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0), (0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 1)]
    32    6      A0           3{A1}    3    6    5    3     6      5                                                                    []                                                                                                            [e1-e2, e4-e5, e0-e1-e2-e3]                                                                                                                                                                                                                            [(1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0), (0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 1)]
    33    6      A0       {A1}+{A2}    3    6    4    3     6      4                                                                    []                                                                                                                  [e1-e2, e2-e3, e4-e5]                                                                                                                                                                                                                            [(1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0), (0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 1)]
    34    6      A0            {A3}    3    5    4    3     5      4                                                                    []                                                                                                                  [e1-e2, e2-e3, e3-e4]                                                                                                                                                                                                                            [(1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0), (0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 1)]
    35    6      A0            {A3}    3    4    5    3     4      5                                                                    []                                                                                                            [e3-e4, e4-e5, e0-e1-e2-e3]                                                                                                                                                                                                                            [(1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0), (0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 1)]
    36    6      A0      2{A1}+{A2}    4    4    3    4     4      3                                                                    []                                                                                                     [e1-e2, e2-e3, e4-e5, e0-e1-e2-e3]                                                                                                                                                                                                                            [(1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0), (0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 1)]
    37    6      A0           4{A1}    4    4    4    4     4      4                                                                    []                                                                                               [e2-e3, e4-e5, e0-e1-e2-e3, e0-e1-e4-e5]                                                                                                                                                                                                                            [(1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0), (0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 1)]
    38    6      A0       {A1}+{A3}    4    3    3    4     3      3                                                                    []                                                                                                     [e1-e2, e3-e4, e4-e5, e0-e1-e2-e3]                                                                                                                                                                                                                            [(1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0), (0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 1)]
    39    6      A0            {A4}    4    3    2    4     3      2                                                                    []                                                                                                           [e1-e2, e2-e3, e3-e4, e4-e5]                                                                                                                                                                                                                            [(1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0), (0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 1)]
    40    6      A0            {D4}    4    2    3    4     2      3                                                                    []                                                                                                     [e2-e3, e3-e4, e4-e5, e0-e1-e2-e3]                                                                                                                                                                                                                            [(1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0), (0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 1)]
    41    6      A0      2{A1}+{A3}    5    2    2    5     2      2                                                                    []                                                                                        [e1-e2, e2-e3, e4-e5, e0-e1-e2-e3, e0-e1-e4-e5]                                                                                                                                                                                                                            [(1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0), (0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 1)]
    42    6      A0            {D5}    5    1    1    5     1      1                                                                    []                                                                                              [e1-e2, e2-e3, e3-e4, e4-e5, e0-e1-e2-e3]                                                                                                                                                                                                                            [(1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0), (0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 1)]
    43    6      A1              A0    0   16   10    0     8      6                                                               [e1-e2]                                                                                                                                     []                                                                                                                                                                                                                            [(1, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0), (0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 1)]
    44    6      A1            {A1}    1   12    8    1     6      4                                                               [e1-e2]                                                                                                                                [e4-e5]                                                                                                                                                                                                                            [(1, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0), (0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 1)]
    45    6      A1            {A1}    1   12    8    1     4      6                                                               [e1-e2]                                                                                                                          [e0-e3-e4-e5]                                                                                                                                                                                                                            [(1, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0), (0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 1)]
    46    6      A1           2{A1}    2    8    7    2     4      3                                                               [e1-e2]                                                                                                                   [e3-e4, e0-e1-e2-e5]                                                                                                                                                                                                                            [(1, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0), (0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 1)]
    47    6      A1           2{A1}    2    9    6    2     3      4                                                               [e1-e2]                                                                                                                   [e4-e5, e0-e3-e4-e5]                                                                                                                                                                                                                            [(1, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0), (0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 1)]
    48    6      A1            {A2}    2    8    6    2     4      2                                                               [e1-e2]                                                                                                                         [e3-e4, e4-e5]                                                                                                                                                                                                                            [(1, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0), (0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 1)]
    49    6      A1           3{A1}    3    6    5    3     2      3                                                               [e1-e2]                                                                                                      [e3-e4, e0-e1-e2-e5, e0-e3-e4-e5]                                                                                                                                                                                                                            [(1, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0), (0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 1)]
    50    6      A1       {A1}+{A2}    3    6    4    3     2      2                                                               [e1-e2]                                                                                                            [e3-e4, e4-e5, e0-e3-e4-e5]                                                                                                                                                                                                                            [(1, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0), (0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 1)]
    51    6      A1            {A3}    3    4    5    3     2      1                                                               [e1-e2]                                                                                                            [e0-e1-e2-e3, e3-e4, e4-e5]                                                                                                                                                                                                                            [(1, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0), (0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 1)]
    52    6      A1       {A1}+{A3}    4    3    3    4     1      1                                                               [e1-e2]                                                                                               [e0-e1-e2-e3, e3-e4, e4-e5, e0-e3-e4-e5]                                                                                                                                                                                                                            [(1, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0), (0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 1)]
    53    6     2A1              A0    0   16   10    0     4      2                                                        [e1-e2, e3-e4]                                                                                                                                     []                                                                                                                                                                                                                            [(1, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0), (0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0), (0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1)]
    54    6     2A1            {A1}    1   12    8    1     2      2                                                        [e1-e2, e3-e4]                                                                                                                          [e0-e1-e2-e5]                                                                                                                                                                                                                            [(1, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0), (0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0), (0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1)]
    55    6     2A1             2A1    2    9    6    0     3      2                                                        [e1-e2, e3-e4]                                                                                                             [e0-e1-e3-e5, e0-e2-e4-e5]                                                                                                                                                                                                                            [(1, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0), (0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0), (0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1)]
    56    6     2A1           2{A1}    2    9    6    2     1      2                                                        [e1-e2, e3-e4]                                                                                                             [e0-e1-e2-e5, e0-e3-e4-e5]                                                                                                                                                                                                                            [(1, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0), (0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0), (0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1)]
    57    6     2A1            [A3]    3    5    4    1     1      2                                                        [e1-e2, e3-e4]                                                                                                            [e2-e3, e1-e4, e0-e1-e2-e5]                                                                                                                                                                                                                            [(1, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0), (0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0), (0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1)]
    58    6     2A1             4A1    4    4    4    0     2      2                                                        [e1-e2, e3-e4]                                                                                               [e2-e3, e1-e4, e0-e2-e3-e5, e0-e1-e4-e5]                                                                                                                                                                                                                            [(1, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0), (0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0), (0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1)]
    59    6    2A1'              A0    0   16   10    0     0      6                                                  [e4-e5, e0-e1-e2-e3]                                                                                                                                     []                                                                                                                                                                                                                   [(2, 1, 1, 1, 0, 0), (-1, 0, -1, -1, 0, 0), (-1, -1, 0, -1, 0, 0), (-1, -1, -1, 0, 0, 0), (0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 1, 0)]
    60    6    2A1'            {A1}    1   12    8    1     0      4                                                  [e4-e5, e0-e1-e2-e3]                                                                                                                                [e1-e2]                                                                                                                                                                                                                   [(2, 1, 1, 1, 0, 0), (-1, 0, -1, -1, 0, 0), (-1, -1, 0, -1, 0, 0), (-1, -1, -1, 0, 0, 0), (0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 1, 0)]
    61    6    2A1'             2A1    2    8    7    0     0      5                                                  [e4-e5, e0-e1-e2-e3]                                                                                                                   [e3-e4, e0-e1-e2-e5]                                                                                                                                                                                                                   [(2, 1, 1, 1, 0, 0), (-1, 0, -1, -1, 0, 0), (-1, -1, 0, -1, 0, 0), (-1, -1, -1, 0, 0, 0), (0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 1, 0)]
    62    6    2A1'           2{A1}    2    8    7    2     0      3                                                  [e4-e5, e0-e1-e2-e3]                                                                                                                   [e1-e2, e0-e3-e4-e5]                                                                                                                                                                                                                   [(2, 1, 1, 1, 0, 0), (-1, 0, -1, -1, 0, 0), (-1, -1, 0, -1, 0, 0), (-1, -1, -1, 0, 0, 0), (0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 1, 0)]
    63    6    2A1'            {A2}    2    8    6    2     0      2                                                  [e4-e5, e0-e1-e2-e3]                                                                                                                         [e1-e2, e2-e3]                                                                                                                                                                                                                   [(2, 1, 1, 1, 0, 0), (-1, 0, -1, -1, 0, 0), (-1, -1, 0, -1, 0, 0), (-1, -1, -1, 0, 0, 0), (0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 1, 0)]
    64    6    2A1'        2A1+{A1}    3    6    5    1     0      3                                                  [e4-e5, e0-e1-e2-e3]                                                                                                            [e1-e2, e3-e4, e0-e1-e2-e5]                                                                                                                                                                                                                   [(2, 1, 1, 1, 0, 0), (-1, 0, -1, -1, 0, 0), (-1, -1, 0, -1, 0, 0), (-1, -1, -1, 0, 0, 0), (0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 1, 0)]
    65    6    2A1'            [A3]    3    4    5    1     0      3                                                  [e4-e5, e0-e1-e2-e3]                                                                                                            [e1-e2, e2-e4, e0-e1-e3-e5]                                                                                                                                                                                                                   [(2, 1, 1, 1, 0, 0), (-1, 0, -1, -1, 0, 0), (-1, -1, 0, -1, 0, 0), (-1, -1, -1, 0, 0, 0), (0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 1, 0)]
    66    6    2A1'            {A3}    3    4    5    3     0      1                                                  [e4-e5, e0-e1-e2-e3]                                                                                                            [e2-e3, e1-e2, e0-e1-e4-e5]                                                                                                                                                                                                                   [(2, 1, 1, 1, 0, 0), (-1, 0, -1, -1, 0, 0), (-1, -1, 0, -1, 0, 0), (-1, -1, -1, 0, 0, 0), (0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 1, 0)]
    67    6    2A1'             4A1    4    4    4    0     0      4                                                  [e4-e5, e0-e1-e2-e3]                                                                                               [e3-e4, e2-e5, e0-e1-e3-e4, e0-e1-e2-e5]                                                                                                                                                                                                                   [(2, 1, 1, 1, 0, 0), (-1, 0, -1, -1, 0, 0), (-1, -1, 0, -1, 0, 0), (-1, -1, -1, 0, 0, 0), (0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 1, 0)]
    68    6    2A1'       2A1+2{A1}    4    4    4    2     0      2                                                  [e4-e5, e0-e1-e2-e3]                                                                                               [e1-e2, e0-e3-e4-e5, e3-e4, e0-e1-e2-e5]                                                                                                                                                                                                                   [(2, 1, 1, 1, 0, 0), (-1, 0, -1, -1, 0, 0), (-1, -1, 0, -1, 0, 0), (-1, -1, -1, 0, 0, 0), (0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 1, 0)]
    69    6    2A1'            [D4]    4    2    3    2     0      1                                                  [e4-e5, e0-e1-e2-e3]                                                                                                     [e1-e2, e2-e3, e3-e4, e0-e1-e2-e5]                                                                                                                                                                                                                   [(2, 1, 1, 1, 0, 0), (-1, 0, -1, -1, 0, 0), (-1, -1, 0, -1, 0, 0), (-1, -1, -1, 0, 0, 0), (0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 1, 0)]
    70    6    2A1'        2A1+[A3]    5    2    2    1     0      2                                                  [e4-e5, e0-e1-e2-e3]                                                                                        [e1-e2, e3-e4, e2-e5, e0-e1-e3-e4, e0-e1-e2-e5]                                                                                                                                                                                                                   [(2, 1, 1, 1, 0, 0), (-1, 0, -1, -1, 0, 0), (-1, -1, 0, -1, 0, 0), (-1, -1, -1, 0, 0, 0), (0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 1, 0)]
    71    6     3A1              A0    0   16   10    0     0      2                                           [e1-e2, e4-e5, e0-e1-e2-e3]                                                                                                                                     []                                                                                                                                                                                                                   [(2, 1, 1, 1, 0, 0), (-1, -1, 0, -1, 0, 0), (-1, 0, -1, -1, 0, 0), (-1, -1, -1, 0, 0, 0), (0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 1, 0)]
    72    6     3A1            {A1}    1   12    8    1     0      2                                           [e1-e2, e4-e5, e0-e1-e2-e3]                                                                                                                          [e0-e3-e4-e5]                                                                                                                                                                                                                   [(2, 1, 1, 1, 0, 0), (-1, -1, 0, -1, 0, 0), (-1, 0, -1, -1, 0, 0), (-1, -1, -1, 0, 0, 0), (0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 1, 0)]
    73    6     3A1             2A1    2    8    7    0     0      1                                           [e1-e2, e4-e5, e0-e1-e2-e3]                                                                                                                   [e3-e4, e0-e1-e2-e5]                                                                                                                                                                                                                   [(2, 1, 1, 1, 0, 0), (-1, -1, 0, -1, 0, 0), (-1, 0, -1, -1, 0, 0), (-1, -1, -1, 0, 0, 0), (0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 1, 0)]
    74    6     3A1            [A2]    2    8    6    0     0      2                                           [e1-e2, e4-e5, e0-e1-e2-e3]                                                                                                                   [e2-e4, e0-e2-e3-e5]                                                                                                                                                                                                                   [(2, 1, 1, 1, 0, 0), (-1, -1, 0, -1, 0, 0), (-1, 0, -1, -1, 0, 0), (-1, -1, -1, 0, 0, 0), (0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 1, 0)]
    75    6     3A1        2A1+{A1}    3    6    5    1     0      1                                           [e1-e2, e4-e5, e0-e1-e2-e3]                                                                                                      [e0-e3-e4-e5, e3-e4, e0-e1-e2-e5]                                                                                                                                                                                                                   [(2, 1, 1, 1, 0, 0), (-1, -1, 0, -1, 0, 0), (-1, 0, -1, -1, 0, 0), (-1, -1, -1, 0, 0, 0), (0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 1, 0)]
    76    6     3A1        2A1+[A2]    4    4    3    0     0      1                                           [e1-e2, e4-e5, e0-e1-e2-e3]                                                                                               [e3-e4, e2-e5, e0-e2-e3-e4, e0-e1-e2-e5]                                                                                                                                                                                                                   [(2, 1, 1, 1, 0, 0), (-1, -1, 0, -1, 0, 0), (-1, 0, -1, -1, 0, 0), (-1, -1, -1, 0, 0, 0), (0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 1, 0)]
    77    6      D4              A0    0   16   10    0     0      2                                    [e2-e3, e3-e4, e4-e5, e0-e1-e2-e3]                                                                                                                                     []                                                                                                                                                                                                          [(3, 2, 1, 1, 1, 1), (-2, -1, -1, -1, -1, -1), (-1, -1, -1, 0, 0, 0), (-1, -1, 0, -1, 0, 0), (-1, -1, 0, 0, -1, 0), (-1, -1, 0, 0, 0, -1)]
    78    6      D4             2A1    2    8    7    0     0      1                                    [e2-e3, e3-e4, e4-e5, e0-e1-e2-e3]                                                                                                                   [e1-e2, e0-e3-e4-e5]                                                                                                                                                                                                          [(3, 2, 1, 1, 1, 1), (-2, -1, -1, -1, -1, -1), (-1, -1, -1, 0, 0, 0), (-1, -1, 0, -1, 0, 0), (-1, -1, 0, 0, -1, 0), (-1, -1, 0, 0, 0, -1)]
 
usecase__get_cls(69): rank = 6 , len = 52 
usecase__get_cls(70): ################################################################################ 
get_cls(1059): rank = 7 
get_bas_lst(582): start 
update(86): ETA = 9.1235e-6 m, counter = 0 / 32 , time = 5.7022e-6 m, info = get_bas_lst rank = 7  
update(86): ETA = 0.088639 m, counter = 20 / 32 , time = 0.14774 m, info = get_bas_lst rank = 7  
update(86): ETA = 0.00012380 m, counter = 0 / 512 , time = 4.8359e-6 m, info = get_bas_lst rank = 7  
update(86): ETA = 2.3423 m, counter = 20 / 512 , time = 0.095221 m, info = get_bas_lst rank = 7  
update(86): ETA = 1.8789 m, counter = 40 / 512 , time = 0.17484 m, info = get_bas_lst rank = 7  
update(86): ETA = 1.6812 m, counter = 60 / 512 , time = 0.24922 m, info = get_bas_lst rank = 7  
update(86): ETA = 1.3099 m, counter = 80 / 512 , time = 0.30987 m, info = get_bas_lst rank = 7  
update(86): ETA = 0.67716 m, counter = 100 / 512 , time = 0.34274 m, info = get_bas_lst rank = 7  
update(86): ETA = 0.88092 m, counter = 120 / 512 , time = 0.38768 m, info = get_bas_lst rank = 7  
update(86): ETA = 1.1297 m, counter = 140 / 512 , time = 0.44842 m, info = get_bas_lst rank = 7  
update(86): ETA = 1.3253 m, counter = 160 / 512 , time = 0.52372 m, info = get_bas_lst rank = 7  
update(86): ETA = 0.83788 m, counter = 180 / 512 , time = 0.57419 m, info = get_bas_lst rank = 7  
update(86): ETA = 0.55185 m, counter = 200 / 512 , time = 0.60957 m, info = get_bas_lst rank = 7  
update(86): ETA = 0.50254 m, counter = 220 / 512 , time = 0.64399 m, info = get_bas_lst rank = 7  
update(86): ETA = 0.071302 m, counter = 240 / 512 , time = 0.64923 m, info = get_bas_lst rank = 7  
update(86): ETA = 0.030895 m, counter = 260 / 512 , time = 0.65168 m, info = get_bas_lst rank = 7  
update(86): ETA = 0.015116 m, counter = 280 / 512 , time = 0.65299 m, info = get_bas_lst rank = 7  
update(86): ETA = 0.014201 m, counter = 300 / 512 , time = 0.65432 m, info = get_bas_lst rank = 7  
update(86): ETA = 0.015735 m, counter = 320 / 512 , time = 0.65596 m, info = get_bas_lst rank = 7  
update(86): ETA = 0.0096158 m, counter = 340 / 512 , time = 0.65708 m, info = get_bas_lst rank = 7  
update(86): ETA = 0.012075 m, counter = 360 / 512 , time = 0.65867 m, info = get_bas_lst rank = 7  
update(86): ETA = 0.013628 m, counter = 380 / 512 , time = 0.66074 m, info = get_bas_lst rank = 7  
update(86): ETA = 0.0083084 m, counter = 400 / 512 , time = 0.66222 m, info = get_bas_lst rank = 7  
update(86): ETA = 0.0085838 m, counter = 420 / 512 , time = 0.66409 m, info = get_bas_lst rank = 7  
update(86): ETA = 0.0057519 m, counter = 440 / 512 , time = 0.66568 m, info = get_bas_lst rank = 7  
update(86): ETA = 0.0040660 m, counter = 460 / 512 , time = 0.66725 m, info = get_bas_lst rank = 7  
update(86): ETA = 0.0029298 m, counter = 480 / 512 , time = 0.66908 m, info = get_bas_lst rank = 7  
update(86): ETA = 0.00097536 m, counter = 500 / 512 , time = 0.67070 m, info = get_bas_lst rank = 7  
update(86): ETA = 0.000011304 m, counter = 0 / 64 , time = 3.5326e-6 m, info = get_bas_lst rank = 7  
update(86): ETA = 0.20897 m, counter = 20 / 64 , time = 0.094990 m, info = get_bas_lst rank = 7  
update(86): ETA = 0.096001 m, counter = 40 / 64 , time = 0.17499 m, info = get_bas_lst rank = 7  
update(86): ETA = 0.015330 m, counter = 60 / 64 , time = 0.25164 m, info = get_bas_lst rank = 7  
update(86): ETA = 1.9534e-6 m, counter = 0 / 8 , time = 4.8836e-6 m, info = get_bas_lst rank = 7  
get_inv_lst(666): rank = 7 
update(86): ETA = 1.0014e-6 m, counter = 0 / 21 , time = 4.7684e-8 m, info = A0  
get_inv_lst(680): Found type of involution:  A0 
update(86): ETA = 0.14604 m, counter = 1 / 21 , time = 0.0073022 m, info = A1  
get_inv_lst(680): Found type of involution:  A1 
update(86): ETA = 0.14078 m, counter = 2 / 21 , time = 0.014712 m, info = 2A1  
get_inv_lst(680): Found type of involution:  2A1 
update(86): ETA = 0.13321 m, counter = 3 / 21 , time = 0.022112 m, info = A2  
update(86): ETA = 0.0027290 m, counter = 4 / 21 , time = 0.022273 m, info = 3A1  
get_inv_lst(680): Found type of involution:  3A1 
update(86): ETA = 0.11836 m, counter = 5 / 21 , time = 0.029671 m, info = A1+A2  
update(86): ETA = 0.0023448 m, counter = 6 / 21 , time = 0.029827 m, info = A3  
update(86): ETA = 0.0022019 m, counter = 7 / 21 , time = 0.029984 m, info = 2A1+A2  
update(86): ETA = 0.0034721 m, counter = 8 / 21 , time = 0.030251 m, info = 2A2  
update(86): ETA = 0.0018248 m, counter = 9 / 21 , time = 0.030403 m, info = 4A1  
get_inv_lst(680): Found type of involution:  4A1 
update(86): ETA = 0.082132 m, counter = 10 / 21 , time = 0.037870 m, info = A1+A3  
update(86): ETA = 0.0017811 m, counter = 11 / 21 , time = 0.038048 m, info = A4  
update(86): ETA = 0.0013642 m, counter = 12 / 21 , time = 0.038200 m, info = D4  
get_inv_lst(680): Found type of involution:  D4 
get_inv_lst(695): 	Ambitious type: D4 == 4A1  inv>inv_prv:  True  ambitious types = ['D4', '4A1'] 
update(86): ETA = 0.064983 m, counter = 13 / 21 , time = 0.046322 m, info = 2A1+A3  
update(86): ETA = 0.00099702 m, counter = 14 / 21 , time = 0.046465 m, info = A1+2A2  
update(86): ETA = 0.00080931 m, counter = 15 / 21 , time = 0.046600 m, info = A1+A4  
update(86): ETA = 0.00066201 m, counter = 16 / 21 , time = 0.046732 m, info = A5  
update(86): ETA = 0.00055000 m, counter = 17 / 21 , time = 0.046870 m, info = D5  
update(86): ETA = 0.00067724 m, counter = 18 / 21 , time = 0.047095 m, info = 3A2  
update(86): ETA = 0.00020123 m, counter = 19 / 21 , time = 0.047196 m, info = A1+A5  
update(86): ETA = 0.00010004 m, counter = 20 / 21 , time = 0.047296 m, info = E6  
get_cls(1066): start looping through inv_lst:  5 ['A0', 'A1', '2A1', '3A1', 'D4'] 
get_cls(1070): looping through inv_lst: (7, 'A0', []) 
get_cls(1075): Since Mtype equals A0 we recover the classification from bas_lst. 
get_cls(1070): looping through inv_lst: (7, 'A1', [e1-e2]) 
get_part_roots(875): r_lst      = 36 [e1-e2, e2-e3, e1-e3, e3-e4, e2-e4, e1-e4, e4-e5, e3-e5, e2-e5, e1-e5, e5-e6, e4-e6, e3-e6, e2-e6, e1-e6, e0-e1-e2-e3, e0-e1-e2-e4, e0-e1-e3-e4, e0-e2-e3-e4, e0-e1-e2-e5, e0-e1-e3-e5, e0-e2-e3-e5, e0-e1-e4-e5, e0-e2-e4-e5, e0-e3-e4-e5, e0-e1-e2-e6, e0-e1-e3-e6, e0-e2-e3-e6, e0-e1-e4-e6, e0-e2-e4-e6, e0-e3-e4-e6, e0-e1-e5-e6, e0-e2-e5-e6, e0-e3-e5-e6, e0-e4-e5-e6, 2e0-e1-e2-e3-e4-e5-e6] 
get_part_roots(876): s_lst      = 15 [e3-e4, e4-e5, e3-e5, e5-e6, e4-e6, e3-e6, e0-e1-e2-e3, e0-e1-e2-e4, e0-e1-e2-e5, e0-e3-e4-e5, e0-e1-e2-e6, e0-e3-e4-e6, e0-e3-e5-e6, e0-e4-e5-e6, 2e0-e1-e2-e3-e4-e5-e6] 
get_part_roots(877): tq1_lst    = 20 [e2-e3, e1-e3, e2-e4, e1-e4, e2-e5, e1-e5, e2-e6, e1-e6, e0-e1-e3-e4, e0-e2-e3-e4, e0-e1-e3-e5, e0-e2-e3-e5, e0-e1-e4-e5, e0-e2-e4-e5, e0-e1-e3-e6, e0-e2-e3-e6, e0-e1-e4-e6, e0-e2-e4-e6, e0-e1-e5-e6, e0-e2-e5-e6] 
get_part_roots(878): tq_lst     = 0 [] 
get_part_roots(879): q_lst      = 0 [] 
get_part_roots(880):        M --> 0 [] 
get_part_roots(881): inv.Md_lst = A1 [e1-e2] , rank = 7 
import_cls(1015): importing:  (7, 'A1', 'A0') [e1-e2] == [e1-e2] 
import_cls(1015): importing:  (7, 'A1', '{A1}') [e1-e2] == [e1-e2] 
import_cls(1015): importing:  (7, 'A1', '{A1}') [e1-e2] == [e1-e2] 
import_cls(1015): importing:  (7, 'A1', '2{A1}') [e1-e2] == [e1-e2] 
import_cls(1015): importing:  (7, 'A1', '2{A1}') [e1-e2] == [e1-e2] 
import_cls(1015): importing:  (7, 'A1', '{A2}') [e1-e2] == [e1-e2] 
import_cls(1015): importing:  (7, 'A1', '3{A1}') [e1-e2] == [e1-e2] 
import_cls(1015): importing:  (7, 'A1', '{A1}+{A2}') [e1-e2] == [e1-e2] 
import_cls(1015): importing:  (7, 'A1', '{A3}') [e1-e2] == [e1-e2] 
import_cls(1015): importing:  (7, 'A1', '{A1}+{A3}') [e1-e2] == [e1-e2] 
get_cls(1086): looping through inv_lst continued after recursive call: (7, 'A1', [e1-e2]) 
get_cls(1094): bas1_lst = 10 [('A1', 'A0'), ('A1', 'A1'), ('A1', 'A1'), ('A1', '2A1'), ('A1', '2A1'), ('A1', 'A2'), ('A1', '3A1'), ('A1', 'A1+A2'), ('A1', 'A3'), ('A1', 'A1+A3')] 
get_cls(1095): s_lst    = 8 [e5-e6, e4-e6, e3-e6, e0-e1-e2-e6, e0-e3-e4-e6, e0-e3-e5-e6, e0-e4-e5-e6, 2e0-e1-e2-e3-e4-e5-e6] 
get_cls(1096): q_lst    = 0 [] 
update(86): ETA = 0.000019944 m, counter = 0 / 21 , time = 9.4970e-7 m, info = get_cls seeking bases in s_lst and q_lst:  (7, 'A1', 'A0')  
update(86): ETA = 0.0082857 m, counter = 1 / 21 , time = 0.00041523 m, info = get_cls seeking bases in s_lst and q_lst:  (7, 'A1', '{A1}')  
update(86): ETA = 0.013776 m, counter = 2 / 21 , time = 0.0011403 m, info = get_cls seeking bases in s_lst and q_lst:  (7, 'A1', '2{A1}')  
update(86): ETA = 0.064645 m, counter = 3 / 21 , time = 0.0047317 m, info = get_cls seeking bases in s_lst and q_lst:  (7, 'A1', '{A2}')  
update(86): ETA = 0.016026 m, counter = 4 / 21 , time = 0.0056744 m, info = get_cls seeking bases in s_lst and q_lst:  (7, 'A1', '3{A1}')  
update(86): ETA = 0.055977 m, counter = 5 / 21 , time = 0.0091730 m, info = get_cls seeking bases in s_lst and q_lst:  (7, 'A1', '{A1}+{A2}')  
update(86): ETA = 0.015256 m, counter = 6 / 21 , time = 0.010190 m, info = get_cls seeking bases in s_lst and q_lst:  (7, 'A1', '{A3}')  
update(86): ETA = 0.014775 m, counter = 7 / 21 , time = 0.011245 m, info = get_cls seeking bases in s_lst and q_lst:  (7, 'A1', '2{A1}+{A2}')  
update(86): ETA = 0.0038255 m, counter = 8 / 21 , time = 0.011540 m, info = get_cls seeking bases in s_lst and q_lst:  (7, 'A1', '2{A2}')  
update(86): ETA = 0.012175 m, counter = 9 / 21 , time = 0.012554 m, info = get_cls seeking bases in s_lst and q_lst:  (7, 'A1', '4{A1}')  
update(86): ETA = 0.0033574 m, counter = 10 / 21 , time = 0.012859 m, info = get_cls seeking bases in s_lst and q_lst:  (7, 'A1', '{A1}+{A3}')  
update(86): ETA = 0.011435 m, counter = 11 / 21 , time = 0.014003 m, info = get_cls seeking bases in s_lst and q_lst:  (7, 'A1', '{A4}')  
update(86): ETA = 0.010396 m, counter = 12 / 21 , time = 0.015158 m, info = get_cls seeking bases in s_lst and q_lst:  (7, 'A1', '{D4}')  
update(86): ETA = 0.0031071 m, counter = 13 / 21 , time = 0.015547 m, info = get_cls seeking bases in s_lst and q_lst:  (7, 'A1', '2{A1}+{A3}')  
update(86): ETA = 0.0026374 m, counter = 14 / 21 , time = 0.015923 m, info = get_cls seeking bases in s_lst and q_lst:  (7, 'A1', '{A1}+2{A2}')  
update(86): ETA = 0.0026544 m, counter = 15 / 21 , time = 0.016366 m, info = get_cls seeking bases in s_lst and q_lst:  (7, 'A1', '{A1}+{A4}')  
update(86): ETA = 0.0025427 m, counter = 16 / 21 , time = 0.016874 m, info = get_cls seeking bases in s_lst and q_lst:  (7, 'A1', '{A5}')  
update(86): ETA = 0.0051738 m, counter = 17 / 21 , time = 0.018168 m, info = get_cls seeking bases in s_lst and q_lst:  (7, 'A1', '{D5}')  
update(86): ETA = 0.0015106 m, counter = 18 / 21 , time = 0.018671 m, info = get_cls seeking bases in s_lst and q_lst:  (7, 'A1', '3{A2}')  
update(86): ETA = 0.0012382 m, counter = 19 / 21 , time = 0.019290 m, info = get_cls seeking bases in s_lst and q_lst:  (7, 'A1', '{A1}+{A5}')  
update(86): ETA = 0.00068753 m, counter = 20 / 21 , time = 0.019978 m, info = get_cls seeking bases in s_lst and q_lst:  (7, 'A1', '{E6}')  
get_cls(1130): Setting Dynkin types of 22 items...please wait... 
update(86): ETA = 0.00011623 m, counter = 0 / 22 , time = 0.000010566 m, info = 7 A1 A0  
update(86): ETA = 0.00055567 m, counter = 2 / 22 , time = 0.000066133 m, info = 7 A1 A1  
update(86): ETA = 0.00049950 m, counter = 4 / 22 , time = 0.00012163 m, info = 7 A1 A1  
update(86): ETA = 0.00044241 m, counter = 6 / 22 , time = 0.00017693 m, info = 7 A1 A1  
update(86): ETA = 0.00038953 m, counter = 8 / 22 , time = 0.00023258 m, info = 7 A1 A1  
update(86): ETA = 0.00054650 m, counter = 10 / 22 , time = 0.00032367 m, info = 7 A1 2A1  
update(86): ETA = 0.00045484 m, counter = 12 / 22 , time = 0.00041463 m, info = 7 A1 2A1  
update(86): ETA = 0.00036294 m, counter = 14 / 22 , time = 0.00050537 m, info = 7 A1 2A1  
update(86): ETA = 0.00027339 m, counter = 16 / 22 , time = 0.00059650 m, info = 7 A1 2A1  
update(86): ETA = 0.00018206 m, counter = 18 / 22 , time = 0.00068753 m, info = 7 A1 2A1  
update(86): ETA = 0.000091016 m, counter = 20 / 22 , time = 0.00077855 m, info = 7 A1 2A1  
get_cls(1145): inv      = A1 , rank = 7 
get_cls(1146): bas1_lst = 10 [('2A1', 2), ('3A1', 1), ('A0', 1), ('A1', 2), ('A1+A2', 1), ('A1+A3', 1), ('A2', 1), ('A3', 1)] 
get_cls(1147): bas2_lst = 21 [('2A1', 12), ('A0', 1), ('A1', 8)] 
get_cls(1148): bas3_lst = 1 [('A0', 1)] 
update(86): ETA = 9.9341e-7 m, counter = 0 / 210 , time = 9.9341e-8 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', 'A0', 'A0')  
get_cls(1168): 	 appended:  (7, 'A1', 'A0') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A0', 'A0') 
get_cls(1168): 	 appended:  (7, 'A1', '{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A1', 'A0') 
get_cls(1168): 	 appended:  (7, 'A1', '2{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A0', '2A1', 'A0') 
update(86): ETA = 0.96609 m, counter = 21 / 210 , time = 0.10734 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A1', 'A0', 'A0')  
get_cls(1168): 	 appended:  (7, 'A1', '{A2}') , ( bas1.type, bas2.type, bas3.type ) = ('A1', 'A1', 'A0') 
get_cls(1168): 	 appended:  (7, 'A1', '{A1}+{A2}') , ( bas1.type, bas2.type, bas3.type ) = ('A1', '2A1', 'A0') 
get_cls(1168): 	 appended:  (7, 'A1', '3{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A1', '2A1', 'A0') 
update(86): ETA = 0.45359 m, counter = 42 / 210 , time = 0.16404 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A1', 'A0', 'A0')  
update(86): ETA = 0.16191 m, counter = 63 / 210 , time = 0.18717 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('2A1', 'A0', 'A0')  
get_cls(1168): 	 appended:  (7, 'A1', '2{A2}') , ( bas1.type, bas2.type, bas3.type ) = ('2A1', '2A1', 'A0') 
update(86): ETA = 0.16697 m, counter = 84 / 210 , time = 0.21500 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('2A1', 'A0', 'A0')  
get_cls(1168): 	 appended:  (7, 'A1', '{A3}') , ( bas1.type, bas2.type, bas3.type ) = ('2A1', 'A1', 'A0') 
update(86): ETA = 0.083391 m, counter = 105 / 210 , time = 0.23168 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A2', 'A0', 'A0')  
get_cls(1168): 	 appended:  (7, 'A1', '{A1}+{A3}') , ( bas1.type, bas2.type, bas3.type ) = ('A2', '2A1', 'A0') 
update(86): ETA = 0.10819 m, counter = 126 / 210 , time = 0.25873 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('3A1', 'A0', 'A0')  
update(86): ETA = 0.036496 m, counter = 147 / 210 , time = 0.27089 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A1+A2', 'A0', 'A0')  
get_cls(1168): 	 appended:  (7, 'A1', '{A4}') , ( bas1.type, bas2.type, bas3.type ) = ('A1+A2', 'A1', 'A0') 
update(86): ETA = 0.023963 m, counter = 168 / 210 , time = 0.28287 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A3', 'A0', 'A0')  
update(86): ETA = 0.011198 m, counter = 189 / 210 , time = 0.29407 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A1+A3', 'A0', 'A0')  
get_cls(1168): 	 appended:  (7, 'A1', '{A5}') , ( bas1.type, bas2.type, bas3.type ) = ('A1+A3', 'A1', 'A0') 
get_cls(1070): looping through inv_lst: (7, '2A1', [e1-e2, e3-e4]) 
get_part_roots(875): r_lst      = 36 [e1-e2, e2-e3, e1-e3, e3-e4, e2-e4, e1-e4, e4-e5, e3-e5, e2-e5, e1-e5, e5-e6, e4-e6, e3-e6, e2-e6, e1-e6, e0-e1-e2-e3, e0-e1-e2-e4, e0-e1-e3-e4, e0-e2-e3-e4, e0-e1-e2-e5, e0-e1-e3-e5, e0-e2-e3-e5, e0-e1-e4-e5, e0-e2-e4-e5, e0-e3-e4-e5, e0-e1-e2-e6, e0-e1-e3-e6, e0-e2-e3-e6, e0-e1-e4-e6, e0-e2-e4-e6, e0-e3-e4-e6, e0-e1-e5-e6, e0-e2-e5-e6, e0-e3-e5-e6, e0-e4-e5-e6, 2e0-e1-e2-e3-e4-e5-e6] 
get_part_roots(876): s_lst      = 6 [e5-e6, e0-e1-e2-e5, e0-e3-e4-e5, e0-e1-e2-e6, e0-e3-e4-e6, 2e0-e1-e2-e3-e4-e5-e6] 
get_part_roots(877): tq1_lst    = 28 [e2-e3, e1-e3, e2-e4, e1-e4, e4-e5, e3-e5, e2-e5, e1-e5, e4-e6, e3-e6, e2-e6, e1-e6, e0-e1-e2-e3, e0-e1-e2-e4, e0-e1-e3-e4, e0-e2-e3-e4, e0-e1-e3-e5, e0-e2-e3-e5, e0-e1-e4-e5, e0-e2-e4-e5, e0-e1-e3-e6, e0-e2-e3-e6, e0-e1-e4-e6, e0-e2-e4-e6, e0-e1-e5-e6, e0-e2-e5-e6, e0-e3-e5-e6, e0-e4-e5-e6] 
get_part_roots(878): tq_lst     = 12 [e2-e3, e1-e3, e2-e4, e1-e4, e0-e1-e3-e5, e0-e2-e3-e5, e0-e1-e4-e5, e0-e2-e4-e5, e0-e1-e3-e6, e0-e2-e3-e6, e0-e1-e4-e6, e0-e2-e4-e6] 
get_part_roots(879): q_lst      = 6 [e2-e3, e1-e3, e0-e1-e3-e5, e0-e2-e3-e5, e0-e1-e3-e6, e0-e2-e3-e6] 
get_part_roots(880):        M --> 6 [e1-e4, e2-e4, e0-e2-e4-e5, e0-e1-e4-e5, e0-e2-e4-e6, e0-e1-e4-e6] 
get_part_roots(881): inv.Md_lst = 2A1 [e1-e2, e3-e4] , rank = 7 
import_cls(1015): importing:  (7, '2A1', 'A0') [e1-e2, e3-e4] == [e1-e2, e3-e4] 
import_cls(1015): importing:  (7, '2A1', '{A1}') [e1-e2, e3-e4] == [e1-e2, e3-e4] 
import_cls(1015): importing:  (7, '2A1', '2A1') [e1-e2, e3-e4] == [e1-e2, e3-e4] 
import_cls(1015): importing:  (7, '2A1', '2{A1}') [e1-e2, e3-e4] == [e1-e2, e3-e4] 
import_cls(1015): importing:  (7, '2A1', '[A3]') [e1-e2, e3-e4] == [e1-e2, e3-e4] 
import_cls(1015): importing:  (7, '2A1', '4A1') [e1-e2, e3-e4] == [e1-e2, e3-e4] 
get_cls(1086): looping through inv_lst continued after recursive call: (7, '2A1', [e1-e2, e3-e4]) 
get_cls(1094): bas1_lst = 6 [('2A1', 'A0'), ('2A1', 'A1'), ('2A1', '2A1'), ('2A1', '2A1'), ('2A1', 'A3'), ('2A1', '4A1')] 
get_cls(1095): s_lst    = 4 [e5-e6, e0-e1-e2-e6, e0-e3-e4-e6, 2e0-e1-e2-e3-e4-e5-e6] 
get_cls(1096): q_lst    = 2 [e0-e1-e3-e6, e0-e2-e3-e6] 
update(86): ETA = 0.000022781 m, counter = 0 / 21 , time = 1.0848e-6 m, info = get_cls seeking bases in s_lst and q_lst:  (7, '2A1', 'A0')  
update(86): ETA = 0.0083264 m, counter = 1 / 21 , time = 0.00041740 m, info = get_cls seeking bases in s_lst and q_lst:  (7, '2A1', '{A1}')  
update(86): ETA = 0.011772 m, counter = 2 / 21 , time = 0.0010370 m, info = get_cls seeking bases in s_lst and q_lst:  (7, '2A1', '2{A1}')  
update(86): ETA = 0.013293 m, counter = 3 / 21 , time = 0.0017755 m, info = get_cls seeking bases in s_lst and q_lst:  (7, '2A1', '{A2}')  
update(86): ETA = 0.011583 m, counter = 4 / 21 , time = 0.0024568 m, info = get_cls seeking bases in s_lst and q_lst:  (7, '2A1', '3{A1}')  
update(86): ETA = 0.0036853 m, counter = 5 / 21 , time = 0.0026872 m, info = get_cls seeking bases in s_lst and q_lst:  (7, '2A1', '{A1}+{A2}')  
update(86): ETA = 0.0040883 m, counter = 6 / 21 , time = 0.0029597 m, info = get_cls seeking bases in s_lst and q_lst:  (7, '2A1', '{A3}')  
update(86): ETA = 0.010972 m, counter = 7 / 21 , time = 0.0037434 m, info = get_cls seeking bases in s_lst and q_lst:  (7, '2A1', '2{A1}+{A2}')  
update(86): ETA = 0.0038519 m, counter = 8 / 21 , time = 0.0040397 m, info = get_cls seeking bases in s_lst and q_lst:  (7, '2A1', '2{A2}')  
update(86): ETA = 0.0028064 m, counter = 9 / 21 , time = 0.0042736 m, info = get_cls seeking bases in s_lst and q_lst:  (7, '2A1', '4{A1}')  
update(86): ETA = 0.0033843 m, counter = 10 / 21 , time = 0.0045813 m, info = get_cls seeking bases in s_lst and q_lst:  (7, '2A1', '{A1}+{A3}')  
update(86): ETA = 0.0036347 m, counter = 11 / 21 , time = 0.0049447 m, info = get_cls seeking bases in s_lst and q_lst:  (7, '2A1', '{A4}')  
update(86): ETA = 0.0032809 m, counter = 12 / 21 , time = 0.0053093 m, info = get_cls seeking bases in s_lst and q_lst:  (7, '2A1', '{D4}')  
update(86): ETA = 0.0032139 m, counter = 13 / 21 , time = 0.0057110 m, info = get_cls seeking bases in s_lst and q_lst:  (7, '2A1', '2{A1}+{A3}')  
update(86): ETA = 0.0026634 m, counter = 14 / 21 , time = 0.0060915 m, info = get_cls seeking bases in s_lst and q_lst:  (7, '2A1', '{A1}+2{A2}')  
update(86): ETA = 0.0026794 m, counter = 15 / 21 , time = 0.0065381 m, info = get_cls seeking bases in s_lst and q_lst:  (7, '2A1', '{A1}+{A4}')  
update(86): ETA = 0.0025659 m, counter = 16 / 21 , time = 0.0070512 m, info = get_cls seeking bases in s_lst and q_lst:  (7, '2A1', '{A5}')  
update(86): ETA = 0.0020582 m, counter = 17 / 21 , time = 0.0075658 m, info = get_cls seeking bases in s_lst and q_lst:  (7, '2A1', '{D5}')  
update(86): ETA = 0.0015223 m, counter = 18 / 21 , time = 0.0080732 m, info = get_cls seeking bases in s_lst and q_lst:  (7, '2A1', '3{A2}')  
update(86): ETA = 0.0012172 m, counter = 19 / 21 , time = 0.0086818 m, info = get_cls seeking bases in s_lst and q_lst:  (7, '2A1', '{A1}+{A5}')  
update(86): ETA = 0.00069120 m, counter = 20 / 21 , time = 0.0093730 m, info = get_cls seeking bases in s_lst and q_lst:  (7, '2A1', '{E6}')  
get_cls(1130): Setting Dynkin types of 10 items...please wait... 
update(86): ETA = 0.00028567 m, counter = 0 / 10 , time = 0.000028567 m, info = 7 2A1 A0  
update(86): ETA = 0.00047804 m, counter = 1 / 10 , time = 0.000081682 m, info = 7 2A1 A1  
update(86): ETA = 0.00042321 m, counter = 2 / 10 , time = 0.00013458 m, info = 7 2A1 A1  
update(86): ETA = 0.00044135 m, counter = 3 / 10 , time = 0.00019763 m, info = 7 2A1 A1  
update(86): ETA = 0.00031650 m, counter = 4 / 10 , time = 0.00025038 m, info = 7 2A1 A1  
update(86): ETA = 0.00035443 m, counter = 5 / 10 , time = 0.00032127 m, info = 7 2A1 2A1  
update(86): ETA = 0.00028392 m, counter = 6 / 10 , time = 0.00039225 m, info = 7 2A1 2A1  
update(86): ETA = 0.00012710 m, counter = 7 / 10 , time = 0.00043462 m, info = 7 2A1 A0  
update(86): ETA = 0.00014207 m, counter = 8 / 10 , time = 0.00050565 m, info = 7 2A1 2A1  
update(86): ETA = 0.000070818 m, counter = 9 / 10 , time = 0.00057647 m, info = 7 2A1 2A1  
get_cls(1145): inv      = 2A1 , rank = 7 
get_cls(1146): bas1_lst = 6 [('2A1', 2), ('4A1', 1), ('A0', 1), ('A1', 1), ('A3', 1)] 
get_cls(1147): bas2_lst = 7 [('2A1', 2), ('A0', 1), ('A1', 4)] 
get_cls(1148): bas3_lst = 3 [('2A1', 2), ('A0', 1)] 
update(86): ETA = 1.4186e-6 m, counter = 0 / 126 , time = 1.3510e-7 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', 'A0', 'A0')  
get_cls(1168): 	 appended:  (7, '2A1', 'A0') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A0', 'A0') 
get_cls(1168): 	 appended:  (7, '2A1', '2A1') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A0', '2A1') 
get_cls(1168): 	 appended:  (7, '2A1', '{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A1', 'A0') 
update(86): ETA = 0.31968 m, counter = 12 / 126 , time = 0.033650 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', 'A1', 'A0')  
get_cls(1168): 	 appended:  (7, '2A1', '2{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A0', '2A1', 'A0') 
get_cls(1168): 	 appended:  (7, '2A1', '2A1+{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A1', 'A0', '2A1') 
update(86): ETA = 0.24837 m, counter = 24 / 126 , time = 0.062870 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A1', 'A1', 'A0')  
get_cls(1168): 	 appended:  (7, '2A1', '{A2}') , ( bas1.type, bas2.type, bas3.type ) = ('A1', 'A1', 'A0') 
update(86): ETA = 0.067529 m, counter = 36 / 126 , time = 0.071874 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A1', '2A1', 'A0')  
get_cls(1168): 	 appended:  (7, '2A1', '4A1') , ( bas1.type, bas2.type, bas3.type ) = ('2A1', 'A0', '2A1') 
get_cls(1168): 	 appended:  (7, '2A1', '[A3]') , ( bas1.type, bas2.type, bas3.type ) = ('2A1', 'A1', 'A0') 
update(86): ETA = 0.084223 m, counter = 48 / 126 , time = 0.084831 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('2A1', 'A1', 'A0')  
update(86): ETA = 0.047377 m, counter = 60 / 126 , time = 0.093445 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('2A1', '2A1', 'A0')  
get_cls(1168): 	 appended:  (7, '2A1', '2{A1}+2A1') , ( bas1.type, bas2.type, bas3.type ) = ('2A1', '2A1', 'A0') 
get_cls(1168): 	 appended:  (7, '2A1', '{A3}') , ( bas1.type, bas2.type, bas3.type ) = ('2A1', 'A1', 'A0') 
update(86): ETA = 0.095365 m, counter = 72 / 126 , time = 0.11464 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('2A1', 'A1', 'A0')  
update(86): ETA = 0.0011209 m, counter = 84 / 126 , time = 0.11496 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A3', 'A0', 'A0')  
get_cls(1168): 	 appended:  (7, '2A1', '2A1+[A3]') , ( bas1.type, bas2.type, bas3.type ) = ('A3', 'A0', '2A1') 
get_cls(1168): 	 appended:  (7, '2A1', '[D4]') , ( bas1.type, bas2.type, bas3.type ) = ('A3', 'A1', 'A0') 
update(86): ETA = 0.030208 m, counter = 96 / 126 , time = 0.12704 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A3', 'A1', 'A0')  
update(86): ETA = 0.0067640 m, counter = 108 / 126 , time = 0.13155 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('4A1', 'A1', 'A0')  
update(86): ETA = 0.0039291 m, counter = 120 / 126 , time = 0.13941 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('4A1', '2A1', 'A0')  
get_cls(1070): looping through inv_lst: (7, '3A1', [e1-e2, e3-e4, e5-e6]) 
get_part_roots(875): r_lst      = 36 [e1-e2, e2-e3, e1-e3, e3-e4, e2-e4, e1-e4, e4-e5, e3-e5, e2-e5, e1-e5, e5-e6, e4-e6, e3-e6, e2-e6, e1-e6, e0-e1-e2-e3, e0-e1-e2-e4, e0-e1-e3-e4, e0-e2-e3-e4, e0-e1-e2-e5, e0-e1-e3-e5, e0-e2-e3-e5, e0-e1-e4-e5, e0-e2-e4-e5, e0-e3-e4-e5, e0-e1-e2-e6, e0-e1-e3-e6, e0-e2-e3-e6, e0-e1-e4-e6, e0-e2-e4-e6, e0-e3-e4-e6, e0-e1-e5-e6, e0-e2-e5-e6, e0-e3-e5-e6, e0-e4-e5-e6, 2e0-e1-e2-e3-e4-e5-e6] 
get_part_roots(876): s_lst      = 1 [2e0-e1-e2-e3-e4-e5-e6] 
get_part_roots(877): tq1_lst    = 32 [e2-e3, e1-e3, e2-e4, e1-e4, e4-e5, e3-e5, e2-e5, e1-e5, e4-e6, e3-e6, e2-e6, e1-e6, e0-e1-e2-e3, e0-e1-e2-e4, e0-e1-e3-e4, e0-e2-e3-e4, e0-e1-e2-e5, e0-e1-e3-e5, e0-e2-e3-e5, e0-e1-e4-e5, e0-e2-e4-e5, e0-e3-e4-e5, e0-e1-e2-e6, e0-e1-e3-e6, e0-e2-e3-e6, e0-e1-e4-e6, e0-e2-e4-e6, e0-e3-e4-e6, e0-e1-e5-e6, e0-e2-e5-e6, e0-e3-e5-e6, e0-e4-e5-e6] 
get_part_roots(878): tq_lst     = 20 [e2-e3, e1-e3, e2-e4, e1-e4, e4-e5, e3-e5, e2-e5, e1-e5, e4-e6, e3-e6, e2-e6, e1-e6, e0-e1-e3-e5, e0-e2-e3-e5, e0-e1-e4-e5, e0-e2-e4-e5, e0-e1-e3-e6, e0-e2-e3-e6, e0-e1-e4-e6, e0-e2-e4-e6] 
get_part_roots(879): q_lst      = 10 [e2-e3, e1-e3, e4-e5, e3-e5, e2-e5, e1-e5, e0-e1-e3-e5, e0-e2-e3-e5, e0-e1-e4-e5, e0-e2-e4-e5] 
get_part_roots(880):        M --> 10 [e1-e4, e2-e4, e3-e6, e4-e6, e1-e6, e2-e6, e0-e2-e4-e6, e0-e1-e4-e6, e0-e2-e3-e6, e0-e1-e3-e6] 
get_part_roots(881): inv.Md_lst = 3A1 [e1-e2, e3-e4, e5-e6] , rank = 7 
get_cls(1086): looping through inv_lst continued after recursive call: (7, '3A1', [e1-e2, e3-e4, e5-e6]) 
get_cls(1094): bas1_lst = 1 [('3A1', 'A0')] 
get_cls(1095): s_lst    = 1 [2e0-e1-e2-e3-e4-e5-e6] 
get_cls(1096): q_lst    = 10 [e2-e3, e1-e3, e4-e5, e3-e5, e2-e5, e1-e5, e0-e1-e3-e5, e0-e2-e3-e5, e0-e1-e4-e5, e0-e2-e4-e5] 
update(86): ETA = 0.000021362 m, counter = 0 / 21 , time = 1.0173e-6 m, info = get_cls seeking bases in s_lst and q_lst:  (7, '3A1', 'A0')  
update(86): ETA = 0.0083287 m, counter = 1 / 21 , time = 0.00041745 m, info = get_cls seeking bases in s_lst and q_lst:  (7, '3A1', '{A1}')  
update(86): ETA = 0.025217 m, counter = 2 / 21 , time = 0.0017447 m, info = get_cls seeking bases in s_lst and q_lst:  (7, '3A1', '2{A1}')  
update(86): ETA = 0.15773 m, counter = 3 / 21 , time = 0.010507 m, info = get_cls seeking bases in s_lst and q_lst:  (7, '3A1', '{A2}')  
update(86): ETA = 0.024829 m, counter = 4 / 21 , time = 0.011968 m, info = get_cls seeking bases in s_lst and q_lst:  (7, '3A1', '3{A1}')  
update(86): ETA = 0.15623 m, counter = 5 / 21 , time = 0.021732 m, info = get_cls seeking bases in s_lst and q_lst:  (7, '3A1', '{A1}+{A2}')  
update(86): ETA = 0.045223 m, counter = 6 / 21 , time = 0.024747 m, info = get_cls seeking bases in s_lst and q_lst:  (7, '3A1', '{A3}')  
update(86): ETA = 0.027484 m, counter = 7 / 21 , time = 0.026711 m, info = get_cls seeking bases in s_lst and q_lst:  (7, '3A1', '2{A1}+{A2}')  
update(86): ETA = 0.0038742 m, counter = 8 / 21 , time = 0.027009 m, info = get_cls seeking bases in s_lst and q_lst:  (7, '3A1', '2{A2}')  
update(86): ETA = 0.0028082 m, counter = 9 / 21 , time = 0.027243 m, info = get_cls seeking bases in s_lst and q_lst:  (7, '3A1', '4{A1}')  
update(86): ETA = 0.0034006 m, counter = 10 / 21 , time = 0.027552 m, info = get_cls seeking bases in s_lst and q_lst:  (7, '3A1', '{A1}+{A3}')  
update(86): ETA = 0.0036318 m, counter = 11 / 21 , time = 0.027915 m, info = get_cls seeking bases in s_lst and q_lst:  (7, '3A1', '{A4}')  
update(86): ETA = 0.0032779 m, counter = 12 / 21 , time = 0.028279 m, info = get_cls seeking bases in s_lst and q_lst:  (7, '3A1', '{D4}')  
update(86): ETA = 0.0031289 m, counter = 13 / 21 , time = 0.028670 m, info = get_cls seeking bases in s_lst and q_lst:  (7, '3A1', '2{A1}+{A3}')  
update(86): ETA = 0.0026606 m, counter = 14 / 21 , time = 0.029050 m, info = get_cls seeking bases in s_lst and q_lst:  (7, '3A1', '{A1}+2{A2}')  
update(86): ETA = 0.0027351 m, counter = 15 / 21 , time = 0.029506 m, info = get_cls seeking bases in s_lst and q_lst:  (7, '3A1', '{A1}+{A4}')  
update(86): ETA = 0.0025733 m, counter = 16 / 21 , time = 0.030021 m, info = get_cls seeking bases in s_lst and q_lst:  (7, '3A1', '{A5}')  
update(86): ETA = 0.0020611 m, counter = 17 / 21 , time = 0.030536 m, info = get_cls seeking bases in s_lst and q_lst:  (7, '3A1', '{D5}')  
update(86): ETA = 0.0015220 m, counter = 18 / 21 , time = 0.031043 m, info = get_cls seeking bases in s_lst and q_lst:  (7, '3A1', '3{A2}')  
update(86): ETA = 0.0012158 m, counter = 19 / 21 , time = 0.031651 m, info = get_cls seeking bases in s_lst and q_lst:  (7, '3A1', '{A1}+{A5}')  
update(86): ETA = 0.00069149 m, counter = 20 / 21 , time = 0.032343 m, info = get_cls seeking bases in s_lst and q_lst:  (7, '3A1', '{E6}')  
get_cls(1130): Setting Dynkin types of 33 items...please wait... 
update(86): ETA = 0.00064075 m, counter = 0 / 33 , time = 0.000058250 m, info = 7 3A1 A0  
update(86): ETA = 0.0022695 m, counter = 3 / 33 , time = 0.00028520 m, info = 7 3A1 2A1  
update(86): ETA = 0.0024573 m, counter = 6 / 33 , time = 0.00055823 m, info = 7 3A1 2A1  
update(86): ETA = 0.0022841 m, counter = 9 / 33 , time = 0.00084375 m, info = 7 3A1 A2  
update(86): ETA = 0.0022371 m, counter = 12 / 33 , time = 0.0011633 m, info = 7 3A1 A2  
update(86): ETA = 0.0032134 m, counter = 15 / 33 , time = 0.0016989 m, info = 7 3A1 2A1+A2  
update(86): ETA = 0.0026811 m, counter = 18 / 33 , time = 0.0022351 m, info = 7 3A1 2A1+A2  
update(86): ETA = 0.0020942 m, counter = 21 / 33 , time = 0.0027587 m, info = 7 3A1 2A1+A2  
update(86): ETA = 0.0015705 m, counter = 24 / 33 , time = 0.0032822 m, info = 7 3A1 2A1+A2  
update(86): ETA = 0.0010720 m, counter = 27 / 33 , time = 0.0038182 m, info = 7 3A1 2A2  
update(86): ETA = 0.00082377 m, counter = 30 / 33 , time = 0.0046419 m, info = 7 3A1 3A2  
get_cls(1145): inv      = 3A1 , rank = 7 
get_cls(1146): bas1_lst = 1 [('A0', 1)] 
get_cls(1147): bas2_lst = 2 [('A0', 1), ('A1', 1)] 
get_cls(1148): bas3_lst = 31 [('2A1', 6), ('2A1+A2', 12), ('2A2', 4), ('3A2', 4), ('A0', 1), ('A2', 4)] 
update(86): ETA = 1.5193e-6 m, counter = 0 / 62 , time = 1.4702e-7 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', 'A0', 'A0')  
get_cls(1168): 	 appended:  (7, '3A1', 'A0') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A0', 'A0') 
get_cls(1168): 	 appended:  (7, '3A1', '2A1') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A0', '2A1') 
update(86): ETA = 0.28484 m, counter = 6 / 62 , time = 0.030519 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', 'A0', '2A1')  
get_cls(1168): 	 appended:  (7, '3A1', '[A2]') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A0', 'A2') 
get_cls(1168): 	 appended:  (7, '3A1', '2A1+[A2]') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A0', '2A1+A2') 
update(86): ETA = 0.21855 m, counter = 12 / 62 , time = 0.056744 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', 'A0', '2A1+A2')  
update(86): ETA = 0.16928 m, counter = 18 / 62 , time = 0.079829 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', 'A0', '2A1+A2')  
get_cls(1168): 	 appended:  (7, '3A1', '2A2') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A0', '2A2') 
update(86): ETA = 0.14646 m, counter = 24 / 62 , time = 0.10295 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', 'A0', '2A2')  
get_cls(1168): 	 appended:  (7, '3A1', '[A2]+2A2') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A0', '3A2') 
update(86): ETA = 0.12649 m, counter = 30 / 62 , time = 0.12667 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', 'A0', '3A2')  
get_cls(1168): 	 appended:  (7, '3A1', '{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A1', 'A0') 
get_cls(1168): 	 appended:  (7, '3A1', '2A1+{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A1', '2A1') 
update(86): ETA = 0.11513 m, counter = 36 / 62 , time = 0.15324 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', 'A1', '2A1')  
update(86): ETA = 0.027958 m, counter = 42 / 62 , time = 0.16163 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', 'A1', '2A1+A2')  
update(86): ETA = 0.00036510 m, counter = 48 / 62 , time = 0.16178 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', 'A1', '2A1+A2')  
update(86): ETA = 0.00020816 m, counter = 54 / 62 , time = 0.16194 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', 'A1', '2A2')  
get_cls(1168): 	 appended:  (7, '3A1', '{A1}+2A2') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A1', '2A2') 
update(86): ETA = 0.0052614 m, counter = 60 / 62 , time = 0.17772 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', 'A1', '3A2')  
get_cls(1070): looping through inv_lst: (7, 'D4', [e2-e3, e3-e4, e4-e5, e0-e1-e2-e3]) 
get_part_roots(875): r_lst      = 36 [e1-e2, e2-e3, e1-e3, e3-e4, e2-e4, e1-e4, e4-e5, e3-e5, e2-e5, e1-e5, e5-e6, e4-e6, e3-e6, e2-e6, e1-e6, e0-e1-e2-e3, e0-e1-e2-e4, e0-e1-e3-e4, e0-e2-e3-e4, e0-e1-e2-e5, e0-e1-e3-e5, e0-e2-e3-e5, e0-e1-e4-e5, e0-e2-e4-e5, e0-e3-e4-e5, e0-e1-e2-e6, e0-e1-e3-e6, e0-e2-e3-e6, e0-e1-e4-e6, e0-e2-e4-e6, e0-e3-e4-e6, e0-e1-e5-e6, e0-e2-e5-e6, e0-e3-e5-e6, e0-e4-e5-e6, 2e0-e1-e2-e3-e4-e5-e6] 
get_part_roots(876): s_lst      = 0 [] 
get_part_roots(877): tq1_lst    = 24 [e1-e2, e1-e3, e1-e4, e1-e5, e5-e6, e4-e6, e3-e6, e2-e6, e1-e6, e0-e2-e3-e4, e0-e2-e3-e5, e0-e2-e4-e5, e0-e3-e4-e5, e0-e1-e2-e6, e0-e1-e3-e6, e0-e2-e3-e6, e0-e1-e4-e6, e0-e2-e4-e6, e0-e3-e4-e6, e0-e1-e5-e6, e0-e2-e5-e6, e0-e3-e5-e6, e0-e4-e5-e6, 2e0-e1-e2-e3-e4-e5-e6] 
get_part_roots(878): tq_lst     = 24 [e1-e2, e1-e3, e1-e4, e1-e5, e5-e6, e4-e6, e3-e6, e2-e6, e1-e6, e0-e2-e3-e4, e0-e2-e3-e5, e0-e2-e4-e5, e0-e3-e4-e5, e0-e1-e2-e6, e0-e1-e3-e6, e0-e2-e3-e6, e0-e1-e4-e6, e0-e2-e4-e6, e0-e3-e4-e6, e0-e1-e5-e6, e0-e2-e5-e6, e0-e3-e5-e6, e0-e4-e5-e6, 2e0-e1-e2-e3-e4-e5-e6] 
get_part_roots(879): q_lst      = 12 [e1-e2, e1-e3, e1-e4, e1-e5, e5-e6, e4-e6, e3-e6, e2-e6, e1-e6, e0-e2-e3-e6, e0-e2-e4-e6, e0-e3-e4-e6] 
get_part_roots(880):        M --> 12 [e0-e3-e4-e5, e0-e2-e4-e5, e0-e2-e3-e5, e0-e2-e3-e4, e0-e1-e5-e6, e0-e1-e4-e6, e0-e1-e3-e6, e0-e1-e2-e6, 2e0-e1-e2-e3-e4-e5-e6, e0-e4-e5-e6, e0-e3-e5-e6, e0-e2-e5-e6] 
get_part_roots(881): inv.Md_lst = D4 [e2-e3, e3-e4, e4-e5, e0-e1-e2-e3] , rank = 7 
import_cls(1015): importing:  (7, 'D4', 'A0') [e2-e3, e3-e4, e4-e5, e0-e1-e2-e3] == [e2-e3, e3-e4, e4-e5, e0-e1-e2-e3] 
import_cls(1015): importing:  (7, 'D4', '2A1') [e2-e3, e3-e4, e4-e5, e0-e1-e2-e3] == [e2-e3, e3-e4, e4-e5, e0-e1-e2-e3] 
get_cls(1086): looping through inv_lst continued after recursive call: (7, 'D4', [e2-e3, e3-e4, e4-e5, e0-e1-e2-e3]) 
get_cls(1094): bas1_lst = 2 [('D4', 'A0'), ('D4', '2A1')] 
get_cls(1095): s_lst    = 0 [] 
get_cls(1096): q_lst    = 8 [e5-e6, e4-e6, e3-e6, e2-e6, e1-e6, e0-e2-e3-e6, e0-e2-e4-e6, e0-e3-e4-e6] 
update(86): ETA = 0.000029457 m, counter = 0 / 21 , time = 1.4027e-6 m, info = get_cls seeking bases in s_lst and q_lst:  (7, 'D4', 'A0')  
update(86): ETA = 0.0083170 m, counter = 1 / 21 , time = 0.00041725 m, info = get_cls seeking bases in s_lst and q_lst:  (7, 'D4', '{A1}')  
update(86): ETA = 0.013734 m, counter = 2 / 21 , time = 0.0011401 m, info = get_cls seeking bases in s_lst and q_lst:  (7, 'D4', '2{A1}')  
update(86): ETA = 0.026955 m, counter = 3 / 21 , time = 0.0026376 m, info = get_cls seeking bases in s_lst and q_lst:  (7, 'D4', '{A2}')  
update(86): ETA = 0.0099580 m, counter = 4 / 21 , time = 0.0032233 m, info = get_cls seeking bases in s_lst and q_lst:  (7, 'D4', '3{A1}')  
update(86): ETA = 0.030240 m, counter = 5 / 21 , time = 0.0051133 m, info = get_cls seeking bases in s_lst and q_lst:  (7, 'D4', '{A1}+{A2}')  
update(86): ETA = 0.010051 m, counter = 6 / 21 , time = 0.0057834 m, info = get_cls seeking bases in s_lst and q_lst:  (7, 'D4', '{A3}')  
update(86): ETA = 0.0096303 m, counter = 7 / 21 , time = 0.0064713 m, info = get_cls seeking bases in s_lst and q_lst:  (7, 'D4', '2{A1}+{A2}')  
update(86): ETA = 0.0038437 m, counter = 8 / 21 , time = 0.0067670 m, info = get_cls seeking bases in s_lst and q_lst:  (7, 'D4', '2{A2}')  
update(86): ETA = 0.0027998 m, counter = 9 / 21 , time = 0.0070003 m, info = get_cls seeking bases in s_lst and q_lst:  (7, 'D4', '4{A1}')  
update(86): ETA = 0.0033820 m, counter = 10 / 21 , time = 0.0073077 m, info = get_cls seeking bases in s_lst and q_lst:  (7, 'D4', '{A1}+{A3}')  
update(86): ETA = 0.0036238 m, counter = 11 / 21 , time = 0.0076701 m, info = get_cls seeking bases in s_lst and q_lst:  (7, 'D4', '{A4}')  
update(86): ETA = 0.0032697 m, counter = 12 / 21 , time = 0.0080334 m, info = get_cls seeking bases in s_lst and q_lst:  (7, 'D4', '{D4}')  
update(86): ETA = 0.0031240 m, counter = 13 / 21 , time = 0.0084239 m, info = get_cls seeking bases in s_lst and q_lst:  (7, 'D4', '2{A1}+{A3}')  
update(86): ETA = 0.0026557 m, counter = 14 / 21 , time = 0.0088033 m, info = get_cls seeking bases in s_lst and q_lst:  (7, 'D4', '{A1}+2{A2}')  
update(86): ETA = 0.0026696 m, counter = 15 / 21 , time = 0.0092482 m, info = get_cls seeking bases in s_lst and q_lst:  (7, 'D4', '{A1}+{A4}')  
update(86): ETA = 0.0026020 m, counter = 16 / 21 , time = 0.0097686 m, info = get_cls seeking bases in s_lst and q_lst:  (7, 'D4', '{A5}')  
update(86): ETA = 0.0020479 m, counter = 17 / 21 , time = 0.010281 m, info = get_cls seeking bases in s_lst and q_lst:  (7, 'D4', '{D5}')  
update(86): ETA = 0.0015150 m, counter = 18 / 21 , time = 0.010786 m, info = get_cls seeking bases in s_lst and q_lst:  (7, 'D4', '3{A2}')  
update(86): ETA = 0.0012119 m, counter = 19 / 21 , time = 0.011392 m, info = get_cls seeking bases in s_lst and q_lst:  (7, 'D4', '{A1}+{A5}')  
update(86): ETA = 0.00068997 m, counter = 20 / 21 , time = 0.012082 m, info = get_cls seeking bases in s_lst and q_lst:  (7, 'D4', '{E6}')  
get_cls(1130): Setting Dynkin types of 10 items...please wait... 
update(86): ETA = 0.0013713 m, counter = 0 / 10 , time = 0.00013713 m, info = 7 D4 A0  
update(86): ETA = 0.0013579 m, counter = 1 / 10 , time = 0.00028802 m, info = 7 D4 A0  
update(86): ETA = 0.0014320 m, counter = 2 / 10 , time = 0.00046702 m, info = 7 D4 2A1  
update(86): ETA = 0.0012575 m, counter = 3 / 10 , time = 0.00064667 m, info = 7 D4 2A1  
update(86): ETA = 0.0010784 m, counter = 4 / 10 , time = 0.00082640 m, info = 7 D4 2A1  
update(86): ETA = 0.00089383 m, counter = 5 / 10 , time = 0.0010052 m, info = 7 D4 2A1  
update(86): ETA = 0.00071713 m, counter = 6 / 10 , time = 0.0011845 m, info = 7 D4 2A1  
update(86): ETA = 0.00053780 m, counter = 7 / 10 , time = 0.0013637 m, info = 7 D4 2A1  
update(86): ETA = 0.00037743 m, counter = 8 / 10 , time = 0.0015524 m, info = 7 D4 2A1  
update(86): ETA = 0.00017863 m, counter = 9 / 10 , time = 0.0017311 m, info = 7 D4 2A1  
get_cls(1145): inv      = D4 , rank = 7 
get_cls(1146): bas1_lst = 2 [('2A1', 1), ('A0', 1)] 
get_cls(1147): bas2_lst = 1 [('A0', 1)] 
get_cls(1148): bas3_lst = 9 [('2A1', 8), ('A0', 1)] 
update(86): ETA = 2.6464e-6 m, counter = 0 / 18 , time = 1.4702e-7 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', 'A0', 'A0')  
get_cls(1168): 	 appended:  (7, 'D4', 'A0') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A0', 'A0') 
update(86): ETA = 0.12413 m, counter = 1 / 18 , time = 0.0073019 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', 'A0', '2A1')  
get_cls(1168): 	 appended:  (7, 'D4', '2A1') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A0', '2A1') 
update(86): ETA = 0.075995 m, counter = 2 / 18 , time = 0.012052 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', 'A0', '2A1')  
update(86): ETA = 0.070556 m, counter = 3 / 18 , time = 0.016755 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', 'A0', '2A1')  
update(86): ETA = 0.065875 m, counter = 4 / 18 , time = 0.021461 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', 'A0', '2A1')  
update(86): ETA = 0.061456 m, counter = 5 / 18 , time = 0.026188 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', 'A0', '2A1')  
update(86): ETA = 0.057062 m, counter = 6 / 18 , time = 0.030943 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', 'A0', '2A1')  
update(86): ETA = 0.052026 m, counter = 7 / 18 , time = 0.035673 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', 'A0', '2A1')  
update(86): ETA = 0.047394 m, counter = 8 / 18 , time = 0.040412 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', 'A0', '2A1')  
update(86): ETA = 0.042707 m, counter = 9 / 18 , time = 0.045157 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('2A1', 'A0', 'A0')  
update(86): ETA = 0.038037 m, counter = 10 / 18 , time = 0.049912 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('2A1', 'A0', '2A1')  
get_cls(1168): 	 appended:  (7, 'D4', '2A2') , ( bas1.type, bas2.type, bas3.type ) = ('2A1', 'A0', '2A1') 
update(86): ETA = 0.027920 m, counter = 11 / 18 , time = 0.053901 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('2A1', 'A0', '2A1')  
update(86): ETA = 0.022301 m, counter = 12 / 18 , time = 0.057617 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('2A1', 'A0', '2A1')  
update(86): ETA = 0.018597 m, counter = 13 / 18 , time = 0.061337 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('2A1', 'A0', '2A1')  
update(86): ETA = 0.014835 m, counter = 14 / 18 , time = 0.065046 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('2A1', 'A0', '2A1')  
update(86): ETA = 0.000097597 m, counter = 15 / 18 , time = 0.065078 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('2A1', 'A0', '2A1')  
update(86): ETA = 0.000063634 m, counter = 16 / 18 , time = 0.065110 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('2A1', 'A0', '2A1')  
update(86): ETA = 0.000031952 m, counter = 17 / 18 , time = 0.065142 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('2A1', 'A0', '2A1')  
usecase__get_cls(68): Classification of root bases:
 rownr rank   Mtype            type  #-2  #-1 #fam #-2R  #-1R  #famR                                                                Md_lst                                                                                                                                  d_lst                                                                                                                                                                                                                                                                                                                                                   M
    79    7      A0              A0    0   27   27    0    27     27                                                                    []                                                                                                                                     []                                                                                                                                                                                   [(1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 1)]
    80    7      A0            {A1}    1   21   21    1    21     21                                                                    []                                                                                                                                [e1-e2]                                                                                                                                                                                   [(1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 1)]
    81    7      A0           2{A1}    2   16   16    2    16     16                                                                    []                                                                                                                         [e1-e2, e3-e4]                                                                                                                                                                                   [(1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 1)]
    82    7      A0            {A2}    2   15   15    2    15     15                                                                    []                                                                                                                         [e1-e2, e2-e3]                                                                                                                                                                                   [(1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 1)]
    83    7      A0           3{A1}    3   12   12    3    12     12                                                                    []                                                                                                                  [e1-e2, e3-e4, e5-e6]                                                                                                                                                                                   [(1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 1)]
    84    7      A0       {A1}+{A2}    3   11   11    3    11     11                                                                    []                                                                                                                  [e1-e2, e2-e3, e4-e5]                                                                                                                                                                                   [(1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 1)]
    85    7      A0            {A3}    3   10   10    3    10     10                                                                    []                                                                                                                  [e1-e2, e2-e3, e3-e4]                                                                                                                                                                                   [(1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 1)]
    86    7      A0      2{A1}+{A2}    4    8    8    4     8      8                                                                    []                                                                                                     [e1-e2, e2-e3, e4-e5, e0-e1-e2-e3]                                                                                                                                                                                   [(1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 1)]
    87    7      A0           2{A2}    4    7    7    4     7      7                                                                    []                                                                                                           [e1-e2, e2-e3, e4-e5, e5-e6]                                                                                                                                                                                   [(1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 1)]
    88    7      A0           4{A1}    4    9    9    4     9      9                                                                    []                                                                                           [e1-e2, e3-e4, e5-e6, 2e0-e1-e2-e3-e4-e5-e6]                                                                                                                                                                                   [(1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 1)]
    89    7      A0       {A1}+{A3}    4    7    7    4     7      7                                                                    []                                                                                                           [e1-e2, e2-e3, e3-e4, e5-e6]                                                                                                                                                                                   [(1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 1)]
    90    7      A0            {A4}    4    6    6    4     6      6                                                                    []                                                                                                           [e1-e2, e2-e3, e3-e4, e4-e5]                                                                                                                                                                                   [(1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 1)]
    91    7      A0            {D4}    4    6    6    4     6      6                                                                    []                                                                                                     [e2-e3, e3-e4, e4-e5, e0-e1-e2-e3]                                                                                                                                                                                   [(1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 1)]
    92    7      A0      2{A1}+{A3}    5    5    5    5     5      5                                                                    []                                                                                    [e1-e2, e2-e3, e3-e4, e5-e6, 2e0-e1-e2-e3-e4-e5-e6]                                                                                                                                                                                   [(1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 1)]
    93    7      A0      {A1}+2{A2}    5    5    5    5     5      5                                                                    []                                                                                              [e1-e2, e2-e3, e4-e5, e5-e6, e0-e1-e2-e3]                                                                                                                                                                                   [(1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 1)]
    94    7      A0       {A1}+{A4}    5    4    4    5     4      4                                                                    []                                                                                              [e1-e2, e2-e3, e3-e4, e5-e6, e0-e1-e2-e3]                                                                                                                                                                                   [(1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 1)]
    95    7      A0            {A5}    5    3    3    5     3      3                                                                    []                                                                                                    [e1-e2, e2-e3, e3-e4, e4-e5, e5-e6]                                                                                                                                                                                   [(1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 1)]
    96    7      A0            {D5}    5    3    3    5     3      3                                                                    []                                                                                              [e1-e2, e2-e3, e3-e4, e4-e5, e0-e1-e2-e3]                                                                                                                                                                                   [(1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 1)]
    97    7      A0           3{A2}    6    3    3    6     3      3                                                                    []                                                                                 [e1-e2, e2-e3, e4-e5, e5-e6, e0-e1-e2-e3, e0-e4-e5-e6]                                                                                                                                                                                   [(1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 1)]
    98    7      A0       {A1}+{A5}    6    2    2    6     2      2                                                                    []                                                                             [e1-e2, e2-e3, e3-e4, e4-e5, e5-e6, 2e0-e1-e2-e3-e4-e5-e6]                                                                                                                                                                                   [(1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 1)]
    99    7      A0            {E6}    6    1    1    6     1      1                                                                    []                                                                                       [e1-e2, e2-e3, e3-e4, e4-e5, e5-e6, e0-e1-e2-e3]                                                                                                                                                                                   [(1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 1)]
   100    7      A1              A0    0   27   27    0    15     15                                                               [e1-e2]                                                                                                                                     []                                                                                                                                                                                   [(1, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 1)]
   101    7      A1            {A1}    1   21   21    1    11     11                                                               [e1-e2]                                                                                                                                [e5-e6]                                                                                                                                                                                   [(1, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 1)]
   102    7      A1           2{A1}    2   16   16    2     8      8                                                               [e1-e2]                                                                                                                   [e5-e6, e0-e3-e5-e6]                                                                                                                                                                                   [(1, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 1)]
   103    7      A1            {A2}    2   15   15    2     7      7                                                               [e1-e2]                                                                                                                         [e4-e5, e5-e6]                                                                                                                                                                                   [(1, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 1)]
   104    7      A1           3{A1}    3   12   12    3     6      6                                                               [e1-e2]                                                                                                  [e4-e5, e3-e6, 2e0-e1-e2-e3-e4-e5-e6]                                                                                                                                                                                   [(1, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 1)]
   105    7      A1       {A1}+{A2}    3   11   11    3     5      5                                                               [e1-e2]                                                                                                            [e4-e5, e5-e6, e0-e4-e5-e6]                                                                                                                                                                                   [(1, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 1)]
   106    7      A1            {A3}    3   10   10    3     4      4                                                               [e1-e2]                                                                                                            [e4-e5, e0-e3-e4-e5, e5-e6]                                                                                                                                                                                   [(1, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 1)]
   107    7      A1           2{A2}    4    7    7    4     3      3                                                               [e1-e2]                                                                                               [e3-e4, e0-e1-e2-e5, e5-e6, e0-e3-e5-e6]                                                                                                                                                                                   [(1, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 1)]
   108    7      A1       {A1}+{A3}    4    7    7    4     3      3                                                               [e1-e2]                                                                                           [e3-e4, e4-e5, e5-e6, 2e0-e1-e2-e3-e4-e5-e6]                                                                                                                                                                                   [(1, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 1)]
   109    7      A1            {A4}    4    6    6    4     2      2                                                               [e1-e2]                                                                                                     [e3-e4, e4-e5, e0-e3-e4-e5, e5-e6]                                                                                                                                                                                   [(1, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 1)]
   110    7      A1            {A5}    5    3    3    5     1      1                                                               [e1-e2]                                                                                        [e0-e1-e2-e3, e3-e4, e4-e5, e0-e3-e4-e5, e5-e6]                                                                                                                                                                                   [(1, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 1)]
   111    7     2A1              A0    0   27   27    0     7      7                                                        [e1-e2, e3-e4]                                                                                                                                     []                                                                                                                                                                                   [(1, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 1)]
   112    7     2A1            {A1}    1   21   21    1     5      5                                                        [e1-e2, e3-e4]                                                                                                                                [e5-e6]                                                                                                                                                                                   [(1, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 1)]
   113    7     2A1             2A1    2   16   16    0     6      6                                                        [e1-e2, e3-e4]                                                                                                             [e0-e1-e3-e6, e0-e2-e4-e6]                                                                                                                                                                                   [(1, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 1)]
   114    7     2A1           2{A1}    2   16   16    2     4      4                                                        [e1-e2, e3-e4]                                                                                                         [e5-e6, 2e0-e1-e2-e3-e4-e5-e6]                                                                                                                                                                                   [(1, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 1)]
   115    7     2A1            {A2}    2   15   15    2     3      3                                                        [e1-e2, e3-e4]                                                                                                                   [e0-e1-e2-e5, e5-e6]                                                                                                                                                                                   [(1, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 1)]
   116    7     2A1        2A1+{A1}    3   12   12    1     4      4                                                        [e1-e2, e3-e4]                                                                                                [e0-e1-e2-e5, e0-e1-e3-e6, e0-e2-e4-e6]                                                                                                                                                                                   [(1, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 1)]
   117    7     2A1            [A3]    3   10   10    1     4      4                                                        [e1-e2, e3-e4]                                                                                                      [e0-e1-e3-e5, e0-e2-e4-e5, e5-e6]                                                                                                                                                                                   [(1, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 1)]
   118    7     2A1            {A3}    3   10   10    3     2      2                                                        [e1-e2, e3-e4]                                                                                                      [e0-e1-e2-e5, e0-e3-e4-e5, e5-e6]                                                                                                                                                                                   [(1, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 1)]
   119    7     2A1             4A1    4    9    9    0     5      5                                                        [e1-e2, e3-e4]                                                                                   [e0-e1-e3-e5, e0-e2-e4-e5, e0-e2-e3-e6, e0-e1-e4-e6]                                                                                                                                                                                   [(1, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 1)]
   120    7     2A1       2{A1}+2A1    4    9    9    2     3      3                                                        [e1-e2, e3-e4]                                                                                   [e0-e1-e3-e5, e0-e2-e4-e5, e0-e1-e2-e6, e0-e3-e4-e6]                                                                                                                                                                                   [(1, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 1)]
   121    7     2A1            [D4]    4    6    6    2     2      2                                                        [e1-e2, e3-e4]                                                                                                     [e2-e3, e1-e4, e0-e1-e2-e5, e5-e6]                                                                                                                                                                                   [(1, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 1)]
   122    7     2A1        2A1+[A3]    5    5    5    1     3      3                                                        [e1-e2, e3-e4]                                                                                  [e2-e3, e1-e4, e0-e1-e2-e5, e0-e2-e3-e6, e0-e1-e4-e6]                                                                                                                                                                                   [(1, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 1)]
   123    7     3A1              A0    0   27   27    0     3      3                                                 [e1-e2, e3-e4, e5-e6]                                                                                                                                     []                                                                                                                                                                                   [(1, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 1, 0)]
   124    7     3A1            {A1}    1   21   21    1     3      3                                                 [e1-e2, e3-e4, e5-e6]                                                                                                                [2e0-e1-e2-e3-e4-e5-e6]                                                                                                                                                                                   [(1, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 1, 0)]
   125    7     3A1             2A1    2   16   16    0     2      2                                                 [e1-e2, e3-e4, e5-e6]                                                                                                                         [e2-e3, e1-e4]                                                                                                                                                                                   [(1, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 1, 0)]
   126    7     3A1            [A2]    2   15   15    0     3      3                                                 [e1-e2, e3-e4, e5-e6]                                                                                                             [e0-e1-e3-e5, e0-e2-e4-e6]                                                                                                                                                                                   [(1, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 1, 0)]
   127    7     3A1        2A1+{A1}    3   12   12    1     2      2                                                 [e1-e2, e3-e4, e5-e6]                                                                                                  [2e0-e1-e2-e3-e4-e5-e6, e2-e3, e1-e4]                                                                                                                                                                                   [(1, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 1, 0)]
   128    7     3A1        2A1+[A2]    4    8    8    0     2      2                                                 [e1-e2, e3-e4, e5-e6]                                                                                               [e2-e3, e1-e4, e0-e2-e3-e5, e0-e1-e4-e6]                                                                                                                                                                                   [(1, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 1, 0)]
   129    7     3A1             2A2    4    7    7    0     1      1                                                 [e1-e2, e3-e4, e5-e6]                                                                                                           [e2-e3, e1-e4, e4-e5, e3-e6]                                                                                                                                                                                   [(1, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 1, 0)]
   130    7     3A1        {A1}+2A2    5    5    5    1     1      1                                                 [e1-e2, e3-e4, e5-e6]                                                                                    [2e0-e1-e2-e3-e4-e5-e6, e2-e3, e1-e4, e4-e5, e3-e6]                                                                                                                                                                                   [(1, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 1, 0)]
   131    7     3A1        [A2]+2A2    6    3    3    0     1      1                                                 [e1-e2, e3-e4, e5-e6]                                                                                 [e2-e3, e1-e4, e4-e5, e3-e6, e0-e1-e4-e5, e0-e2-e3-e6]                                                                                                                                                                                   [(1, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 1, 0)]
   132    7      D4              A0    0   27   27    0     3      3                                    [e2-e3, e3-e4, e4-e5, e0-e1-e2-e3]                                                                                                                                     []                                                                                                                                                                 [(3, 2, 1, 1, 1, 1, 0), (-2, -1, -1, -1, -1, -1, 0), (-1, -1, -1, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0), (-1, -1, 0, 0, -1, 0, 0), (-1, -1, 0, 0, 0, -1, 0), (0, 0, 0, 0, 0, 0, 1)]
   133    7      D4             2A1    2   16   16    0     2      2                                    [e2-e3, e3-e4, e4-e5, e0-e1-e2-e3]                                                                                                                   [e5-e6, e0-e1-e5-e6]                                                                                                                                                                 [(3, 2, 1, 1, 1, 1, 0), (-2, -1, -1, -1, -1, -1, 0), (-1, -1, -1, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0), (-1, -1, 0, 0, -1, 0, 0), (-1, -1, 0, 0, 0, -1, 0), (0, 0, 0, 0, 0, 0, 1)]
   134    7      D4             2A2    4    7    7    0     1      1                                    [e2-e3, e3-e4, e4-e5, e0-e1-e2-e3]                                                                                               [e1-e2, e0-e3-e4-e5, e5-e6, e0-e1-e5-e6]                                                                                                                                                                 [(3, 2, 1, 1, 1, 1, 0), (-2, -1, -1, -1, -1, -1, 0), (-1, -1, -1, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0), (-1, -1, 0, 0, -1, 0, 0), (-1, -1, 0, 0, 0, -1, 0), (0, 0, 0, 0, 0, 0, 1)]
 
usecase__get_cls(69): rank = 7 , len = 56 
usecase__get_cls(70): ################################################################################ 
get_cls(1059): rank = 8 
get_bas_lst(582): start 
update(86): ETA = 0.000020854 m, counter = 0 / 64 , time = 6.5168e-6 m, info = get_bas_lst rank = 8  
update(86): ETA = 1.3398 m, counter = 20 / 64 , time = 0.60900 m, info = get_bas_lst rank = 8  
update(86): ETA = 0.28858 m, counter = 40 / 64 , time = 0.84949 m, info = get_bas_lst rank = 8  
update(86): ETA = 0.036569 m, counter = 60 / 64 , time = 1.0323 m, info = get_bas_lst rank = 8  
update(86): ETA = 0.00037516 m, counter = 0 / 2048 , time = 3.6637e-6 m, info = get_bas_lst rank = 8  
update(86): ETA = 38.315 m, counter = 20 / 2048 , time = 0.37787 m, info = get_bas_lst rank = 8  
update(86): ETA = 24.179 m, counter = 40 / 2048 , time = 0.61869 m, info = get_bas_lst rank = 8  
update(86): ETA = 18.435 m, counter = 60 / 2048 , time = 0.80416 m, info = get_bas_lst rank = 8  
update(86): ETA = 25.734 m, counter = 80 / 2048 , time = 1.0657 m, info = get_bas_lst rank = 8  
update(86): ETA = 19.843 m, counter = 100 / 2048 , time = 1.2694 m, info = get_bas_lst rank = 8  
update(86): ETA = 16.564 m, counter = 120 / 2048 , time = 1.4412 m, info = get_bas_lst rank = 8  
update(86): ETA = 19.831 m, counter = 140 / 2048 , time = 1.6491 m, info = get_bas_lst rank = 8  
update(86): ETA = 11.650 m, counter = 160 / 2048 , time = 1.7725 m, info = get_bas_lst rank = 8  
update(86): ETA = 6.4121 m, counter = 180 / 2048 , time = 1.8412 m, info = get_bas_lst rank = 8  
update(86): ETA = 12.056 m, counter = 200 / 2048 , time = 1.9716 m, info = get_bas_lst rank = 8  
update(86): ETA = 12.463 m, counter = 220 / 2048 , time = 2.1080 m, info = get_bas_lst rank = 8  
update(86): ETA = 8.3842 m, counter = 240 / 2048 , time = 2.2008 m, info = get_bas_lst rank = 8  
update(86): ETA = 8.6745 m, counter = 260 / 2048 , time = 2.2978 m, info = get_bas_lst rank = 8  
update(86): ETA = 14.470 m, counter = 280 / 2048 , time = 2.4615 m, info = get_bas_lst rank = 8  
update(86): ETA = 8.6836 m, counter = 300 / 2048 , time = 2.5608 m, info = get_bas_lst rank = 8  
update(86): ETA = 3.8637 m, counter = 320 / 2048 , time = 2.6055 m, info = get_bas_lst rank = 8  
update(86): ETA = 23.523 m, counter = 340 / 2048 , time = 2.8810 m, info = get_bas_lst rank = 8  
update(86): ETA = 16.481 m, counter = 360 / 2048 , time = 3.0763 m, info = get_bas_lst rank = 8  
update(86): ETA = 13.881 m, counter = 380 / 2048 , time = 3.2427 m, info = get_bas_lst rank = 8  
update(86): ETA = 14.718 m, counter = 400 / 2048 , time = 3.4213 m, info = get_bas_lst rank = 8  
update(86): ETA = 7.2414 m, counter = 420 / 2048 , time = 3.5103 m, info = get_bas_lst rank = 8  
update(86): ETA = 5.4062 m, counter = 440 / 2048 , time = 3.5775 m, info = get_bas_lst rank = 8  
update(86): ETA = 9.4561 m, counter = 460 / 2048 , time = 3.6966 m, info = get_bas_lst rank = 8  
update(86): ETA = 8.3995 m, counter = 480 / 2048 , time = 3.8038 m, info = get_bas_lst rank = 8  
update(86): ETA = 5.1523 m, counter = 500 / 2048 , time = 3.8703 m, info = get_bas_lst rank = 8  
update(86): ETA = 7.4892 m, counter = 520 / 2048 , time = 3.9683 m, info = get_bas_lst rank = 8  
update(86): ETA = 8.9187 m, counter = 540 / 2048 , time = 4.0866 m, info = get_bas_lst rank = 8  
update(86): ETA = 5.6159 m, counter = 560 / 2048 , time = 4.1621 m, info = get_bas_lst rank = 8  
update(86): ETA = 1.9440 m, counter = 580 / 2048 , time = 4.1886 m, info = get_bas_lst rank = 8  
update(86): ETA = 0.10544 m, counter = 600 / 2048 , time = 4.1901 m, info = get_bas_lst rank = 8  
update(86): ETA = 0.18172 m, counter = 620 / 2048 , time = 4.1926 m, info = get_bas_lst rank = 8  
update(86): ETA = 0.29553 m, counter = 640 / 2048 , time = 4.1968 m, info = get_bas_lst rank = 8  
update(86): ETA = 0.066371 m, counter = 660 / 2048 , time = 4.1978 m, info = get_bas_lst rank = 8  
update(86): ETA = 0.11750 m, counter = 680 / 2048 , time = 4.1995 m, info = get_bas_lst rank = 8  
update(86): ETA = 0.14536 m, counter = 700 / 2048 , time = 4.2016 m, info = get_bas_lst rank = 8  
update(86): ETA = 7.5666 m, counter = 720 / 2048 , time = 4.3156 m, info = get_bas_lst rank = 8  
update(86): ETA = 2.2571 m, counter = 740 / 2048 , time = 4.3501 m, info = get_bas_lst rank = 8  
update(86): ETA = 1.1297 m, counter = 760 / 2048 , time = 4.3676 m, info = get_bas_lst rank = 8  
update(86): ETA = 0.087190 m, counter = 780 / 2048 , time = 4.3690 m, info = get_bas_lst rank = 8  
update(86): ETA = 0.095315 m, counter = 800 / 2048 , time = 4.3705 m, info = get_bas_lst rank = 8  
update(86): ETA = 0.11999 m, counter = 820 / 2048 , time = 4.3725 m, info = get_bas_lst rank = 8  
update(86): ETA = 0.097196 m, counter = 840 / 2048 , time = 4.3741 m, info = get_bas_lst rank = 8  
update(86): ETA = 0.070837 m, counter = 860 / 2048 , time = 4.3753 m, info = get_bas_lst rank = 8  
update(86): ETA = 0.088894 m, counter = 880 / 2048 , time = 4.3768 m, info = get_bas_lst rank = 8  
update(86): ETA = 0.086019 m, counter = 900 / 2048 , time = 4.3783 m, info = get_bas_lst rank = 8  
update(86): ETA = 0.067591 m, counter = 920 / 2048 , time = 4.3795 m, info = get_bas_lst rank = 8  
update(86): ETA = 0.094349 m, counter = 940 / 2048 , time = 4.3812 m, info = get_bas_lst rank = 8  
update(86): ETA = 0.12882 m, counter = 960 / 2048 , time = 4.3836 m, info = get_bas_lst rank = 8  
update(86): ETA = 9.0585 m, counter = 980 / 2048 , time = 4.5532 m, info = get_bas_lst rank = 8  
update(86): ETA = 4.6786 m, counter = 1000 / 2048 , time = 4.6425 m, info = get_bas_lst rank = 8  
update(86): ETA = 3.1078 m, counter = 1020 / 2048 , time = 4.7030 m, info = get_bas_lst rank = 8  
update(86): ETA = 0.097399 m, counter = 1040 / 2048 , time = 4.7049 m, info = get_bas_lst rank = 8  
update(86): ETA = 0.10944 m, counter = 1060 / 2048 , time = 4.7071 m, info = get_bas_lst rank = 8  
update(86): ETA = 0.13179 m, counter = 1080 / 2048 , time = 4.7098 m, info = get_bas_lst rank = 8  
update(86): ETA = 3.6170 m, counter = 1100 / 2048 , time = 4.7861 m, info = get_bas_lst rank = 8  
update(86): ETA = 2.3933 m, counter = 1120 / 2048 , time = 4.8377 m, info = get_bas_lst rank = 8  
update(86): ETA = 0.82767 m, counter = 1140 / 2048 , time = 4.8560 m, info = get_bas_lst rank = 8  
update(86): ETA = 0.073600 m, counter = 1160 / 2048 , time = 4.8576 m, info = get_bas_lst rank = 8  
update(86): ETA = 0.072793 m, counter = 1180 / 2048 , time = 4.8593 m, info = get_bas_lst rank = 8  
update(86): ETA = 0.10068 m, counter = 1200 / 2048 , time = 4.8617 m, info = get_bas_lst rank = 8  
update(86): ETA = 0.090120 m, counter = 1220 / 2048 , time = 4.8638 m, info = get_bas_lst rank = 8  
update(86): ETA = 0.060326 m, counter = 1240 / 2048 , time = 4.8653 m, info = get_bas_lst rank = 8  
update(86): ETA = 0.070454 m, counter = 1260 / 2048 , time = 4.8671 m, info = get_bas_lst rank = 8  
update(86): ETA = 0.084616 m, counter = 1280 / 2048 , time = 4.8693 m, info = get_bas_lst rank = 8  
update(86): ETA = 0.045298 m, counter = 1300 / 2048 , time = 4.8705 m, info = get_bas_lst rank = 8  
update(86): ETA = 0.075022 m, counter = 1320 / 2048 , time = 4.8726 m, info = get_bas_lst rank = 8  
update(86): ETA = 0.089635 m, counter = 1340 / 2048 , time = 4.8751 m, info = get_bas_lst rank = 8  
update(86): ETA = 0.057409 m, counter = 1360 / 2048 , time = 4.8768 m, info = get_bas_lst rank = 8  
update(86): ETA = 0.068769 m, counter = 1380 / 2048 , time = 4.8789 m, info = get_bas_lst rank = 8  
update(86): ETA = 0.084904 m, counter = 1400 / 2048 , time = 4.8815 m, info = get_bas_lst rank = 8  
update(86): ETA = 0.061899 m, counter = 1420 / 2048 , time = 4.8835 m, info = get_bas_lst rank = 8  
update(86): ETA = 0.044028 m, counter = 1440 / 2048 , time = 4.8849 m, info = get_bas_lst rank = 8  
update(86): ETA = 0.050144 m, counter = 1460 / 2048 , time = 4.8866 m, info = get_bas_lst rank = 8  
update(86): ETA = 0.043633 m, counter = 1480 / 2048 , time = 4.8881 m, info = get_bas_lst rank = 8  
update(86): ETA = 0.042796 m, counter = 1500 / 2048 , time = 4.8897 m, info = get_bas_lst rank = 8  
update(86): ETA = 0.059822 m, counter = 1520 / 2048 , time = 4.8920 m, info = get_bas_lst rank = 8  
update(86): ETA = 0.051257 m, counter = 1540 / 2048 , time = 4.8940 m, info = get_bas_lst rank = 8  
update(86): ETA = 0.029288 m, counter = 1560 / 2048 , time = 4.8952 m, info = get_bas_lst rank = 8  
update(86): ETA = 0.036429 m, counter = 1580 / 2048 , time = 4.8968 m, info = get_bas_lst rank = 8  
update(86): ETA = 0.046361 m, counter = 1600 / 2048 , time = 4.8988 m, info = get_bas_lst rank = 8  
update(86): ETA = 0.020366 m, counter = 1620 / 2048 , time = 4.8998 m, info = get_bas_lst rank = 8  
update(86): ETA = 0.031640 m, counter = 1640 / 2048 , time = 4.9013 m, info = get_bas_lst rank = 8  
update(86): ETA = 0.036683 m, counter = 1660 / 2048 , time = 4.9032 m, info = get_bas_lst rank = 8  
update(86): ETA = 0.034228 m, counter = 1680 / 2048 , time = 4.9051 m, info = get_bas_lst rank = 8  
update(86): ETA = 0.031950 m, counter = 1700 / 2048 , time = 4.9069 m, info = get_bas_lst rank = 8  
update(86): ETA = 0.034500 m, counter = 1720 / 2048 , time = 4.9090 m, info = get_bas_lst rank = 8  
update(86): ETA = 0.028733 m, counter = 1740 / 2048 , time = 4.9109 m, info = get_bas_lst rank = 8  
update(86): ETA = 0.030918 m, counter = 1760 / 2048 , time = 4.9130 m, info = get_bas_lst rank = 8  
update(86): ETA = 0.034823 m, counter = 1780 / 2048 , time = 4.9156 m, info = get_bas_lst rank = 8  
update(86): ETA = 0.025953 m, counter = 1800 / 2048 , time = 4.9177 m, info = get_bas_lst rank = 8  
update(86): ETA = 0.018856 m, counter = 1820 / 2048 , time = 4.9194 m, info = get_bas_lst rank = 8  
update(86): ETA = 0.020765 m, counter = 1840 / 2048 , time = 4.9214 m, info = get_bas_lst rank = 8  
update(86): ETA = 0.017552 m, counter = 1860 / 2048 , time = 4.9232 m, info = get_bas_lst rank = 8  
update(86): ETA = 0.012149 m, counter = 1880 / 2048 , time = 4.9247 m, info = get_bas_lst rank = 8  
update(86): ETA = 0.013504 m, counter = 1900 / 2048 , time = 4.9265 m, info = get_bas_lst rank = 8  
update(86): ETA = 0.015118 m, counter = 1920 / 2048 , time = 4.9289 m, info = get_bas_lst rank = 8  
update(86): ETA = 0.0058248 m, counter = 1940 / 2048 , time = 4.9299 m, info = get_bas_lst rank = 8  
update(86): ETA = 0.0077111 m, counter = 1960 / 2048 , time = 4.9317 m, info = get_bas_lst rank = 8  
update(86): ETA = 0.0070752 m, counter = 1980 / 2048 , time = 4.9338 m, info = get_bas_lst rank = 8  
update(86): ETA = 0.0043235 m, counter = 2000 / 2048 , time = 4.9356 m, info = get_bas_lst rank = 8  
update(86): ETA = 0.0026240 m, counter = 2020 / 2048 , time = 4.9375 m, info = get_bas_lst rank = 8  
update(86): ETA = 0.00087233 m, counter = 2040 / 2048 , time = 4.9396 m, info = get_bas_lst rank = 8  
update(86): ETA = 0.00018168 m, counter = 0 / 1024 , time = 3.5485e-6 m, info = get_bas_lst rank = 8  
update(86): ETA = 18.832 m, counter = 20 / 1024 , time = 0.37515 m, info = get_bas_lst rank = 8  
update(86): ETA = 11.803 m, counter = 40 / 1024 , time = 0.61504 m, info = get_bas_lst rank = 8  
update(86): ETA = 8.7857 m, counter = 60 / 1024 , time = 0.79732 m, info = get_bas_lst rank = 8  
update(86): ETA = 10.179 m, counter = 80 / 1024 , time = 1.0130 m, info = get_bas_lst rank = 8  
update(86): ETA = 5.4816 m, counter = 100 / 1024 , time = 1.1316 m, info = get_bas_lst rank = 8  
update(86): ETA = 2.2291 m, counter = 120 / 1024 , time = 1.1809 m, info = get_bas_lst rank = 8  
update(86): ETA = 5.8041 m, counter = 140 / 1024 , time = 1.3123 m, info = get_bas_lst rank = 8  
update(86): ETA = 2.7046 m, counter = 160 / 1024 , time = 1.3749 m, info = get_bas_lst rank = 8  
update(86): ETA = 0.73541 m, counter = 180 / 1024 , time = 1.3923 m, info = get_bas_lst rank = 8  
update(86): ETA = 4.7889 m, counter = 200 / 1024 , time = 1.5085 m, info = get_bas_lst rank = 8  
update(86): ETA = 6.0363 m, counter = 220 / 1024 , time = 1.6587 m, info = get_bas_lst rank = 8  
update(86): ETA = 3.3811 m, counter = 240 / 1024 , time = 1.7449 m, info = get_bas_lst rank = 8  
update(86): ETA = 3.7797 m, counter = 260 / 1024 , time = 1.8439 m, info = get_bas_lst rank = 8  
update(86): ETA = 9.1002 m, counter = 280 / 1024 , time = 2.0885 m, info = get_bas_lst rank = 8  
update(86): ETA = 6.8193 m, counter = 300 / 1024 , time = 2.2769 m, info = get_bas_lst rank = 8  
update(86): ETA = 5.7607 m, counter = 320 / 1024 , time = 2.4405 m, info = get_bas_lst rank = 8  
update(86): ETA = 4.3004 m, counter = 340 / 1024 , time = 2.5663 m, info = get_bas_lst rank = 8  
update(86): ETA = 1.1820 m, counter = 360 / 1024 , time = 2.6019 m, info = get_bas_lst rank = 8  
update(86): ETA = 0.31152 m, counter = 380 / 1024 , time = 2.6116 m, info = get_bas_lst rank = 8  
update(86): ETA = 3.6104 m, counter = 400 / 1024 , time = 2.7273 m, info = get_bas_lst rank = 8  
update(86): ETA = 1.3859 m, counter = 420 / 1024 , time = 2.7732 m, info = get_bas_lst rank = 8  
update(86): ETA = 0.28840 m, counter = 440 / 1024 , time = 2.7831 m, info = get_bas_lst rank = 8  
update(86): ETA = 3.3497 m, counter = 460 / 1024 , time = 2.9018 m, info = get_bas_lst rank = 8  
update(86): ETA = 3.0498 m, counter = 480 / 1024 , time = 3.0140 m, info = get_bas_lst rank = 8  
update(86): ETA = 1.7655 m, counter = 500 / 1024 , time = 3.0813 m, info = get_bas_lst rank = 8  
update(86): ETA = 1.8103 m, counter = 520 / 1024 , time = 3.1532 m, info = get_bas_lst rank = 8  
update(86): ETA = 1.0176 m, counter = 540 / 1024 , time = 3.1952 m, info = get_bas_lst rank = 8  
update(86): ETA = 0.025535 m, counter = 560 / 1024 , time = 3.1963 m, info = get_bas_lst rank = 8  
update(86): ETA = 0.93957 m, counter = 580 / 1024 , time = 3.2387 m, info = get_bas_lst rank = 8  
update(86): ETA = 1.7714 m, counter = 600 / 1024 , time = 3.3222 m, info = get_bas_lst rank = 8  
update(86): ETA = 0.70975 m, counter = 620 / 1024 , time = 3.3574 m, info = get_bas_lst rank = 8  
update(86): ETA = 0.18634 m, counter = 640 / 1024 , time = 3.3671 m, info = get_bas_lst rank = 8  
update(86): ETA = 3.0833 m, counter = 660 / 1024 , time = 3.5365 m, info = get_bas_lst rank = 8  
update(86): ETA = 1.5357 m, counter = 680 / 1024 , time = 3.6258 m, info = get_bas_lst rank = 8  
update(86): ETA = 0.97817 m, counter = 700 / 1024 , time = 3.6861 m, info = get_bas_lst rank = 8  
update(86): ETA = 0.96307 m, counter = 720 / 1024 , time = 3.7495 m, info = get_bas_lst rank = 8  
update(86): ETA = 0.28480 m, counter = 740 / 1024 , time = 3.7696 m, info = get_bas_lst rank = 8  
update(86): ETA = 0.019509 m, counter = 760 / 1024 , time = 3.7710 m, info = get_bas_lst rank = 8  
update(86): ETA = 1.0201 m, counter = 780 / 1024 , time = 3.8546 m, info = get_bas_lst rank = 8  
update(86): ETA = 0.60626 m, counter = 800 / 1024 , time = 3.9088 m, info = get_bas_lst rank = 8  
update(86): ETA = 0.18506 m, counter = 820 / 1024 , time = 3.9269 m, info = get_bas_lst rank = 8  
update(86): ETA = 0.58561 m, counter = 840 / 1024 , time = 3.9906 m, info = get_bas_lst rank = 8  
update(86): ETA = 0.59831 m, counter = 860 / 1024 , time = 4.0635 m, info = get_bas_lst rank = 8  
update(86): ETA = 0.13534 m, counter = 880 / 1024 , time = 4.0823 m, info = get_bas_lst rank = 8  
update(86): ETA = 0.22493 m, counter = 900 / 1024 , time = 4.1186 m, info = get_bas_lst rank = 8  
update(86): ETA = 0.20673 m, counter = 920 / 1024 , time = 4.1584 m, info = get_bas_lst rank = 8  
update(86): ETA = 0.043923 m, counter = 940 / 1024 , time = 4.1688 m, info = get_bas_lst rank = 8  
update(86): ETA = 0.0051014 m, counter = 960 / 1024 , time = 4.1704 m, info = get_bas_lst rank = 8  
update(86): ETA = 0.14877 m, counter = 980 / 1024 , time = 4.2380 m, info = get_bas_lst rank = 8  
update(86): ETA = 0.013054 m, counter = 1000 / 1024 , time = 4.2489 m, info = get_bas_lst rank = 8  
update(86): ETA = 0.00034827 m, counter = 1020 / 1024 , time = 4.2507 m, info = get_bas_lst rank = 8  
update(86): ETA = 5.6013e-6 m, counter = 0 / 32 , time = 3.5008e-6 m, info = get_bas_lst rank = 8  
update(86): ETA = 0.21458 m, counter = 20 / 32 , time = 0.35764 m, info = get_bas_lst rank = 8  
get_inv_lst(666): rank = 8 
update(86): ETA = 2.9882e-6 m, counter = 0 / 47 , time = 6.3578e-8 m, info = A0  
get_inv_lst(680): Found type of involution:  A0 
update(86): ETA = 1.4507 m, counter = 1 / 47 , time = 0.031537 m, info = A1  
get_inv_lst(680): Found type of involution:  A1 
update(86): ETA = 1.4169 m, counter = 2 / 47 , time = 0.063024 m, info = 2A1  
get_inv_lst(680): Found type of involution:  2A1 
update(86): ETA = 1.3899 m, counter = 3 / 47 , time = 0.094612 m, info = A2  
update(86): ETA = 0.0085799 m, counter = 4 / 47 , time = 0.094811 m, info = 3A1  
get_inv_lst(680): Found type of involution:  3A1 
update(86): ETA = 1.3272 m, counter = 5 / 47 , time = 0.12641 m, info = 3A1  
get_inv_lst(680): Found type of involution:  3A1 
update(86): ETA = 1.2929 m, counter = 6 / 47 , time = 0.15794 m, info = A1+A2  
update(86): ETA = 0.0095201 m, counter = 7 / 47 , time = 0.15818 m, info = A3  
update(86): ETA = 0.0082101 m, counter = 8 / 47 , time = 0.15839 m, info = 2A1+A2  
update(86): ETA = 0.0072636 m, counter = 9 / 47 , time = 0.15858 m, info = 2A2  
update(86): ETA = 0.0087684 m, counter = 10 / 47 , time = 0.15882 m, info = 4A1  
get_inv_lst(680): Found type of involution:  4A1 
update(86): ETA = 1.1417 m, counter = 11 / 47 , time = 0.19054 m, info = 4A1  
get_inv_lst(680): Found type of involution:  4A1 
update(86): ETA = 1.1029 m, counter = 12 / 47 , time = 0.22205 m, info = A1+A3  
update(86): ETA = 0.0072957 m, counter = 13 / 47 , time = 0.22226 m, info = A1+A3  
update(86): ETA = 0.0060138 m, counter = 14 / 47 , time = 0.22245 m, info = A4  
update(86): ETA = 0.0073882 m, counter = 15 / 47 , time = 0.22268 m, info = D4  
get_inv_lst(680): Found type of involution:  D4 
get_inv_lst(695): 	Ambitious type: D4 == 4A1  inv>inv_prv:  True  ambitious types = ['D4', '4A1'] 
update(86): ETA = 1.2302 m, counter = 16 / 47 , time = 0.26236 m, info = 2A1+A3  
update(86): ETA = 0.0083256 m, counter = 17 / 47 , time = 0.26264 m, info = 2A1+A3  
update(86): ETA = 0.0049266 m, counter = 18 / 47 , time = 0.26281 m, info = 3A1+A2  
update(86): ETA = 0.0056864 m, counter = 19 / 47 , time = 0.26301 m, info = 5A1  
get_inv_lst(680): Found type of involution:  5A1 
update(86): ETA = 0.85265 m, counter = 20 / 47 , time = 0.29459 m, info = A1+2A2  
update(86): ETA = 0.0054779 m, counter = 21 / 47 , time = 0.29480 m, info = A1+A4  
update(86): ETA = 0.0050166 m, counter = 22 / 47 , time = 0.29500 m, info = A1+D4  
get_inv_lst(680): Found type of involution:  A1+D4 
get_inv_lst(695): 	Ambitious type: A1+D4 == 5A1  inv>inv_prv:  True  ambitious types = ['A1+D4', '5A1'] 
update(86): ETA = 0.94818 m, counter = 23 / 47 , time = 0.33451 m, info = A2+A3  
update(86): ETA = 0.0047380 m, counter = 24 / 47 , time = 0.33472 m, info = A5  
update(86): ETA = 0.0049012 m, counter = 25 / 47 , time = 0.33494 m, info = A5  
update(86): ETA = 0.0035563 m, counter = 26 / 47 , time = 0.33511 m, info = D5  
update(86): ETA = 0.0047773 m, counter = 27 / 47 , time = 0.33535 m, info = 2A1+D4  
get_inv_lst(680): Found type of involution:  2A1+D4 
update(86): ETA = 0.60357 m, counter = 28 / 47 , time = 0.36711 m, info = 2A3  
get_inv_lst(680): Found type of involution:  2A3 
get_inv_lst(695): 	Ambitious type: 2A3 == 2A1+D4  inv>inv_prv:  True  ambitious types = ['2A3', '2A1+D4'] 
update(86): ETA = 0.71604 m, counter = 29 / 47 , time = 0.40689 m, info = 3A1+A3  
update(86): ETA = 0.0039860 m, counter = 30 / 47 , time = 0.40713 m, info = 3A2  
update(86): ETA = 0.0034011 m, counter = 31 / 47 , time = 0.40734 m, info = 6A1  
get_inv_lst(680): Found type of involution:  6A1 
get_inv_lst(695): 	Ambitious type: 6A1 == 2A3  inv>inv_prv:  True  ambitious types = ['2A3', '2A1+D4', '6A1', '2A3'] 
update(86): ETA = 0.63985 m, counter = 32 / 47 , time = 0.45000 m, info = A1+A2+A3  
update(86): ETA = 0.0024435 m, counter = 33 / 47 , time = 0.45017 m, info = A1+A5  
update(86): ETA = 0.0019229 m, counter = 34 / 47 , time = 0.45032 m, info = A1+A5  
update(86): ETA = 0.0017550 m, counter = 35 / 47 , time = 0.45047 m, info = A1+D5  
update(86): ETA = 0.0016174 m, counter = 36 / 47 , time = 0.45061 m, info = A2+A4  
update(86): ETA = 0.0014640 m, counter = 37 / 47 , time = 0.45076 m, info = A6  
update(86): ETA = 0.0017028 m, counter = 38 / 47 , time = 0.45095 m, info = D6  
get_inv_lst(680): Found type of involution:  D6 
get_inv_lst(695): 	Ambitious type: D6 == 6A1  inv>inv_prv:  True  ambitious types = ['2A3', '2A1+D4', '6A1', '2A3', 'D6', '6A1'] 
update(86): ETA = 0.36672 m, counter = 39 / 47 , time = 0.49679 m, info = E6  
update(86): ETA = 0.0012355 m, counter = 40 / 47 , time = 0.49697 m, info = 3A1+D4  
get_inv_lst(680): Found type of involution:  3A1+D4 
update(86): ETA = 0.19081 m, counter = 41 / 47 , time = 0.52877 m, info = 7A1  
get_inv_lst(680): Found type of involution:  7A1 
get_inv_lst(695): 	Ambitious type: 7A1 == 3A1+D4  inv>inv_prv:  True  ambitious types = ['7A1', '3A1+D4'] 
update(86): ETA = 0.19670 m, counter = 42 / 47 , time = 0.56811 m, info = A1+2A3  
get_inv_lst(680): Found type of involution:  A1+2A3 
get_inv_lst(695): 	Ambitious type: A1+2A3 == 7A1  inv>inv_prv:  True  ambitious types = ['7A1', '3A1+D4', 'A1+2A3', '7A1'] 
update(86): ETA = 0.17048 m, counter = 43 / 47 , time = 0.61073 m, info = A1+D6  
get_inv_lst(680): Found type of involution:  A1+D6 
get_inv_lst(695): 	Ambitious type: A1+D6 == A1+2A3  inv>inv_prv:  True  ambitious types = ['7A1', '3A1+D4', 'A1+2A3', '7A1', 'A1+D6', 'A1+2A3'] 
update(86): ETA = 0.13661 m, counter = 44 / 47 , time = 0.65626 m, info = A2+A5  
get_inv_lst(680): Found type of involution:  A2+A5 
get_inv_lst(695): 	Ambitious type: A2+A5 == A1+D6  inv>inv_prv:  True  ambitious types = ['7A1', '3A1+D4', 'A1+2A3', '7A1', 'A1+D6', 'A1+2A3', 'A2+A5', 'A1+D6'] 
update(86): ETA = 0.097437 m, counter = 45 / 47 , time = 0.70498 m, info = A7  
get_inv_lst(680): Found type of involution:  A7 
get_inv_lst(695): 	Ambitious type: A7 == A2+A5  inv>inv_prv:  True  ambitious types = ['7A1', '3A1+D4', 'A1+2A3', '7A1', 'A1+D6', 'A1+2A3', 'A2+A5', 'A1+D6', 'A7', 'A2+A5'] 
update(86): ETA = 0.051795 m, counter = 46 / 47 , time = 0.75678 m, info = E7  
get_inv_lst(680): Found type of involution:  E7 
get_inv_lst(695): 	Ambitious type: E7 == A7  inv>inv_prv:  True  ambitious types = ['7A1', '3A1+D4', 'A1+2A3', '7A1', 'A1+D6', 'A1+2A3', 'A2+A5', 'A1+D6', 'A7', 'A2+A5', 'E7', 'A7'] 
get_cls(1066): start looping through inv_lst:  10 ['A0', 'A1', '2A1', '3A1', "3A1'", '4A1', 'D4', 'A1+D4', 'D6', 'E7'] 
get_cls(1070): looping through inv_lst: (8, 'A0', []) 
get_cls(1075): Since Mtype equals A0 we recover the classification from bas_lst. 
get_cls(1070): looping through inv_lst: (8, 'A1', [e1-e2]) 
get_part_roots(875): r_lst      = 63 [e1-e2, e2-e3, e1-e3, e3-e4, e2-e4, e1-e4, e4-e5, e3-e5, e2-e5, e1-e5, e5-e6, e4-e6, e3-e6, e2-e6, e1-e6, e6-e7, e5-e7, e4-e7, e3-e7, e2-e7, e1-e7, e0-e1-e2-e3, e0-e1-e2-e4, e0-e1-e3-e4, e0-e2-e3-e4, e0-e1-e2-e5, e0-e1-e3-e5, e0-e2-e3-e5, e0-e1-e4-e5, e0-e2-e4-e5, e0-e3-e4-e5, e0-e1-e2-e6, e0-e1-e3-e6, e0-e2-e3-e6, e0-e1-e4-e6, e0-e2-e4-e6, e0-e3-e4-e6, e0-e1-e5-e6, e0-e2-e5-e6, e0-e3-e5-e6, e0-e4-e5-e6, e0-e1-e2-e7, e0-e1-e3-e7, e0-e2-e3-e7, e0-e1-e4-e7, e0-e2-e4-e7, e0-e3-e4-e7, e0-e1-e5-e7, e0-e2-e5-e7, e0-e3-e5-e7, e0-e4-e5-e7, e0-e1-e6-e7, e0-e2-e6-e7, e0-e3-e6-e7, e0-e4-e6-e7, e0-e5-e6-e7, 2e0-e1-e2-e3-e4-e5-e6, 2e0-e1-e2-e3-e4-e5-e7, 2e0-e1-e2-e3-e4-e6-e7, 2e0-e1-e2-e3-e5-e6-e7, 2e0-e1-e2-e4-e5-e6-e7, 2e0-e1-e3-e4-e5-e6-e7, 2e0-e2-e3-e4-e5-e6-e7] 
get_part_roots(876): s_lst      = 30 [e3-e4, e4-e5, e3-e5, e5-e6, e4-e6, e3-e6, e6-e7, e5-e7, e4-e7, e3-e7, e0-e1-e2-e3, e0-e1-e2-e4, e0-e1-e2-e5, e0-e3-e4-e5, e0-e1-e2-e6, e0-e3-e4-e6, e0-e3-e5-e6, e0-e4-e5-e6, e0-e1-e2-e7, e0-e3-e4-e7, e0-e3-e5-e7, e0-e4-e5-e7, e0-e3-e6-e7, e0-e4-e6-e7, e0-e5-e6-e7, 2e0-e1-e2-e3-e4-e5-e6, 2e0-e1-e2-e3-e4-e5-e7, 2e0-e1-e2-e3-e4-e6-e7, 2e0-e1-e2-e3-e5-e6-e7, 2e0-e1-e2-e4-e5-e6-e7] 
get_part_roots(877): tq1_lst    = 32 [e2-e3, e1-e3, e2-e4, e1-e4, e2-e5, e1-e5, e2-e6, e1-e6, e2-e7, e1-e7, e0-e1-e3-e4, e0-e2-e3-e4, e0-e1-e3-e5, e0-e2-e3-e5, e0-e1-e4-e5, e0-e2-e4-e5, e0-e1-e3-e6, e0-e2-e3-e6, e0-e1-e4-e6, e0-e2-e4-e6, e0-e1-e5-e6, e0-e2-e5-e6, e0-e1-e3-e7, e0-e2-e3-e7, e0-e1-e4-e7, e0-e2-e4-e7, e0-e1-e5-e7, e0-e2-e5-e7, e0-e1-e6-e7, e0-e2-e6-e7, 2e0-e1-e3-e4-e5-e6-e7, 2e0-e2-e3-e4-e5-e6-e7] 
get_part_roots(878): tq_lst     = 0 [] 
get_part_roots(879): q_lst      = 0 [] 
get_part_roots(880):        M --> 0 [] 
get_part_roots(881): inv.Md_lst = A1 [e1-e2] , rank = 8 
import_cls(1015): importing:  (8, 'A1', 'A0') [e1-e2] == [e1-e2] 
import_cls(1015): importing:  (8, 'A1', '{A1}') [e1-e2] == [e1-e2] 
import_cls(1015): importing:  (8, 'A1', '2{A1}') [e1-e2] == [e1-e2] 
import_cls(1015): importing:  (8, 'A1', '{A2}') [e1-e2] == [e1-e2] 
import_cls(1015): importing:  (8, 'A1', '3{A1}') [e1-e2] == [e1-e2] 
import_cls(1015): importing:  (8, 'A1', '{A1}+{A2}') [e1-e2] == [e1-e2] 
import_cls(1015): importing:  (8, 'A1', '{A3}') [e1-e2] == [e1-e2] 
import_cls(1015): importing:  (8, 'A1', '2{A2}') [e1-e2] == [e1-e2] 
import_cls(1015): importing:  (8, 'A1', '{A1}+{A3}') [e1-e2] == [e1-e2] 
import_cls(1015): importing:  (8, 'A1', '{A4}') [e1-e2] == [e1-e2] 
import_cls(1015): importing:  (8, 'A1', '{A5}') [e1-e2] == [e1-e2] 
get_cls(1086): looping through inv_lst continued after recursive call: (8, 'A1', [e1-e2]) 
get_cls(1094): bas1_lst = 11 [('A1', 'A0'), ('A1', 'A1'), ('A1', '2A1'), ('A1', 'A2'), ('A1', '3A1'), ('A1', 'A1+A2'), ('A1', 'A3'), ('A1', '2A2'), ('A1', 'A1+A3'), ('A1', 'A4'), ('A1', 'A5')] 
get_cls(1095): s_lst    = 15 [e6-e7, e5-e7, e4-e7, e3-e7, e0-e1-e2-e7, e0-e3-e4-e7, e0-e3-e5-e7, e0-e4-e5-e7, e0-e3-e6-e7, e0-e4-e6-e7, e0-e5-e6-e7, 2e0-e1-e2-e3-e4-e5-e7, 2e0-e1-e2-e3-e4-e6-e7, 2e0-e1-e2-e3-e5-e6-e7, 2e0-e1-e2-e4-e5-e6-e7] 
get_cls(1096): q_lst    = 0 [] 
update(86): ETA = 0.000054908 m, counter = 0 / 47 , time = 1.1683e-6 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'A1', 'A0')  
update(86): ETA = 0.033234 m, counter = 1 / 47 , time = 0.00072365 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'A1', '{A1}')  
update(86): ETA = 0.082867 m, counter = 2 / 47 , time = 0.0025651 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'A1', '2{A1}')  
update(86): ETA = 1.8817 m, counter = 3 / 47 , time = 0.045332 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'A1', '{A2}')  
update(86): ETA = 0.097285 m, counter = 4 / 47 , time = 0.047594 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'A1', '3{A1}')  
update(86): ETA = 1.6963 m, counter = 5 / 47 , time = 0.087982 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'A1', '3{A1}')  
update(86): ETA = 0.0080360 m, counter = 6 / 47 , time = 0.088178 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'A1', '{A1}+{A2}')  
update(86): ETA = 0.093616 m, counter = 7 / 47 , time = 0.090518 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'A1', '{A3}')  
update(86): ETA = 0.092900 m, counter = 8 / 47 , time = 0.092900 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'A1', '2{A1}+{A2}')  
update(86): ETA = 0.091697 m, counter = 9 / 47 , time = 0.095313 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'A1', '2{A2}')  
update(86): ETA = 0.087093 m, counter = 10 / 47 , time = 0.097667 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'A1', '4{A1}')  
update(86): ETA = 1.6303 m, counter = 11 / 47 , time = 0.14295 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'A1', '4{A1}')  
update(86): ETA = 0.011275 m, counter = 12 / 47 , time = 0.14327 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'A1', '{A1}+{A3}')  
update(86): ETA = 0.082059 m, counter = 13 / 47 , time = 0.14569 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'A1', '{A1}+{A3}')  
update(86): ETA = 0.012142 m, counter = 14 / 47 , time = 0.14606 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'A1', '{A4}')  
update(86): ETA = 0.079183 m, counter = 15 / 47 , time = 0.14853 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'A1', '{D4}')  
update(86): ETA = 0.077325 m, counter = 16 / 47 , time = 0.15102 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'A1', '2{A1}+{A3}')  
update(86): ETA = 0.075362 m, counter = 17 / 47 , time = 0.15354 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'A1', '2{A1}+{A3}')  
update(86): ETA = 0.010277 m, counter = 18 / 47 , time = 0.15389 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'A1', '3{A1}+{A2}')  
update(86): ETA = 0.0091402 m, counter = 19 / 47 , time = 0.15422 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'A1', '5{A1}')  
update(86): ETA = 1.2230 m, counter = 20 / 47 , time = 0.19951 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'A1', '{A1}+2{A2}')  
update(86): ETA = 0.011876 m, counter = 21 / 47 , time = 0.19997 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'A1', '{A1}+{A4}')  
update(86): ETA = 0.011460 m, counter = 22 / 47 , time = 0.20043 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'A1', '{A1}+{D4}')  
update(86): ETA = 0.061011 m, counter = 23 / 47 , time = 0.20297 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'A1', '{A2}+{A3}')  
update(86): ETA = 0.060067 m, counter = 24 / 47 , time = 0.20558 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'A1', '{A5}')  
update(86): ETA = 0.057610 m, counter = 25 / 47 , time = 0.20820 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'A1', '{A5}')  
update(86): ETA = 0.010928 m, counter = 26 / 47 , time = 0.20872 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'A1', '{D5}')  
update(86): ETA = 0.053035 m, counter = 27 / 47 , time = 0.21137 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'A1', '2{A1}+{D4}')  
update(86): ETA = 0.37568 m, counter = 28 / 47 , time = 0.23115 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'A1', '2{A3}')  
update(86): ETA = 0.046471 m, counter = 29 / 47 , time = 0.23373 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'A1', '3{A1}+{A3}')  
update(86): ETA = 0.0088097 m, counter = 30 / 47 , time = 0.23425 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'A1', '3{A2}')  
update(86): ETA = 0.0067440 m, counter = 31 / 47 , time = 0.23467 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'A1', '6{A1}')  
update(86): ETA = 0.67904 m, counter = 32 / 47 , time = 0.27994 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'A1', '{A1}+{A2}+{A3}')  
update(86): ETA = 0.0087360 m, counter = 33 / 47 , time = 0.28056 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'A1', '{A1}+{A5}')  
update(86): ETA = 0.0081840 m, counter = 34 / 47 , time = 0.28119 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'A1', '{A1}+{A5}')  
update(86): ETA = 0.0074186 m, counter = 35 / 47 , time = 0.28181 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'A1', '{A1}+{D5}')  
update(86): ETA = 0.0064322 m, counter = 36 / 47 , time = 0.28239 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'A1', '{A2}+{A4}')  
update(86): ETA = 0.0069985 m, counter = 37 / 47 , time = 0.28309 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'A1', '{A6}')  
update(86): ETA = 0.0063255 m, counter = 38 / 47 , time = 0.28380 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'A1', '{D6}')  
update(86): ETA = 0.022395 m, counter = 39 / 47 , time = 0.28660 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'A1', '{E6}')  
update(86): ETA = 0.0046366 m, counter = 40 / 47 , time = 0.28726 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'A1', '3{A1}+{D4}')  
update(86): ETA = 0.0031809 m, counter = 41 / 47 , time = 0.28779 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'A1', '7{A1}')  
update(86): ETA = 0.0034142 m, counter = 42 / 47 , time = 0.28847 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'A1', '{A1}+2{A3}')  
update(86): ETA = 0.0032856 m, counter = 43 / 47 , time = 0.28929 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'A1', '{A1}+{D6}')  
update(86): ETA = 0.0022879 m, counter = 44 / 47 , time = 0.29006 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'A1', '{A2}+{A5}')  
update(86): ETA = 0.0018046 m, counter = 45 / 47 , time = 0.29096 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'A1', '{A7}')  
update(86): ETA = 0.00090719 m, counter = 46 / 47 , time = 0.29186 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'A1', '{E7}')  
get_cls(1130): Setting Dynkin types of 77 items...please wait... 
update(86): ETA = 0.024236 m, counter = 0 / 77 , time = 0.0022033 m, info = 8 A1 A0  
update(86): ETA = 0.23705 m, counter = 7 / 77 , time = 0.025908 m, info = 8 A1 A1  
update(86): ETA = 0.21298 m, counter = 14 / 77 , time = 0.049572 m, info = 8 A1 A1  
update(86): ETA = 0.23011 m, counter = 21 / 77 , time = 0.078336 m, info = 8 A1 2A1  
update(86): ETA = 0.20691 m, counter = 28 / 77 , time = 0.10790 m, info = 8 A1 2A1  
update(86): ETA = 0.17739 m, counter = 35 / 77 , time = 0.13746 m, info = 8 A1 2A1  
update(86): ETA = 0.14758 m, counter = 42 / 77 , time = 0.16698 m, info = 8 A1 2A1  
update(86): ETA = 0.11821 m, counter = 49 / 77 , time = 0.19653 m, info = 8 A1 2A1  
update(86): ETA = 0.088786 m, counter = 56 / 77 , time = 0.22612 m, info = 8 A1 2A1  
update(86): ETA = 0.063665 m, counter = 63 / 77 , time = 0.25796 m, info = 8 A1 3A1  
update(86): ETA = 0.034800 m, counter = 70 / 77 , time = 0.29276 m, info = 8 A1 3A1  
get_cls(1145): inv      = A1 , rank = 8 
get_cls(1146): bas1_lst = 11 [('2A1', 1), ('2A2', 1), ('3A1', 1), ('A0', 1), ('A1', 1), ('A1+A2', 1), ('A1+A3', 1), ('A2', 1), ('A3', 1), ('A4', 1), ('A5', 1)] 
get_cls(1147): bas2_lst = 76 [('2A1', 45), ('3A1', 15), ('A0', 1), ('A1', 15)] 
get_cls(1148): bas3_lst = 1 [('A0', 1)] 
update(86): ETA = 6.3638e-6 m, counter = 0 / 836 , time = 6.3181e-7 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', 'A0', 'A0')  
get_cls(1168): 	 appended:  (8, 'A1', 'A0') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A0', 'A0') 
get_cls(1168): 	 appended:  (8, 'A1', '{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A1', 'A0') 
get_cls(1168): 	 appended:  (8, 'A1', '2{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A0', '2A1', 'A0') 
get_cls(1168): 	 appended:  (8, 'A1', '3{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A0', '3A1', 'A0') 
get_cls(1168): 	 appended:  (8, 'A1', '{A2}') , ( bas1.type, bas2.type, bas3.type ) = ('A1', 'A1', 'A0') 
get_cls(1168): 	 appended:  (8, 'A1', '2{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A1', 'A1', 'A0') 
update(86): ETA = 12.691 m, counter = 83 / 836 , time = 1.3989 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A1', 'A1', 'A0')  
get_cls(1168): 	 appended:  (8, 'A1', '{A1}+{A2}') , ( bas1.type, bas2.type, bas3.type ) = ('A1', '2A1', 'A0') 
get_cls(1168): 	 appended:  (8, 'A1', '3{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A1', '2A1', 'A0') 
get_cls(1168): 	 appended:  (8, 'A1', '3{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A1', '2A1', 'A0') 
get_cls(1168): 	 appended:  (8, 'A1', '4{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A1', '3A1', 'A0') 
get_cls(1168): 	 appended:  (8, 'A1', '{A3}') , ( bas1.type, bas2.type, bas3.type ) = ('2A1', 'A1', 'A0') 
update(86): ETA = 3.8673 m, counter = 166 / 836 , time = 1.8780 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('2A1', 'A1', 'A0')  
get_cls(1168): 	 appended:  (8, 'A1', '{A1}+{A3}') , ( bas1.type, bas2.type, bas3.type ) = ('2A1', '2A1', 'A0') 
get_cls(1168): 	 appended:  (8, 'A1', '4{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('2A1', '2A1', 'A0') 
get_cls(1168): 	 appended:  (8, 'A1', '2{A1}+{A2}') , ( bas1.type, bas2.type, bas3.type ) = ('2A1', '2A1', 'A0') 
get_cls(1168): 	 appended:  (8, 'A1', '2{A2}') , ( bas1.type, bas2.type, bas3.type ) = ('2A1', '2A1', 'A0') 
get_cls(1168): 	 appended:  (8, 'A1', '5{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('2A1', '3A1', 'A0') 
get_cls(1168): 	 appended:  (8, 'A1', '{A3}') , ( bas1.type, bas2.type, bas3.type ) = ('A2', 'A1', 'A0') 
update(86): ETA = 1.5309 m, counter = 249 / 836 , time = 2.0944 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A2', '2A1', 'A0')  
get_cls(1168): 	 appended:  (8, 'A1', '{A1}+{A3}') , ( bas1.type, bas2.type, bas3.type ) = ('A2', '2A1', 'A0') 
get_cls(1168): 	 appended:  (8, 'A1', '{A1}+{A3}') , ( bas1.type, bas2.type, bas3.type ) = ('A2', '2A1', 'A0') 
get_cls(1168): 	 appended:  (8, 'A1', '2{A1}+{A3}') , ( bas1.type, bas2.type, bas3.type ) = ('3A1', '2A1', 'A0') 
update(86): ETA = 0.89327 m, counter = 332 / 836 , time = 2.2415 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('3A1', '2A1', 'A0')  
get_cls(1168): 	 appended:  (8, 'A1', '6{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('3A1', '3A1', 'A0') 
get_cls(1168): 	 appended:  (8, 'A1', '{A4}') , ( bas1.type, bas2.type, bas3.type ) = ('A1+A2', 'A1', 'A0') 
get_cls(1168): 	 appended:  (8, 'A1', '2{A1}+{A3}') , ( bas1.type, bas2.type, bas3.type ) = ('A1+A2', '2A1', 'A0') 
update(86): ETA = 0.59156 m, counter = 415 / 836 , time = 2.3582 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A1+A2', '2A1', 'A0')  
get_cls(1168): 	 appended:  (8, 'A1', '{A2}+{A3}') , ( bas1.type, bas2.type, bas3.type ) = ('A1+A2', '2A1', 'A0') 
get_cls(1168): 	 appended:  (8, 'A1', '{D4}') , ( bas1.type, bas2.type, bas3.type ) = ('A3', 'A1', 'A0') 
get_cls(1168): 	 appended:  (8, 'A1', '{A1}+{D4}') , ( bas1.type, bas2.type, bas3.type ) = ('A3', '2A1', 'A0') 
update(86): ETA = 0.30015 m, counter = 498 / 836 , time = 2.4319 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A3', '2A1', 'A0')  
get_cls(1168): 	 appended:  (8, 'A1', '{A5}') , ( bas1.type, bas2.type, bas3.type ) = ('2A2', 'A1', 'A0') 
get_cls(1168): 	 appended:  (8, 'A1', '2{A3}') , ( bas1.type, bas2.type, bas3.type ) = ('2A2', '2A1', 'A0') 
update(86): ETA = 0.14313 m, counter = 581 / 836 , time = 2.4785 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('2A2', '2A1', 'A0')  
get_cls(1168): 	 appended:  (8, 'A1', '{A5}') , ( bas1.type, bas2.type, bas3.type ) = ('A1+A3', 'A1', 'A0') 
get_cls(1168): 	 appended:  (8, 'A1', '2{A1}+{D4}') , ( bas1.type, bas2.type, bas3.type ) = ('A1+A3', '2A1', 'A0') 
update(86): ETA = 0.095564 m, counter = 664 / 836 , time = 2.5246 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A1+A3', '2A1', 'A0')  
get_cls(1168): 	 appended:  (8, 'A1', '{D5}') , ( bas1.type, bas2.type, bas3.type ) = ('A4', 'A1', 'A0') 
update(86): ETA = 0.030515 m, counter = 747 / 836 , time = 2.5530 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A4', '3A1', 'A0')  
get_cls(1168): 	 appended:  (8, 'A1', '{D6}') , ( bas1.type, bas2.type, bas3.type ) = ('A5', 'A1', 'A0') 
update(86): ETA = 0.0014911 m, counter = 830 / 836 , time = 2.5737 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A5', '3A1', 'A0')  
get_cls(1070): looping through inv_lst: (8, '2A1', [e1-e2, e3-e4]) 
get_part_roots(875): r_lst      = 63 [e1-e2, e2-e3, e1-e3, e3-e4, e2-e4, e1-e4, e4-e5, e3-e5, e2-e5, e1-e5, e5-e6, e4-e6, e3-e6, e2-e6, e1-e6, e6-e7, e5-e7, e4-e7, e3-e7, e2-e7, e1-e7, e0-e1-e2-e3, e0-e1-e2-e4, e0-e1-e3-e4, e0-e2-e3-e4, e0-e1-e2-e5, e0-e1-e3-e5, e0-e2-e3-e5, e0-e1-e4-e5, e0-e2-e4-e5, e0-e3-e4-e5, e0-e1-e2-e6, e0-e1-e3-e6, e0-e2-e3-e6, e0-e1-e4-e6, e0-e2-e4-e6, e0-e3-e4-e6, e0-e1-e5-e6, e0-e2-e5-e6, e0-e3-e5-e6, e0-e4-e5-e6, e0-e1-e2-e7, e0-e1-e3-e7, e0-e2-e3-e7, e0-e1-e4-e7, e0-e2-e4-e7, e0-e3-e4-e7, e0-e1-e5-e7, e0-e2-e5-e7, e0-e3-e5-e7, e0-e4-e5-e7, e0-e1-e6-e7, e0-e2-e6-e7, e0-e3-e6-e7, e0-e4-e6-e7, e0-e5-e6-e7, 2e0-e1-e2-e3-e4-e5-e6, 2e0-e1-e2-e3-e4-e5-e7, 2e0-e1-e2-e3-e4-e6-e7, 2e0-e1-e2-e3-e5-e6-e7, 2e0-e1-e2-e4-e5-e6-e7, 2e0-e1-e3-e4-e5-e6-e7, 2e0-e2-e3-e4-e5-e6-e7] 
get_part_roots(876): s_lst      = 13 [e5-e6, e6-e7, e5-e7, e0-e1-e2-e5, e0-e3-e4-e5, e0-e1-e2-e6, e0-e3-e4-e6, e0-e1-e2-e7, e0-e3-e4-e7, e0-e5-e6-e7, 2e0-e1-e2-e3-e4-e5-e6, 2e0-e1-e2-e3-e4-e5-e7, 2e0-e1-e2-e3-e4-e6-e7] 
get_part_roots(877): tq1_lst    = 48 [e2-e3, e1-e3, e2-e4, e1-e4, e4-e5, e3-e5, e2-e5, e1-e5, e4-e6, e3-e6, e2-e6, e1-e6, e4-e7, e3-e7, e2-e7, e1-e7, e0-e1-e2-e3, e0-e1-e2-e4, e0-e1-e3-e4, e0-e2-e3-e4, e0-e1-e3-e5, e0-e2-e3-e5, e0-e1-e4-e5, e0-e2-e4-e5, e0-e1-e3-e6, e0-e2-e3-e6, e0-e1-e4-e6, e0-e2-e4-e6, e0-e1-e5-e6, e0-e2-e5-e6, e0-e3-e5-e6, e0-e4-e5-e6, e0-e1-e3-e7, e0-e2-e3-e7, e0-e1-e4-e7, e0-e2-e4-e7, e0-e1-e5-e7, e0-e2-e5-e7, e0-e3-e5-e7, e0-e4-e5-e7, e0-e1-e6-e7, e0-e2-e6-e7, e0-e3-e6-e7, e0-e4-e6-e7, 2e0-e1-e2-e3-e5-e6-e7, 2e0-e1-e2-e4-e5-e6-e7, 2e0-e1-e3-e4-e5-e6-e7, 2e0-e2-e3-e4-e5-e6-e7] 
get_part_roots(878): tq_lst     = 16 [e2-e3, e1-e3, e2-e4, e1-e4, e0-e1-e3-e5, e0-e2-e3-e5, e0-e1-e4-e5, e0-e2-e4-e5, e0-e1-e3-e6, e0-e2-e3-e6, e0-e1-e4-e6, e0-e2-e4-e6, e0-e1-e3-e7, e0-e2-e3-e7, e0-e1-e4-e7, e0-e2-e4-e7] 
get_part_roots(879): q_lst      = 8 [e2-e3, e1-e3, e0-e1-e3-e5, e0-e2-e3-e5, e0-e1-e3-e6, e0-e2-e3-e6, e0-e1-e3-e7, e0-e2-e3-e7] 
get_part_roots(880):        M --> 8 [e1-e4, e2-e4, e0-e2-e4-e5, e0-e1-e4-e5, e0-e2-e4-e6, e0-e1-e4-e6, e0-e2-e4-e7, e0-e1-e4-e7] 
get_part_roots(881): inv.Md_lst = 2A1 [e1-e2, e3-e4] , rank = 8 
import_cls(1015): importing:  (8, '2A1', 'A0') [e1-e2, e3-e4] == [e1-e2, e3-e4] 
import_cls(1015): importing:  (8, '2A1', '{A1}') [e1-e2, e3-e4] == [e1-e2, e3-e4] 
import_cls(1015): importing:  (8, '2A1', '2A1') [e1-e2, e3-e4] == [e1-e2, e3-e4] 
import_cls(1015): importing:  (8, '2A1', '2{A1}') [e1-e2, e3-e4] == [e1-e2, e3-e4] 
import_cls(1015): importing:  (8, '2A1', '{A2}') [e1-e2, e3-e4] == [e1-e2, e3-e4] 
import_cls(1015): importing:  (8, '2A1', '2A1+{A1}') [e1-e2, e3-e4] == [e1-e2, e3-e4] 
import_cls(1015): importing:  (8, '2A1', '[A3]') [e1-e2, e3-e4] == [e1-e2, e3-e4] 
import_cls(1015): importing:  (8, '2A1', '{A3}') [e1-e2, e3-e4] == [e1-e2, e3-e4] 
import_cls(1015): importing:  (8, '2A1', '4A1') [e1-e2, e3-e4] == [e1-e2, e3-e4] 
import_cls(1015): importing:  (8, '2A1', '2{A1}+2A1') [e1-e2, e3-e4] == [e1-e2, e3-e4] 
import_cls(1015): importing:  (8, '2A1', '[D4]') [e1-e2, e3-e4] == [e1-e2, e3-e4] 
import_cls(1015): importing:  (8, '2A1', '2A1+[A3]') [e1-e2, e3-e4] == [e1-e2, e3-e4] 
get_cls(1086): looping through inv_lst continued after recursive call: (8, '2A1', [e1-e2, e3-e4]) 
get_cls(1094): bas1_lst = 12 [('2A1', 'A0'), ('2A1', 'A1'), ('2A1', '2A1'), ('2A1', '2A1'), ('2A1', 'A2'), ('2A1', '3A1'), ('2A1', 'A3'), ('2A1', 'A3'), ('2A1', '4A1'), ('2A1', '4A1'), ('2A1', 'D4'), ('2A1', '2A1+A3')] 
get_cls(1095): s_lst    = 7 [e6-e7, e5-e7, e0-e1-e2-e7, e0-e3-e4-e7, e0-e5-e6-e7, 2e0-e1-e2-e3-e4-e5-e7, 2e0-e1-e2-e3-e4-e6-e7] 
get_cls(1096): q_lst    = 2 [e0-e1-e3-e7, e0-e2-e3-e7] 
update(86): ETA = 0.000092447 m, counter = 0 / 47 , time = 1.9670e-6 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '2A1', 'A0')  
update(86): ETA = 0.033315 m, counter = 1 / 47 , time = 0.00072621 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '2A1', '{A1}')  
update(86): ETA = 0.049503 m, counter = 2 / 47 , time = 0.0018263 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '2A1', '2{A1}')  
update(86): ETA = 0.12396 m, counter = 3 / 47 , time = 0.0046435 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '2A1', '{A2}')  
update(86): ETA = 0.052017 m, counter = 4 / 47 , time = 0.0058532 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '2A1', '3{A1}')  
update(86): ETA = 0.16527 m, counter = 5 / 47 , time = 0.0097881 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '2A1', '3{A1}')  
update(86): ETA = 0.0080907 m, counter = 6 / 47 , time = 0.0099854 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '2A1', '{A1}+{A2}')  
update(86): ETA = 0.051702 m, counter = 7 / 47 , time = 0.011278 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '2A1', '{A3}')  
update(86): ETA = 0.051188 m, counter = 8 / 47 , time = 0.012591 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '2A1', '2{A1}+{A2}')  
update(86): ETA = 0.011649 m, counter = 9 / 47 , time = 0.012897 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '2A1', '2{A2}')  
update(86): ETA = 0.0089553 m, counter = 10 / 47 , time = 0.013139 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '2A1', '4{A1}')  
update(86): ETA = 0.19873 m, counter = 11 / 47 , time = 0.018659 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '2A1', '4{A1}')  
update(86): ETA = 0.010958 m, counter = 12 / 47 , time = 0.018972 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '2A1', '{A1}+{A3}')  
update(86): ETA = 0.045005 m, counter = 13 / 47 , time = 0.020296 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '2A1', '{A1}+{A3}')  
update(86): ETA = 0.012173 m, counter = 14 / 47 , time = 0.020665 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '2A1', '{A4}')  
update(86): ETA = 0.011996 m, counter = 15 / 47 , time = 0.021040 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '2A1', '{D4}')  
update(86): ETA = 0.043472 m, counter = 16 / 47 , time = 0.022442 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '2A1', '2{A1}+{A3}')  
update(86): ETA = 0.012066 m, counter = 17 / 47 , time = 0.022844 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '2A1', '2{A1}+{A3}')  
update(86): ETA = 0.010264 m, counter = 18 / 47 , time = 0.023198 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '2A1', '3{A1}+{A2}')  
update(86): ETA = 0.0091397 m, counter = 19 / 47 , time = 0.023525 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '2A1', '5{A1}')  
update(86): ETA = 0.15334 m, counter = 20 / 47 , time = 0.029204 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '2A1', '{A1}+2{A2}')  
update(86): ETA = 0.011936 m, counter = 21 / 47 , time = 0.029663 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '2A1', '{A1}+{A4}')  
update(86): ETA = 0.011497 m, counter = 22 / 47 , time = 0.030123 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '2A1', '{A1}+{D4}')  
update(86): ETA = 0.034408 m, counter = 23 / 47 , time = 0.031557 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '2A1', '{A2}+{A3}')  
update(86): ETA = 0.012318 m, counter = 24 / 47 , time = 0.032092 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '2A1', '{A5}')  
update(86): ETA = 0.011563 m, counter = 25 / 47 , time = 0.032618 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '2A1', '{A5}')  
update(86): ETA = 0.010989 m, counter = 26 / 47 , time = 0.033141 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '2A1', '{D5}')  
update(86): ETA = 0.011169 m, counter = 27 / 47 , time = 0.033700 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '2A1', '2{A1}+{D4}')  
update(86): ETA = 0.010935 m, counter = 28 / 47 , time = 0.034275 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '2A1', '2{A3}')  
update(86): ETA = 0.0089898 m, counter = 29 / 47 , time = 0.034775 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '2A1', '3{A1}+{A3}')  
update(86): ETA = 0.0088406 m, counter = 30 / 47 , time = 0.035295 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '2A1', '3{A2}')  
update(86): ETA = 0.0068008 m, counter = 31 / 47 , time = 0.035720 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '2A1', '6{A1}')  
update(86): ETA = 0.0081270 m, counter = 32 / 47 , time = 0.036261 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '2A1', '{A1}+{A2}+{A3}')  
update(86): ETA = 0.0088392 m, counter = 33 / 47 , time = 0.036893 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '2A1', '{A1}+{A5}')  
update(86): ETA = 0.0081183 m, counter = 34 / 47 , time = 0.037517 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '2A1', '{A1}+{A5}')  
update(86): ETA = 0.0074514 m, counter = 35 / 47 , time = 0.038138 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '2A1', '{A1}+{D5}')  
update(86): ETA = 0.0064550 m, counter = 36 / 47 , time = 0.038725 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '2A1', '{A2}+{A4}')  
update(86): ETA = 0.0070225 m, counter = 37 / 47 , time = 0.039427 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '2A1', '{A6}')  
update(86): ETA = 0.0063529 m, counter = 38 / 47 , time = 0.040133 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '2A1', '{D6}')  
update(86): ETA = 0.0057655 m, counter = 39 / 47 , time = 0.040854 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '2A1', '{E6}')  
update(86): ETA = 0.0046725 m, counter = 40 / 47 , time = 0.041521 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '2A1', '3{A1}+{D4}')  
update(86): ETA = 0.0031917 m, counter = 41 / 47 , time = 0.042053 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '2A1', '7{A1}')  
update(86): ETA = 0.0034288 m, counter = 42 / 47 , time = 0.042739 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '2A1', '{A1}+2{A3}')  
update(86): ETA = 0.0032651 m, counter = 43 / 47 , time = 0.043555 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '2A1', '{A1}+{D6}')  
update(86): ETA = 0.0023049 m, counter = 44 / 47 , time = 0.044324 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '2A1', '{A2}+{A5}')  
update(86): ETA = 0.0018356 m, counter = 45 / 47 , time = 0.045241 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '2A1', '{A7}')  
update(86): ETA = 0.00091528 m, counter = 46 / 47 , time = 0.046157 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '2A1', '{E7}')  
get_cls(1130): Setting Dynkin types of 23 items...please wait... 
update(86): ETA = 0.025681 m, counter = 0 / 23 , time = 0.0022331 m, info = 8 2A1 A0  
update(86): ETA = 0.072139 m, counter = 2 / 23 , time = 0.0091035 m, info = 8 2A1 A1  
update(86): ETA = 0.065297 m, counter = 4 / 23 , time = 0.015977 m, info = 8 2A1 A1  
update(86): ETA = 0.057947 m, counter = 6 / 23 , time = 0.022794 m, info = 8 2A1 A1  
update(86): ETA = 0.057479 m, counter = 8 / 23 , time = 0.030458 m, info = 8 2A1 2A1  
update(86): ETA = 0.055273 m, counter = 10 / 23 , time = 0.038962 m, info = 8 2A1 2A1  
update(86): ETA = 0.046997 m, counter = 12 / 23 , time = 0.047507 m, info = 8 2A1 2A1  
update(86): ETA = 0.038315 m, counter = 14 / 23 , time = 0.056021 m, info = 8 2A1 2A1  
update(86): ETA = 0.029727 m, counter = 16 / 23 , time = 0.064515 m, info = 8 2A1 2A1  
update(86): ETA = 0.025210 m, counter = 18 / 23 , time = 0.074598 m, info = 8 2A1 3A1  
update(86): ETA = 0.010906 m, counter = 20 / 23 , time = 0.081869 m, info = 8 2A1 A0  
update(86): ETA = 0.0042830 m, counter = 22 / 23 , time = 0.090435 m, info = 8 2A1 2A1  
get_cls(1145): inv      = 2A1 , rank = 8 
get_cls(1146): bas1_lst = 12 [('2A1', 2), ('2A1+A3', 1), ('3A1', 1), ('4A1', 2), ('A0', 1), ('A1', 1), ('A2', 1), ('A3', 2), ('D4', 1)] 
get_cls(1147): bas2_lst = 20 [('2A1', 9), ('3A1', 3), ('A0', 1), ('A1', 7)] 
get_cls(1148): bas3_lst = 3 [('2A1', 2), ('A0', 1)] 
update(86): ETA = 4.1723e-6 m, counter = 0 / 720 , time = 4.1723e-7 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', 'A0', 'A0')  
get_cls(1168): 	 appended:  (8, '2A1', 'A0') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A0', 'A0') 
get_cls(1168): 	 appended:  (8, '2A1', '2A1') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A0', '2A1') 
get_cls(1168): 	 appended:  (8, '2A1', '{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A1', 'A0') 
get_cls(1168): 	 appended:  (8, '2A1', '{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A1', 'A0') 
get_cls(1168): 	 appended:  (8, '2A1', '2A1+{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A1', '2A1') 
get_cls(1168): 	 appended:  (8, '2A1', '2{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A0', '2A1', 'A0') 
get_cls(1168): 	 appended:  (8, '2A1', '2{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A0', '2A1', 'A0') 
get_cls(1168): 	 appended:  (8, '2A1', '3{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A0', '3A1', 'A0') 
get_cls(1168): 	 appended:  (8, '2A1', '2A1+{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A1', 'A0', '2A1') 
get_cls(1168): 	 appended:  (8, '2A1', '{A2}') , ( bas1.type, bas2.type, bas3.type ) = ('A1', 'A1', 'A0') 
get_cls(1168): 	 appended:  (8, '2A1', '2{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A1', 'A1', 'A0') 
update(86): ETA = 4.5932 m, counter = 72 / 720 , time = 0.51036 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A1', 'A1', 'A0')  
get_cls(1168): 	 appended:  (8, '2A1', '2A1+2{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A1', 'A1', '2A1') 
get_cls(1168): 	 appended:  (8, '2A1', '3{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A1', '2A1', 'A0') 
get_cls(1168): 	 appended:  (8, '2A1', '{A1}+{A2}') , ( bas1.type, bas2.type, bas3.type ) = ('A1', '2A1', 'A0') 
get_cls(1168): 	 appended:  (8, '2A1', '3{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A1', '2A1', 'A0') 
get_cls(1168): 	 appended:  (8, '2A1', '4{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A1', '3A1', 'A0') 
get_cls(1168): 	 appended:  (8, '2A1', '4A1') , ( bas1.type, bas2.type, bas3.type ) = ('2A1', 'A0', '2A1') 
get_cls(1168): 	 appended:  (8, '2A1', '[A3]') , ( bas1.type, bas2.type, bas3.type ) = ('2A1', 'A1', 'A0') 
get_cls(1168): 	 appended:  (8, '2A1', '4A1+{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('2A1', 'A1', '2A1') 
update(86): ETA = 2.0296 m, counter = 144 / 720 , time = 0.76406 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('2A1', '2A1', 'A0')  
get_cls(1168): 	 appended:  (8, '2A1', '2{A1}+2A1') , ( bas1.type, bas2.type, bas3.type ) = ('2A1', '2A1', 'A0') 
get_cls(1168): 	 appended:  (8, '2A1', '{A1}+[A3]') , ( bas1.type, bas2.type, bas3.type ) = ('2A1', '2A1', 'A0') 
get_cls(1168): 	 appended:  (8, '2A1', '3{A1}+2A1') , ( bas1.type, bas2.type, bas3.type ) = ('2A1', '3A1', 'A0') 
get_cls(1168): 	 appended:  (8, '2A1', '{A3}') , ( bas1.type, bas2.type, bas3.type ) = ('2A1', 'A1', 'A0') 
get_cls(1168): 	 appended:  (8, '2A1', '4{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('2A1', '2A1', 'A0') 
get_cls(1168): 	 appended:  (8, '2A1', '{A1}+{A3}') , ( bas1.type, bas2.type, bas3.type ) = ('2A1', '2A1', 'A0') 
update(86): ETA = 1.5499 m, counter = 216 / 720 , time = 0.98547 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('2A1', '2A1', 'A0')  
get_cls(1168): 	 appended:  (8, '2A1', '5{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('2A1', '3A1', 'A0') 
get_cls(1168): 	 appended:  (8, '2A1', '2A1+{A2}') , ( bas1.type, bas2.type, bas3.type ) = ('A2', 'A0', '2A1') 
get_cls(1168): 	 appended:  (8, '2A1', '{A3}') , ( bas1.type, bas2.type, bas3.type ) = ('A2', 'A1', 'A0') 
get_cls(1168): 	 appended:  (8, '2A1', '2A1+{A1}+{A2}') , ( bas1.type, bas2.type, bas3.type ) = ('A2', 'A1', '2A1') 
get_cls(1168): 	 appended:  (8, '2A1', '{A1}+{A3}') , ( bas1.type, bas2.type, bas3.type ) = ('A2', '2A1', 'A0') 
update(86): ETA = 0.83162 m, counter = 288 / 720 , time = 1.1241 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A2', '2A1', 'A0')  
get_cls(1168): 	 appended:  (8, '2A1', '4A1+{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('3A1', 'A0', '2A1') 
get_cls(1168): 	 appended:  (8, '2A1', '{A1}+[A3]') , ( bas1.type, bas2.type, bas3.type ) = ('3A1', 'A1', 'A0') 
get_cls(1168): 	 appended:  (8, '2A1', '4A1+2{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('3A1', 'A1', '2A1') 
get_cls(1168): 	 appended:  (8, '2A1', '2{A1}+[A3]') , ( bas1.type, bas2.type, bas3.type ) = ('3A1', '2A1', 'A0') 
update(86): ETA = 0.51516 m, counter = 360 / 720 , time = 1.2271 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A3', 'A0', 'A0')  
get_cls(1168): 	 appended:  (8, '2A1', '2A1+[A3]') , ( bas1.type, bas2.type, bas3.type ) = ('A3', 'A0', '2A1') 
get_cls(1168): 	 appended:  (8, '2A1', '[D4]') , ( bas1.type, bas2.type, bas3.type ) = ('A3', 'A1', 'A0') 
get_cls(1168): 	 appended:  (8, '2A1', '2A1+{A1}+[A3]') , ( bas1.type, bas2.type, bas3.type ) = ('A3', 'A1', '2A1') 
get_cls(1168): 	 appended:  (8, '2A1', '2{A1}+[A3]') , ( bas1.type, bas2.type, bas3.type ) = ('A3', '2A1', 'A0') 
get_cls(1168): 	 appended:  (8, '2A1', '{A1}+[D4]') , ( bas1.type, bas2.type, bas3.type ) = ('A3', '2A1', 'A0') 
get_cls(1168): 	 appended:  (8, '2A1', '3{A1}+[A3]') , ( bas1.type, bas2.type, bas3.type ) = ('A3', '3A1', 'A0') 
get_cls(1168): 	 appended:  (8, '2A1', '2A1+{A3}') , ( bas1.type, bas2.type, bas3.type ) = ('A3', 'A0', '2A1') 
get_cls(1168): 	 appended:  (8, '2A1', '{D4}') , ( bas1.type, bas2.type, bas3.type ) = ('A3', 'A1', 'A0') 
update(86): ETA = 0.59672 m, counter = 432 / 720 , time = 1.3763 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A3', 'A1', 'A0')  
get_cls(1168): 	 appended:  (8, '2A1', '2A1+{A1}+{A3}') , ( bas1.type, bas2.type, bas3.type ) = ('A3', 'A1', '2A1') 
get_cls(1168): 	 appended:  (8, '2A1', '{A1}+{D4}') , ( bas1.type, bas2.type, bas3.type ) = ('A3', '2A1', 'A0') 
update(86): ETA = 0.28881 m, counter = 504 / 720 , time = 1.4726 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('4A1', '2A1', 'A0')  
get_cls(1168): 	 appended:  (8, '2A1', '2{A1}+4A1') , ( bas1.type, bas2.type, bas3.type ) = ('4A1', '2A1', 'A0') 
get_cls(1168): 	 appended:  (8, '2A1', '3{A1}+4A1') , ( bas1.type, bas2.type, bas3.type ) = ('4A1', '3A1', 'A0') 
update(86): ETA = 0.24968 m, counter = 576 / 720 , time = 1.5974 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('4A1', '2A1', 'A0')  
get_cls(1168): 	 appended:  (8, '2A1', '2A1+[D4]') , ( bas1.type, bas2.type, bas3.type ) = ('D4', 'A0', '2A1') 
get_cls(1168): 	 appended:  (8, '2A1', '[D5]') , ( bas1.type, bas2.type, bas3.type ) = ('D4', 'A1', 'A0') 
get_cls(1168): 	 appended:  (8, '2A1', '2A1+{A1}+[D4]') , ( bas1.type, bas2.type, bas3.type ) = ('D4', 'A1', '2A1') 
get_cls(1168): 	 appended:  (8, '2A1', '{A1}+[D5]') , ( bas1.type, bas2.type, bas3.type ) = ('D4', '2A1', 'A0') 
update(86): ETA = 0.062199 m, counter = 648 / 720 , time = 1.6596 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('D4', '2A1', 'A0')  
get_cls(1168): 	 appended:  (8, '2A1', '2[A3]') , ( bas1.type, bas2.type, bas3.type ) = ('2A1+A3', 'A1', 'A0') 
get_cls(1168): 	 appended:  (8, '2A1', '{A1}+2[A3]') , ( bas1.type, bas2.type, bas3.type ) = ('2A1+A3', '2A1', 'A0') 
get_cls(1070): looping through inv_lst: (8, '3A1', [e1-e2, e3-e4, e5-e6]) 
get_part_roots(875): r_lst      = 63 [e1-e2, e2-e3, e1-e3, e3-e4, e2-e4, e1-e4, e4-e5, e3-e5, e2-e5, e1-e5, e5-e6, e4-e6, e3-e6, e2-e6, e1-e6, e6-e7, e5-e7, e4-e7, e3-e7, e2-e7, e1-e7, e0-e1-e2-e3, e0-e1-e2-e4, e0-e1-e3-e4, e0-e2-e3-e4, e0-e1-e2-e5, e0-e1-e3-e5, e0-e2-e3-e5, e0-e1-e4-e5, e0-e2-e4-e5, e0-e3-e4-e5, e0-e1-e2-e6, e0-e1-e3-e6, e0-e2-e3-e6, e0-e1-e4-e6, e0-e2-e4-e6, e0-e3-e4-e6, e0-e1-e5-e6, e0-e2-e5-e6, e0-e3-e5-e6, e0-e4-e5-e6, e0-e1-e2-e7, e0-e1-e3-e7, e0-e2-e3-e7, e0-e1-e4-e7, e0-e2-e4-e7, e0-e3-e4-e7, e0-e1-e5-e7, e0-e2-e5-e7, e0-e3-e5-e7, e0-e4-e5-e7, e0-e1-e6-e7, e0-e2-e6-e7, e0-e3-e6-e7, e0-e4-e6-e7, e0-e5-e6-e7, 2e0-e1-e2-e3-e4-e5-e6, 2e0-e1-e2-e3-e4-e5-e7, 2e0-e1-e2-e3-e4-e6-e7, 2e0-e1-e2-e3-e5-e6-e7, 2e0-e1-e2-e4-e5-e6-e7, 2e0-e1-e3-e4-e5-e6-e7, 2e0-e2-e3-e4-e5-e6-e7] 
get_part_roots(876): s_lst      = 4 [e0-e1-e2-e7, e0-e3-e4-e7, e0-e5-e6-e7, 2e0-e1-e2-e3-e4-e5-e6] 
get_part_roots(877): tq1_lst    = 56 [e2-e3, e1-e3, e2-e4, e1-e4, e4-e5, e3-e5, e2-e5, e1-e5, e4-e6, e3-e6, e2-e6, e1-e6, e6-e7, e5-e7, e4-e7, e3-e7, e2-e7, e1-e7, e0-e1-e2-e3, e0-e1-e2-e4, e0-e1-e3-e4, e0-e2-e3-e4, e0-e1-e2-e5, e0-e1-e3-e5, e0-e2-e3-e5, e0-e1-e4-e5, e0-e2-e4-e5, e0-e3-e4-e5, e0-e1-e2-e6, e0-e1-e3-e6, e0-e2-e3-e6, e0-e1-e4-e6, e0-e2-e4-e6, e0-e3-e4-e6, e0-e1-e5-e6, e0-e2-e5-e6, e0-e3-e5-e6, e0-e4-e5-e6, e0-e1-e3-e7, e0-e2-e3-e7, e0-e1-e4-e7, e0-e2-e4-e7, e0-e1-e5-e7, e0-e2-e5-e7, e0-e3-e5-e7, e0-e4-e5-e7, e0-e1-e6-e7, e0-e2-e6-e7, e0-e3-e6-e7, e0-e4-e6-e7, 2e0-e1-e2-e3-e4-e5-e7, 2e0-e1-e2-e3-e4-e6-e7, 2e0-e1-e2-e3-e5-e6-e7, 2e0-e1-e2-e4-e5-e6-e7, 2e0-e1-e3-e4-e5-e6-e7, 2e0-e2-e3-e4-e5-e6-e7] 
get_part_roots(878): tq_lst     = 32 [e2-e3, e1-e3, e2-e4, e1-e4, e4-e5, e3-e5, e2-e5, e1-e5, e4-e6, e3-e6, e2-e6, e1-e6, e0-e1-e3-e5, e0-e2-e3-e5, e0-e1-e4-e5, e0-e2-e4-e5, e0-e1-e3-e6, e0-e2-e3-e6, e0-e1-e4-e6, e0-e2-e4-e6, e0-e1-e3-e7, e0-e2-e3-e7, e0-e1-e4-e7, e0-e2-e4-e7, e0-e1-e5-e7, e0-e2-e5-e7, e0-e3-e5-e7, e0-e4-e5-e7, e0-e1-e6-e7, e0-e2-e6-e7, e0-e3-e6-e7, e0-e4-e6-e7] 
get_part_roots(879): q_lst      = 16 [e2-e3, e1-e3, e4-e5, e3-e5, e2-e5, e1-e5, e0-e1-e3-e5, e0-e2-e3-e5, e0-e1-e4-e5, e0-e2-e4-e5, e0-e1-e3-e7, e0-e2-e3-e7, e0-e1-e5-e7, e0-e2-e5-e7, e0-e3-e5-e7, e0-e4-e5-e7] 
get_part_roots(880):        M --> 16 [e1-e4, e2-e4, e3-e6, e4-e6, e1-e6, e2-e6, e0-e2-e4-e6, e0-e1-e4-e6, e0-e2-e3-e6, e0-e1-e3-e6, e0-e2-e4-e7, e0-e1-e4-e7, e0-e2-e6-e7, e0-e1-e6-e7, e0-e4-e6-e7, e0-e3-e6-e7] 
get_part_roots(881): inv.Md_lst = 3A1 [e1-e2, e3-e4, e5-e6] , rank = 8 
import_cls(1015): importing:  (8, '3A1', 'A0') [e1-e2, e3-e4, e5-e6] == [e1-e2, e3-e4, e5-e6] 
import_cls(1015): importing:  (8, '3A1', '{A1}') [e1-e2, e3-e4, e5-e6] == [e1-e2, e3-e4, e5-e6] 
import_cls(1015): importing:  (8, '3A1', '2A1') [e1-e2, e3-e4, e5-e6] == [e1-e2, e3-e4, e5-e6] 
import_cls(1015): importing:  (8, '3A1', '[A2]') [e1-e2, e3-e4, e5-e6] == [e1-e2, e3-e4, e5-e6] 
import_cls(1015): importing:  (8, '3A1', '2A1+{A1}') [e1-e2, e3-e4, e5-e6] == [e1-e2, e3-e4, e5-e6] 
import_cls(1015): importing:  (8, '3A1', '2A1+[A2]') [e1-e2, e3-e4, e5-e6] == [e1-e2, e3-e4, e5-e6] 
import_cls(1015): importing:  (8, '3A1', '2A2') [e1-e2, e3-e4, e5-e6] == [e1-e2, e3-e4, e5-e6] 
import_cls(1015): importing:  (8, '3A1', '{A1}+2A2') [e1-e2, e3-e4, e5-e6] == [e1-e2, e3-e4, e5-e6] 
import_cls(1015): importing:  (8, '3A1', '[A2]+2A2') [e1-e2, e3-e4, e5-e6] == [e1-e2, e3-e4, e5-e6] 
get_cls(1086): looping through inv_lst continued after recursive call: (8, '3A1', [e1-e2, e3-e4, e5-e6]) 
get_cls(1094): bas1_lst = 9 [('3A1', 'A0'), ('3A1', 'A1'), ('3A1', '2A1'), ('3A1', 'A2'), ('3A1', '3A1'), ('3A1', '2A1+A2'), ('3A1', '2A2'), ('3A1', 'A1+2A2'), ('3A1', '3A2')] 
get_cls(1095): s_lst    = 3 [e0-e1-e2-e7, e0-e3-e4-e7, e0-e5-e6-e7] 
get_cls(1096): q_lst    = 6 [e0-e1-e3-e7, e0-e2-e3-e7, e0-e1-e5-e7, e0-e2-e5-e7, e0-e3-e5-e7, e0-e4-e5-e7] 
update(86): ETA = 0.00014175 m, counter = 0 / 47 , time = 3.0160e-6 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '3A1', 'A0')  
update(86): ETA = 0.033434 m, counter = 1 / 47 , time = 0.00072985 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '3A1', '{A1}')  
update(86): ETA = 0.055949 m, counter = 2 / 47 , time = 0.0019732 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '3A1', '2{A1}')  
update(86): ETA = 0.080354 m, counter = 3 / 47 , time = 0.0037994 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '3A1', '{A2}')  
update(86): ETA = 0.050613 m, counter = 4 / 47 , time = 0.0049764 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '3A1', '3{A1}')  
update(86): ETA = 0.095160 m, counter = 5 / 47 , time = 0.0072422 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '3A1', '3{A1}')  
update(86): ETA = 0.0085642 m, counter = 6 / 47 , time = 0.0074510 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '3A1', '{A1}+{A2}')  
update(86): ETA = 0.019889 m, counter = 7 / 47 , time = 0.0079483 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '3A1', '{A3}')  
update(86): ETA = 0.049677 m, counter = 8 / 47 , time = 0.0092220 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '3A1', '2{A1}+{A2}')  
update(86): ETA = 0.011784 m, counter = 9 / 47 , time = 0.0095321 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '3A1', '2{A2}')  
update(86): ETA = 0.0091157 m, counter = 10 / 47 , time = 0.0097785 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '3A1', '4{A1}')  
update(86): ETA = 0.062267 m, counter = 11 / 47 , time = 0.011508 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '3A1', '4{A1}')  
update(86): ETA = 0.011121 m, counter = 12 / 47 , time = 0.011826 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '3A1', '{A1}+{A3}')  
update(86): ETA = 0.010951 m, counter = 13 / 47 , time = 0.012148 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '3A1', '{A1}+{A3}')  
update(86): ETA = 0.012330 m, counter = 14 / 47 , time = 0.012522 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '3A1', '{A4}')  
update(86): ETA = 0.012182 m, counter = 15 / 47 , time = 0.012902 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '3A1', '{D4}')  
update(86): ETA = 0.035881 m, counter = 16 / 47 , time = 0.014060 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '3A1', '2{A1}+{A3}')  
update(86): ETA = 0.012239 m, counter = 17 / 47 , time = 0.014468 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '3A1', '2{A1}+{A3}')  
update(86): ETA = 0.010419 m, counter = 18 / 47 , time = 0.014827 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '3A1', '3{A1}+{A2}')  
update(86): ETA = 0.0092540 m, counter = 19 / 47 , time = 0.015158 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '3A1', '5{A1}')  
update(86): ETA = 0.010701 m, counter = 20 / 47 , time = 0.015554 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '3A1', '{A1}+2{A2}')  
update(86): ETA = 0.012330 m, counter = 21 / 47 , time = 0.016028 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '3A1', '{A1}+{A4}')  
update(86): ETA = 0.011611 m, counter = 22 / 47 , time = 0.016492 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '3A1', '{A1}+{D4}')  
update(86): ETA = 0.010518 m, counter = 23 / 47 , time = 0.016931 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '3A1', '{A2}+{A3}')  
update(86): ETA = 0.012169 m, counter = 24 / 47 , time = 0.017460 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '3A1', '{A5}')  
update(86): ETA = 0.011647 m, counter = 25 / 47 , time = 0.017989 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '3A1', '{A5}')  
update(86): ETA = 0.011057 m, counter = 26 / 47 , time = 0.018516 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '3A1', '{D5}')  
update(86): ETA = 0.011213 m, counter = 27 / 47 , time = 0.019076 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '3A1', '2{A1}+{D4}')  
update(86): ETA = 0.011009 m, counter = 28 / 47 , time = 0.019656 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '3A1', '2{A3}')  
update(86): ETA = 0.0092391 m, counter = 29 / 47 , time = 0.020169 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '3A1', '3{A1}+{A3}')  
update(86): ETA = 0.0089091 m, counter = 30 / 47 , time = 0.020693 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '3A1', '3{A2}')  
update(86): ETA = 0.0068352 m, counter = 31 / 47 , time = 0.021120 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '3A1', '6{A1}')  
update(86): ETA = 0.0080377 m, counter = 32 / 47 , time = 0.021656 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '3A1', '{A1}+{A2}+{A3}')  
update(86): ETA = 0.0087810 m, counter = 33 / 47 , time = 0.022283 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '3A1', '{A1}+{A5}')  
update(86): ETA = 0.0081454 m, counter = 34 / 47 , time = 0.022910 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '3A1', '{A1}+{A5}')  
update(86): ETA = 0.0075974 m, counter = 35 / 47 , time = 0.023543 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '3A1', '{A1}+{D5}')  
update(86): ETA = 0.0066044 m, counter = 36 / 47 , time = 0.024143 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '3A1', '{A2}+{A4}')  
update(86): ETA = 0.0070533 m, counter = 37 / 47 , time = 0.024849 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '3A1', '{A6}')  
update(86): ETA = 0.0063755 m, counter = 38 / 47 , time = 0.025557 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '3A1', '{D6}')  
update(86): ETA = 0.0056936 m, counter = 39 / 47 , time = 0.026269 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '3A1', '{E6}')  
update(86): ETA = 0.0046982 m, counter = 40 / 47 , time = 0.026940 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '3A1', '3{A1}+{D4}')  
update(86): ETA = 0.0032090 m, counter = 41 / 47 , time = 0.027475 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '3A1', '7{A1}')  
update(86): ETA = 0.0034798 m, counter = 42 / 47 , time = 0.028171 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '3A1', '{A1}+2{A3}')  
update(86): ETA = 0.0032575 m, counter = 43 / 47 , time = 0.028985 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '3A1', '{A1}+{D6}')  
update(86): ETA = 0.0022981 m, counter = 44 / 47 , time = 0.029751 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '3A1', '{A2}+{A5}')  
update(86): ETA = 0.0018126 m, counter = 45 / 47 , time = 0.030658 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '3A1', '{A7}')  
update(86): ETA = 0.00091097 m, counter = 46 / 47 , time = 0.031569 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '3A1', '{E7}')  
get_cls(1130): Setting Dynkin types of 15 items...please wait... 
update(86): ETA = 0.033867 m, counter = 0 / 15 , time = 0.0022578 m, info = 8 3A1 A0  
update(86): ETA = 0.048662 m, counter = 1 / 15 , time = 0.0057336 m, info = 8 3A1 A1  
update(86): ETA = 0.045084 m, counter = 2 / 15 , time = 0.0092016 m, info = 8 3A1 A1  
update(86): ETA = 0.041432 m, counter = 3 / 15 , time = 0.012654 m, info = 8 3A1 A1  
update(86): ETA = 0.047712 m, counter = 4 / 15 , time = 0.016992 m, info = 8 3A1 2A1  
update(86): ETA = 0.043140 m, counter = 5 / 15 , time = 0.021306 m, info = 8 3A1 2A1  
update(86): ETA = 0.038814 m, counter = 6 / 15 , time = 0.025618 m, info = 8 3A1 2A1  
update(86): ETA = 0.040630 m, counter = 7 / 15 , time = 0.030697 m, info = 8 3A1 3A1  
update(86): ETA = 0.015749 m, counter = 8 / 15 , time = 0.032947 m, info = 8 3A1 A0  
update(86): ETA = 0.025811 m, counter = 9 / 15 , time = 0.037249 m, info = 8 3A1 2A1  
update(86): ETA = 0.021608 m, counter = 10 / 15 , time = 0.041570 m, info = 8 3A1 2A1  
update(86): ETA = 0.017335 m, counter = 11 / 15 , time = 0.045904 m, info = 8 3A1 2A1  
update(86): ETA = 0.012952 m, counter = 12 / 15 , time = 0.050221 m, info = 8 3A1 2A1  
update(86): ETA = 0.0086500 m, counter = 13 / 15 , time = 0.054546 m, info = 8 3A1 2A1  
update(86): ETA = 0.0043249 m, counter = 14 / 15 , time = 0.058871 m, info = 8 3A1 2A1  
get_cls(1145): inv      = 3A1 , rank = 8 
get_cls(1146): bas1_lst = 9 [('2A1', 1), ('2A1+A2', 1), ('2A2', 1), ('3A1', 1), ('3A2', 1), ('A0', 1), ('A1', 1), ('A1+2A2', 1), ('A2', 1)] 
get_cls(1147): bas2_lst = 8 [('2A1', 3), ('3A1', 1), ('A0', 1), ('A1', 3)] 
get_cls(1148): bas3_lst = 7 [('2A1', 6), ('A0', 1)] 
update(86): ETA = 2.0027e-6 m, counter = 0 / 504 , time = 1.9868e-7 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', 'A0', 'A0')  
get_cls(1168): 	 appended:  (8, '3A1', 'A0') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A0', 'A0') 
get_cls(1168): 	 appended:  (8, '3A1', '2A1') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A0', '2A1') 
get_cls(1168): 	 appended:  (8, '3A1', '{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A1', 'A0') 
get_cls(1168): 	 appended:  (8, '3A1', '2A1+{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A1', '2A1') 
get_cls(1168): 	 appended:  (8, '3A1', '2{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A0', '2A1', 'A0') 
get_cls(1168): 	 appended:  (8, '3A1', '3{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A0', '3A1', 'A0') 
update(86): ETA = 3.0223 m, counter = 50 / 504 , time = 0.33285 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', '3A1', '2A1')  
get_cls(1168): 	 appended:  (8, '3A1', '{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A1', 'A0', 'A0') 
get_cls(1168): 	 appended:  (8, '3A1', '2A1+{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A1', 'A0', '2A1') 
get_cls(1168): 	 appended:  (8, '3A1', '2{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A1', 'A1', 'A0') 
get_cls(1168): 	 appended:  (8, '3A1', '2A1+2{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A1', 'A1', '2A1') 
get_cls(1168): 	 appended:  (8, '3A1', '3{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A1', '2A1', 'A0') 
update(86): ETA = 2.0209 m, counter = 100 / 504 , time = 0.58296 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A1', '2A1', '2A1')  
get_cls(1168): 	 appended:  (8, '3A1', '4{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A1', '3A1', 'A0') 
get_cls(1168): 	 appended:  (8, '3A1', '4A1') , ( bas1.type, bas2.type, bas3.type ) = ('2A1', 'A0', '2A1') 
get_cls(1168): 	 appended:  (8, '3A1', '2A2') , ( bas1.type, bas2.type, bas3.type ) = ('2A1', 'A0', '2A1') 
get_cls(1168): 	 appended:  (8, '3A1', '[A3]') , ( bas1.type, bas2.type, bas3.type ) = ('2A1', 'A1', 'A0') 
get_cls(1168): 	 appended:  (8, '3A1', '4A1+{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('2A1', 'A1', '2A1') 
get_cls(1168): 	 appended:  (8, '3A1', '{A1}+[A3]') , ( bas1.type, bas2.type, bas3.type ) = ('2A1', '2A1', 'A0') 
update(86): ETA = 0.71200 m, counter = 150 / 504 , time = 0.68352 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('2A1', '2A1', '2A1')  
get_cls(1168): 	 appended:  (8, '3A1', '[A2]') , ( bas1.type, bas2.type, bas3.type ) = ('A2', 'A0', 'A0') 
get_cls(1168): 	 appended:  (8, '3A1', '2A1+[A2]') , ( bas1.type, bas2.type, bas3.type ) = ('A2', 'A0', '2A1') 
get_cls(1168): 	 appended:  (8, '3A1', '{A1}+[A2]') , ( bas1.type, bas2.type, bas3.type ) = ('A2', 'A1', 'A0') 
get_cls(1168): 	 appended:  (8, '3A1', '2A1+{A1}+[A2]') , ( bas1.type, bas2.type, bas3.type ) = ('A2', 'A1', '2A1') 
get_cls(1168): 	 appended:  (8, '3A1', '2{A1}+[A2]') , ( bas1.type, bas2.type, bas3.type ) = ('A2', '2A1', 'A0') 
update(86): ETA = 0.72604 m, counter = 200 / 504 , time = 0.80294 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A2', '2A1', '2A1')  
get_cls(1168): 	 appended:  (8, '3A1', '3{A1}+[A2]') , ( bas1.type, bas2.type, bas3.type ) = ('A2', '3A1', 'A0') 
get_cls(1168): 	 appended:  (8, '3A1', '4A1+{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('3A1', 'A0', '2A1') 
get_cls(1168): 	 appended:  (8, '3A1', '{A1}+2A2') , ( bas1.type, bas2.type, bas3.type ) = ('3A1', 'A0', '2A1') 
get_cls(1168): 	 appended:  (8, '3A1', '{A1}+[A3]') , ( bas1.type, bas2.type, bas3.type ) = ('3A1', 'A1', 'A0') 
get_cls(1168): 	 appended:  (8, '3A1', '4A1+2{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('3A1', 'A1', '2A1') 
update(86): ETA = 0.52529 m, counter = 250 / 504 , time = 0.90634 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('3A1', 'A1', '2A1')  
get_cls(1168): 	 appended:  (8, '3A1', '2{A1}+[A3]') , ( bas1.type, bas2.type, bas3.type ) = ('3A1', '2A1', 'A0') 
get_cls(1168): 	 appended:  (8, '3A1', '[A2]+2A2') , ( bas1.type, bas2.type, bas3.type ) = ('2A1+A2', 'A0', '2A1') 
get_cls(1168): 	 appended:  (8, '3A1', '[A2]+[A3]') , ( bas1.type, bas2.type, bas3.type ) = ('2A1+A2', 'A1', 'A0') 
update(86): ETA = 0.16301 m, counter = 300 / 504 , time = 0.94629 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('2A1+A2', 'A1', '2A1')  
get_cls(1168): 	 appended:  (8, '3A1', '{A1}+[A2]+[A3]') , ( bas1.type, bas2.type, bas3.type ) = ('2A1+A2', '2A1', 'A0') 
get_cls(1168): 	 appended:  (8, '3A1', '2A3') , ( bas1.type, bas2.type, bas3.type ) = ('2A2', 'A0', '2A1') 
get_cls(1168): 	 appended:  (8, '3A1', '[A5]') , ( bas1.type, bas2.type, bas3.type ) = ('2A2', 'A1', 'A0') 
update(86): ETA = 0.14082 m, counter = 350 / 504 , time = 0.99202 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('2A2', 'A1', 'A0')  
get_cls(1168): 	 appended:  (8, '3A1', '{A1}+2A3') , ( bas1.type, bas2.type, bas3.type ) = ('A1+2A2', 'A0', '2A1') 
get_cls(1168): 	 appended:  (8, '3A1', '{A1}+[A5]') , ( bas1.type, bas2.type, bas3.type ) = ('A1+2A2', 'A1', 'A0') 
update(86): ETA = 0.059601 m, counter = 400 / 504 , time = 1.0207 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A1+2A2', 'A1', '2A1')  
update(86): ETA = 0.0099941 m, counter = 450 / 504 , time = 1.0299 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('3A2', 'A0', '2A1')  
get_cls(1168): 	 appended:  (8, '3A1', '[A2]+[A5]') , ( bas1.type, bas2.type, bas3.type ) = ('3A2', 'A1', 'A0') 
update(86): ETA = 0.00076215 m, counter = 500 / 504 , time = 1.0394 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('3A2', '3A1', '2A1')  
get_cls(1070): looping through inv_lst: (8, "3A1'", [e4-e5, e6-e7, e0-e1-e2-e3]) 
get_part_roots(875): r_lst      = 63 [e1-e2, e2-e3, e1-e3, e3-e4, e2-e4, e1-e4, e4-e5, e3-e5, e2-e5, e1-e5, e5-e6, e4-e6, e3-e6, e2-e6, e1-e6, e6-e7, e5-e7, e4-e7, e3-e7, e2-e7, e1-e7, e0-e1-e2-e3, e0-e1-e2-e4, e0-e1-e3-e4, e0-e2-e3-e4, e0-e1-e2-e5, e0-e1-e3-e5, e0-e2-e3-e5, e0-e1-e4-e5, e0-e2-e4-e5, e0-e3-e4-e5, e0-e1-e2-e6, e0-e1-e3-e6, e0-e2-e3-e6, e0-e1-e4-e6, e0-e2-e4-e6, e0-e3-e4-e6, e0-e1-e5-e6, e0-e2-e5-e6, e0-e3-e5-e6, e0-e4-e5-e6, e0-e1-e2-e7, e0-e1-e3-e7, e0-e2-e3-e7, e0-e1-e4-e7, e0-e2-e4-e7, e0-e3-e4-e7, e0-e1-e5-e7, e0-e2-e5-e7, e0-e3-e5-e7, e0-e4-e5-e7, e0-e1-e6-e7, e0-e2-e6-e7, e0-e3-e6-e7, e0-e4-e6-e7, e0-e5-e6-e7, 2e0-e1-e2-e3-e4-e5-e6, 2e0-e1-e2-e3-e4-e5-e7, 2e0-e1-e2-e3-e4-e6-e7, 2e0-e1-e2-e3-e5-e6-e7, 2e0-e1-e2-e4-e5-e6-e7, 2e0-e1-e3-e4-e5-e6-e7, 2e0-e2-e3-e4-e5-e6-e7] 
get_part_roots(876): s_lst      = 12 [e1-e2, e2-e3, e1-e3, e0-e1-e4-e5, e0-e2-e4-e5, e0-e3-e4-e5, e0-e1-e6-e7, e0-e2-e6-e7, e0-e3-e6-e7, 2e0-e1-e2-e4-e5-e6-e7, 2e0-e1-e3-e4-e5-e6-e7, 2e0-e2-e3-e4-e5-e6-e7] 
get_part_roots(877): tq1_lst    = 48 [e3-e4, e2-e4, e1-e4, e3-e5, e2-e5, e1-e5, e5-e6, e4-e6, e3-e6, e2-e6, e1-e6, e5-e7, e4-e7, e3-e7, e2-e7, e1-e7, e0-e1-e2-e4, e0-e1-e3-e4, e0-e2-e3-e4, e0-e1-e2-e5, e0-e1-e3-e5, e0-e2-e3-e5, e0-e1-e2-e6, e0-e1-e3-e6, e0-e2-e3-e6, e0-e1-e4-e6, e0-e2-e4-e6, e0-e3-e4-e6, e0-e1-e5-e6, e0-e2-e5-e6, e0-e3-e5-e6, e0-e4-e5-e6, e0-e1-e2-e7, e0-e1-e3-e7, e0-e2-e3-e7, e0-e1-e4-e7, e0-e2-e4-e7, e0-e3-e4-e7, e0-e1-e5-e7, e0-e2-e5-e7, e0-e3-e5-e7, e0-e4-e5-e7, e0-e4-e6-e7, e0-e5-e6-e7, 2e0-e1-e2-e3-e4-e5-e6, 2e0-e1-e2-e3-e4-e5-e7, 2e0-e1-e2-e3-e4-e6-e7, 2e0-e1-e2-e3-e5-e6-e7] 
get_part_roots(878): tq_lst     = 48 [e3-e4, e2-e4, e1-e4, e3-e5, e2-e5, e1-e5, e5-e6, e4-e6, e3-e6, e2-e6, e1-e6, e5-e7, e4-e7, e3-e7, e2-e7, e1-e7, e0-e1-e2-e4, e0-e1-e3-e4, e0-e2-e3-e4, e0-e1-e2-e5, e0-e1-e3-e5, e0-e2-e3-e5, e0-e1-e2-e6, e0-e1-e3-e6, e0-e2-e3-e6, e0-e1-e4-e6, e0-e2-e4-e6, e0-e3-e4-e6, e0-e1-e5-e6, e0-e2-e5-e6, e0-e3-e5-e6, e0-e4-e5-e6, e0-e1-e2-e7, e0-e1-e3-e7, e0-e2-e3-e7, e0-e1-e4-e7, e0-e2-e4-e7, e0-e3-e4-e7, e0-e1-e5-e7, e0-e2-e5-e7, e0-e3-e5-e7, e0-e4-e5-e7, e0-e4-e6-e7, e0-e5-e6-e7, 2e0-e1-e2-e3-e4-e5-e6, 2e0-e1-e2-e3-e4-e5-e7, 2e0-e1-e2-e3-e4-e6-e7, 2e0-e1-e2-e3-e5-e6-e7] 
get_part_roots(879): q_lst      = 24 [e3-e4, e2-e4, e1-e4, e3-e5, e2-e5, e1-e5, e5-e6, e4-e6, e3-e6, e2-e6, e1-e6, e3-e7, e2-e7, e1-e7, e0-e1-e4-e6, e0-e2-e4-e6, e0-e3-e4-e6, e0-e1-e5-e6, e0-e2-e5-e6, e0-e3-e5-e6, e0-e4-e5-e6, e0-e4-e5-e7, e0-e4-e6-e7, e0-e5-e6-e7] 
get_part_roots(880):        M --> 24 [e0-e1-e2-e5, e0-e1-e3-e5, e0-e2-e3-e5, e0-e1-e2-e4, e0-e1-e3-e4, e0-e2-e3-e4, e4-e7, e5-e7, e0-e1-e2-e7, e0-e1-e3-e7, e0-e2-e3-e7, e0-e1-e2-e6, e0-e1-e3-e6, e0-e2-e3-e6, e0-e1-e5-e7, e0-e2-e5-e7, e0-e3-e5-e7, e0-e1-e4-e7, e0-e2-e4-e7, e0-e3-e4-e7, 2e0-e1-e2-e3-e4-e5-e7, 2e0-e1-e2-e3-e4-e5-e6, 2e0-e1-e2-e3-e5-e6-e7, 2e0-e1-e2-e3-e4-e6-e7] 
get_part_roots(881): inv.Md_lst = 3A1 [e4-e5, e6-e7, e0-e1-e2-e3] , rank = 8 
get_cls(1086): looping through inv_lst continued after recursive call: (8, "3A1'", [e4-e5, e6-e7, e0-e1-e2-e3]) 
get_cls(1094): bas1_lst = 1 [('3A1', 'A0')] 
get_cls(1095): s_lst    = 12 [e1-e2, e2-e3, e1-e3, e0-e1-e4-e5, e0-e2-e4-e5, e0-e3-e4-e5, e0-e1-e6-e7, e0-e2-e6-e7, e0-e3-e6-e7, 2e0-e1-e2-e4-e5-e6-e7, 2e0-e1-e3-e4-e5-e6-e7, 2e0-e2-e3-e4-e5-e6-e7] 
get_cls(1096): q_lst    = 24 [e3-e4, e2-e4, e1-e4, e3-e5, e2-e5, e1-e5, e5-e6, e4-e6, e3-e6, e2-e6, e1-e6, e3-e7, e2-e7, e1-e7, e0-e1-e4-e6, e0-e2-e4-e6, e0-e3-e4-e6, e0-e1-e5-e6, e0-e2-e5-e6, e0-e3-e5-e6, e0-e4-e5-e6, e0-e4-e5-e7, e0-e4-e6-e7, e0-e5-e6-e7] 
update(86): ETA = 0.00010496 m, counter = 0 / 47 , time = 2.2332e-6 m, info = get_cls seeking bases in s_lst and q_lst:  (8, "3A1'", 'A0')  
update(86): ETA = 0.033188 m, counter = 1 / 47 , time = 0.00072372 m, info = get_cls seeking bases in s_lst and q_lst:  (8, "3A1'", '{A1}')  
update(86): ETA = 0.23770 m, counter = 2 / 47 , time = 0.0060060 m, info = get_cls seeking bases in s_lst and q_lst:  (8, "3A1'", '2{A1}')  
update(86): ETA = 14.694 m, counter = 3 / 47 , time = 0.33995 m, info = get_cls seeking bases in s_lst and q_lst:  (8, "3A1'", '{A2}')  
update(86): ETA = 0.91189 m, counter = 4 / 47 , time = 0.36116 m, info = get_cls seeking bases in s_lst and q_lst:  (8, "3A1'", '3{A1}')  
update(86): ETA = 111.37 m, counter = 5 / 47 , time = 3.0127 m, info = get_cls seeking bases in s_lst and q_lst:  (8, "3A1'", '3{A1}')  
update(86): ETA = 0.0081399 m, counter = 6 / 47 , time = 3.0129 m, info = get_cls seeking bases in s_lst and q_lst:  (8, "3A1'", '{A1}+{A2}')  
update(86): ETA = 9.5098 m, counter = 7 / 47 , time = 3.2507 m, info = get_cls seeking bases in s_lst and q_lst:  (8, "3A1'", '{A3}')  
update(86): ETA = 1.0375 m, counter = 8 / 47 , time = 3.2773 m, info = get_cls seeking bases in s_lst and q_lst:  (8, "3A1'", '2{A1}+{A2}')  
update(86): ETA = 0.011611 m, counter = 9 / 47 , time = 3.2776 m, info = get_cls seeking bases in s_lst and q_lst:  (8, "3A1'", '2{A2}')  
update(86): ETA = 0.0089516 m, counter = 10 / 47 , time = 3.2778 m, info = get_cls seeking bases in s_lst and q_lst:  (8, "3A1'", '4{A1}')  
update(86): ETA = 1.0707 m, counter = 11 / 47 , time = 3.3076 m, info = get_cls seeking bases in s_lst and q_lst:  (8, "3A1'", '4{A1}')  
update(86): ETA = 0.010948 m, counter = 12 / 47 , time = 3.3079 m, info = get_cls seeking bases in s_lst and q_lst:  (8, "3A1'", '{A1}+{A3}')  
update(86): ETA = 0.010809 m, counter = 13 / 47 , time = 3.3082 m, info = get_cls seeking bases in s_lst and q_lst:  (8, "3A1'", '{A1}+{A3}')  
update(86): ETA = 0.012195 m, counter = 14 / 47 , time = 3.3086 m, info = get_cls seeking bases in s_lst and q_lst:  (8, "3A1'", '{A4}')  
update(86): ETA = 0.012053 m, counter = 15 / 47 , time = 3.3089 m, info = get_cls seeking bases in s_lst and q_lst:  (8, "3A1'", '{D4}')  
update(86): ETA = 0.39354 m, counter = 16 / 47 , time = 3.3216 m, info = get_cls seeking bases in s_lst and q_lst:  (8, "3A1'", '2{A1}+{A3}')  
update(86): ETA = 0.012103 m, counter = 17 / 47 , time = 3.3220 m, info = get_cls seeking bases in s_lst and q_lst:  (8, "3A1'", '2{A1}+{A3}')  
update(86): ETA = 0.010304 m, counter = 18 / 47 , time = 3.3224 m, info = get_cls seeking bases in s_lst and q_lst:  (8, "3A1'", '3{A1}+{A2}')  
update(86): ETA = 0.0091415 m, counter = 19 / 47 , time = 3.3227 m, info = get_cls seeking bases in s_lst and q_lst:  (8, "3A1'", '5{A1}')  
update(86): ETA = 0.010878 m, counter = 20 / 47 , time = 3.3231 m, info = get_cls seeking bases in s_lst and q_lst:  (8, "3A1'", '{A1}+2{A2}')  
update(86): ETA = 0.011975 m, counter = 21 / 47 , time = 3.3236 m, info = get_cls seeking bases in s_lst and q_lst:  (8, "3A1'", '{A1}+{A4}')  
update(86): ETA = 0.011568 m, counter = 22 / 47 , time = 3.3240 m, info = get_cls seeking bases in s_lst and q_lst:  (8, "3A1'", '{A1}+{D4}')  
update(86): ETA = 0.010490 m, counter = 23 / 47 , time = 3.3245 m, info = get_cls seeking bases in s_lst and q_lst:  (8, "3A1'", '{A2}+{A3}')  
update(86): ETA = 0.012145 m, counter = 24 / 47 , time = 3.3250 m, info = get_cls seeking bases in s_lst and q_lst:  (8, "3A1'", '{A5}')  
update(86): ETA = 0.011603 m, counter = 25 / 47 , time = 3.3255 m, info = get_cls seeking bases in s_lst and q_lst:  (8, "3A1'", '{A5}')  
update(86): ETA = 0.011058 m, counter = 26 / 47 , time = 3.3261 m, info = get_cls seeking bases in s_lst and q_lst:  (8, "3A1'", '{D5}')  
update(86): ETA = 0.011277 m, counter = 27 / 47 , time = 3.3266 m, info = get_cls seeking bases in s_lst and q_lst:  (8, "3A1'", '2{A1}+{D4}')  
update(86): ETA = 0.011009 m, counter = 28 / 47 , time = 3.3272 m, info = get_cls seeking bases in s_lst and q_lst:  (8, "3A1'", '2{A3}')  
update(86): ETA = 0.0092103 m, counter = 29 / 47 , time = 3.3277 m, info = get_cls seeking bases in s_lst and q_lst:  (8, "3A1'", '3{A1}+{A3}')  
update(86): ETA = 0.0089026 m, counter = 30 / 47 , time = 3.3282 m, info = get_cls seeking bases in s_lst and q_lst:  (8, "3A1'", '3{A2}')  
update(86): ETA = 0.0068246 m, counter = 31 / 47 , time = 3.3287 m, info = get_cls seeking bases in s_lst and q_lst:  (8, "3A1'", '6{A1}')  
update(86): ETA = 0.0080460 m, counter = 32 / 47 , time = 3.3292 m, info = get_cls seeking bases in s_lst and q_lst:  (8, "3A1'", '{A1}+{A2}+{A3}')  
update(86): ETA = 0.0087689 m, counter = 33 / 47 , time = 3.3298 m, info = get_cls seeking bases in s_lst and q_lst:  (8, "3A1'", '{A1}+{A5}')  
update(86): ETA = 0.0081144 m, counter = 34 / 47 , time = 3.3305 m, info = get_cls seeking bases in s_lst and q_lst:  (8, "3A1'", '{A1}+{A5}')  
update(86): ETA = 0.0074544 m, counter = 35 / 47 , time = 3.3311 m, info = get_cls seeking bases in s_lst and q_lst:  (8, "3A1'", '{A1}+{D5}')  
update(86): ETA = 0.0065778 m, counter = 36 / 47 , time = 3.3317 m, info = get_cls seeking bases in s_lst and q_lst:  (8, "3A1'", '{A2}+{A4}')  
update(86): ETA = 0.0070250 m, counter = 37 / 47 , time = 3.3324 m, info = get_cls seeking bases in s_lst and q_lst:  (8, "3A1'", '{A6}')  
update(86): ETA = 0.0063225 m, counter = 38 / 47 , time = 3.3331 m, info = get_cls seeking bases in s_lst and q_lst:  (8, "3A1'", '{D6}')  
update(86): ETA = 0.0056624 m, counter = 39 / 47 , time = 3.3338 m, info = get_cls seeking bases in s_lst and q_lst:  (8, "3A1'", '{E6}')  
update(86): ETA = 0.0046686 m, counter = 40 / 47 , time = 3.3345 m, info = get_cls seeking bases in s_lst and q_lst:  (8, "3A1'", '3{A1}+{D4}')  
update(86): ETA = 0.0032058 m, counter = 41 / 47 , time = 3.3350 m, info = get_cls seeking bases in s_lst and q_lst:  (8, "3A1'", '7{A1}')  
update(86): ETA = 0.0034679 m, counter = 42 / 47 , time = 3.3357 m, info = get_cls seeking bases in s_lst and q_lst:  (8, "3A1'", '{A1}+2{A3}')  
update(86): ETA = 0.0032522 m, counter = 43 / 47 , time = 3.3365 m, info = get_cls seeking bases in s_lst and q_lst:  (8, "3A1'", '{A1}+{D6}')  
update(86): ETA = 0.0022884 m, counter = 44 / 47 , time = 3.3373 m, info = get_cls seeking bases in s_lst and q_lst:  (8, "3A1'", '{A2}+{A5}')  
update(86): ETA = 0.0018014 m, counter = 45 / 47 , time = 3.3382 m, info = get_cls seeking bases in s_lst and q_lst:  (8, "3A1'", '{A7}')  
update(86): ETA = 0.00090630 m, counter = 46 / 47 , time = 3.3391 m, info = get_cls seeking bases in s_lst and q_lst:  (8, "3A1'", '{E7}')  
get_cls(1130): Setting Dynkin types of 248 items...please wait... 
update(86): ETA = 0.023139 m, counter = 0 / 248 , time = 0.0022393 m, info = 8 3A1' A0  
update(86): ETA = 0.86258 m, counter = 24 / 248 , time = 0.094658 m, info = 8 3A1' 2A1  
update(86): ETA = 0.85684 m, counter = 48 / 248 , time = 0.19748 m, info = 8 3A1' 3A1  
update(86): ETA = 0.87930 m, counter = 72 / 248 , time = 0.31738 m, info = 8 3A1' 4A1  
update(86): ETA = 0.65495 m, counter = 96 / 248 , time = 0.42080 m, info = 8 3A1' 2A1  
update(86): ETA = 0.70048 m, counter = 120 / 248 , time = 0.55214 m, info = 8 3A1' 2A2  
update(86): ETA = 0.58260 m, counter = 144 / 248 , time = 0.68658 m, info = 8 3A1' 2A2  
update(86): ETA = 0.45446 m, counter = 168 / 248 , time = 0.82292 m, info = 8 3A1' 2A2  
update(86): ETA = 0.31553 m, counter = 192 / 248 , time = 0.95815 m, info = 8 3A1' 2A2  
update(86): ETA = 0.20514 m, counter = 216 / 248 , time = 1.1120 m, info = 8 3A1' 2A3  
update(86): ETA = 0.053482 m, counter = 240 / 248 , time = 1.2725 m, info = 8 3A1' 2A3  
get_cls(1145): inv      = 3A1' , rank = 8 
get_cls(1146): bas1_lst = 1 [('A0', 1)] 
get_cls(1147): bas2_lst = 75 [('2A1', 18), ('3A1', 12), ('4A1', 3), ('A0', 1), ('A1', 12), ('A2', 16), ('A3', 12), ('D4', 1)] 
get_cls(1148): bas3_lst = 173 [('2A1', 24), ('2A2', 64), ('2A3', 48), ('4A1', 36), ('A0', 1)] 
update(86): ETA = 1.9876e-6 m, counter = 0 / 12975 , time = 1.9868e-7 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', 'A0', 'A0')  
get_cls(1168): 	 appended:  (8, "3A1'", 'A0') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A0', 'A0') 
get_cls(1168): 	 appended:  (8, "3A1'", '2A1') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A0', '2A1') 
get_cls(1168): 	 appended:  (8, "3A1'", '2A2') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A0', '2A2') 
get_cls(1168): 	 appended:  (8, "3A1'", '4A1') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A0', '4A1') 
get_cls(1168): 	 appended:  (8, "3A1'", '2A3') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A0', '2A3') 
get_cls(1168): 	 appended:  (8, "3A1'", '{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A1', 'A0') 
get_cls(1168): 	 appended:  (8, "3A1'", '2A1+{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A1', '2A1') 
get_cls(1168): 	 appended:  (8, "3A1'", '[A3]') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A1', '2A1') 
get_cls(1168): 	 appended:  (8, "3A1'", '{A1}+2A2') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A1', '2A2') 
get_cls(1168): 	 appended:  (8, "3A1'", '[A5]') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A1', '2A2') 
get_cls(1168): 	 appended:  (8, "3A1'", '2A1+[A3]') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A1', '4A1') 
get_cls(1168): 	 appended:  (8, "3A1'", '4A1+{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A1', '4A1') 
get_cls(1168): 	 appended:  (8, "3A1'", '[A7]') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A1', '2A3') 
get_cls(1168): 	 appended:  (8, "3A1'", '{A1}+2A3') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A1', '2A3') 
update(86): ETA = 53.638 m, counter = 1297 / 12975 , time = 5.9572 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', 'A1', '2A2')  
get_cls(1168): 	 appended:  (8, "3A1'", '2{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A0', '2A1', 'A0') 
get_cls(1168): 	 appended:  (8, "3A1'", '2A1+2{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A0', '2A1', '2A1') 
get_cls(1168): 	 appended:  (8, "3A1'", '{A1}+[A3]') , ( bas1.type, bas2.type, bas3.type ) = ('A0', '2A1', '2A1') 
get_cls(1168): 	 appended:  (8, "3A1'", '{A1}+[A5]') , ( bas1.type, bas2.type, bas3.type ) = ('A0', '2A1', '2A2') 
get_cls(1168): 	 appended:  (8, "3A1'", '4A1+2{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A0', '2A1', '4A1') 
get_cls(1168): 	 appended:  (8, "3A1'", '2[A3]') , ( bas1.type, bas2.type, bas3.type ) = ('A0', '2A1', '4A1') 
update(86): ETA = 22.114 m, counter = 2594 / 12975 , time = 8.7202 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', '2A1', '2A3')  
update(86): ETA = 10.127 m, counter = 3891 / 12975 , time = 10.166 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', '2A1', '2A2')  
update(86): ETA = 4.3861 m, counter = 5188 / 12975 , time = 10.897 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', '2A1', '2A3')  
get_cls(1168): 	 appended:  (8, "3A1'", '{A2}') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A2', 'A0') 
get_cls(1168): 	 appended:  (8, "3A1'", '[D4]') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A2', '2A1') 
get_cls(1168): 	 appended:  (8, "3A1'", '2A1+{A2}') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A2', '2A1') 
get_cls(1168): 	 appended:  (8, "3A1'", '[E6]') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A2', '2A2') 
get_cls(1168): 	 appended:  (8, "3A1'", '2A2+{A2}') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A2', '2A2') 
get_cls(1168): 	 appended:  (8, "3A1'", '2A1+[D4]') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A2', '4A1') 
update(86): ETA = 6.0455 m, counter = 6485 / 12975 , time = 12.105 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', 'A2', '2A2')  
update(86): ETA = 3.6114 m, counter = 7782 / 12975 , time = 13.007 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', 'A2', '2A3')  
get_cls(1168): 	 appended:  (8, "3A1'", '3{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A0', '3A1', 'A0') 
get_cls(1168): 	 appended:  (8, "3A1'", '2{A1}+[A3]') , ( bas1.type, bas2.type, bas3.type ) = ('A0', '3A1', '2A1') 
update(86): ETA = 1.6725 m, counter = 9079 / 12975 , time = 13.564 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', '3A1', '2A2')  
get_cls(1168): 	 appended:  (8, "3A1'", '{A3}') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A3', 'A0') 
get_cls(1168): 	 appended:  (8, "3A1'", '2A1+{A3}') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A3', '2A1') 
update(86): ETA = 0.51703 m, counter = 10376 / 12975 , time = 13.822 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', 'A3', '2A3')  
get_cls(1168): 	 appended:  (8, "3A1'", '[D5]') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A3', '2A1') 
update(86): ETA = 0.32071 m, counter = 11673 / 12975 , time = 14.141 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', 'A3', '2A2')  
get_cls(1168): 	 appended:  (8, "3A1'", '4{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A0', '4A1', 'A0') 
get_cls(1168): 	 appended:  (8, "3A1'", '{D4}') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'D4', 'A0') 
update(86): ETA = 0.00059318 m, counter = 12970 / 12975 , time = 14.295 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', 'D4', '2A3')  
get_cls(1070): looping through inv_lst: (8, '4A1', [e1-e2, e4-e5, e6-e7, e0-e1-e2-e3]) 
get_part_roots(875): r_lst      = 63 [e1-e2, e2-e3, e1-e3, e3-e4, e2-e4, e1-e4, e4-e5, e3-e5, e2-e5, e1-e5, e5-e6, e4-e6, e3-e6, e2-e6, e1-e6, e6-e7, e5-e7, e4-e7, e3-e7, e2-e7, e1-e7, e0-e1-e2-e3, e0-e1-e2-e4, e0-e1-e3-e4, e0-e2-e3-e4, e0-e1-e2-e5, e0-e1-e3-e5, e0-e2-e3-e5, e0-e1-e4-e5, e0-e2-e4-e5, e0-e3-e4-e5, e0-e1-e2-e6, e0-e1-e3-e6, e0-e2-e3-e6, e0-e1-e4-e6, e0-e2-e4-e6, e0-e3-e4-e6, e0-e1-e5-e6, e0-e2-e5-e6, e0-e3-e5-e6, e0-e4-e5-e6, e0-e1-e2-e7, e0-e1-e3-e7, e0-e2-e3-e7, e0-e1-e4-e7, e0-e2-e4-e7, e0-e3-e4-e7, e0-e1-e5-e7, e0-e2-e5-e7, e0-e3-e5-e7, e0-e4-e5-e7, e0-e1-e6-e7, e0-e2-e6-e7, e0-e3-e6-e7, e0-e4-e6-e7, e0-e5-e6-e7, 2e0-e1-e2-e3-e4-e5-e6, 2e0-e1-e2-e3-e4-e5-e7, 2e0-e1-e2-e3-e4-e6-e7, 2e0-e1-e2-e3-e5-e6-e7, 2e0-e1-e2-e4-e5-e6-e7, 2e0-e1-e3-e4-e5-e6-e7, 2e0-e2-e3-e4-e5-e6-e7] 
get_part_roots(876): s_lst      = 3 [e0-e3-e4-e5, e0-e3-e6-e7, 2e0-e1-e2-e4-e5-e6-e7] 
get_part_roots(877): tq1_lst    = 56 [e2-e3, e1-e3, e3-e4, e2-e4, e1-e4, e3-e5, e2-e5, e1-e5, e5-e6, e4-e6, e3-e6, e2-e6, e1-e6, e5-e7, e4-e7, e3-e7, e2-e7, e1-e7, e0-e1-e2-e4, e0-e1-e3-e4, e0-e2-e3-e4, e0-e1-e2-e5, e0-e1-e3-e5, e0-e2-e3-e5, e0-e1-e4-e5, e0-e2-e4-e5, e0-e1-e2-e6, e0-e1-e3-e6, e0-e2-e3-e6, e0-e1-e4-e6, e0-e2-e4-e6, e0-e3-e4-e6, e0-e1-e5-e6, e0-e2-e5-e6, e0-e3-e5-e6, e0-e4-e5-e6, e0-e1-e2-e7, e0-e1-e3-e7, e0-e2-e3-e7, e0-e1-e4-e7, e0-e2-e4-e7, e0-e3-e4-e7, e0-e1-e5-e7, e0-e2-e5-e7, e0-e3-e5-e7, e0-e4-e5-e7, e0-e1-e6-e7, e0-e2-e6-e7, e0-e4-e6-e7, e0-e5-e6-e7, 2e0-e1-e2-e3-e4-e5-e6, 2e0-e1-e2-e3-e4-e5-e7, 2e0-e1-e2-e3-e4-e6-e7, 2e0-e1-e2-e3-e5-e6-e7, 2e0-e1-e3-e4-e5-e6-e7, 2e0-e2-e3-e4-e5-e6-e7] 
get_part_roots(878): tq_lst     = 48 [e3-e4, e2-e4, e1-e4, e3-e5, e2-e5, e1-e5, e5-e6, e4-e6, e3-e6, e2-e6, e1-e6, e5-e7, e4-e7, e3-e7, e2-e7, e1-e7, e0-e1-e2-e4, e0-e1-e3-e4, e0-e2-e3-e4, e0-e1-e2-e5, e0-e1-e3-e5, e0-e2-e3-e5, e0-e1-e2-e6, e0-e1-e3-e6, e0-e2-e3-e6, e0-e1-e4-e6, e0-e2-e4-e6, e0-e3-e4-e6, e0-e1-e5-e6, e0-e2-e5-e6, e0-e3-e5-e6, e0-e4-e5-e6, e0-e1-e2-e7, e0-e1-e3-e7, e0-e2-e3-e7, e0-e1-e4-e7, e0-e2-e4-e7, e0-e3-e4-e7, e0-e1-e5-e7, e0-e2-e5-e7, e0-e3-e5-e7, e0-e4-e5-e7, e0-e4-e6-e7, e0-e5-e6-e7, 2e0-e1-e2-e3-e4-e5-e6, 2e0-e1-e2-e3-e4-e5-e7, 2e0-e1-e2-e3-e4-e6-e7, 2e0-e1-e2-e3-e5-e6-e7] 
get_part_roots(879): q_lst      = 24 [e3-e4, e2-e4, e1-e4, e3-e5, e2-e5, e1-e5, e5-e6, e4-e6, e3-e6, e2-e6, e1-e6, e3-e7, e2-e7, e1-e7, e0-e1-e4-e6, e0-e2-e4-e6, e0-e3-e4-e6, e0-e1-e5-e6, e0-e2-e5-e6, e0-e3-e5-e6, e0-e4-e5-e6, e0-e4-e5-e7, e0-e4-e6-e7, e0-e5-e6-e7] 
get_part_roots(880):        M --> 24 [e0-e1-e2-e5, e0-e2-e3-e5, e0-e1-e3-e5, e0-e1-e2-e4, e0-e2-e3-e4, e0-e1-e3-e4, e4-e7, e5-e7, e0-e1-e2-e7, e0-e2-e3-e7, e0-e1-e3-e7, e0-e1-e2-e6, e0-e2-e3-e6, e0-e1-e3-e6, e0-e2-e5-e7, e0-e1-e5-e7, e0-e3-e5-e7, e0-e2-e4-e7, e0-e1-e4-e7, e0-e3-e4-e7, 2e0-e1-e2-e3-e4-e5-e7, 2e0-e1-e2-e3-e4-e5-e6, 2e0-e1-e2-e3-e5-e6-e7, 2e0-e1-e2-e3-e4-e6-e7] 
get_part_roots(881): inv.Md_lst = 4A1 [e1-e2, e4-e5, e6-e7, e0-e1-e2-e3] , rank = 8 
get_cls(1086): looping through inv_lst continued after recursive call: (8, '4A1', [e1-e2, e4-e5, e6-e7, e0-e1-e2-e3]) 
get_cls(1094): bas1_lst = 1 [('4A1', 'A0')] 
get_cls(1095): s_lst    = 3 [e0-e3-e4-e5, e0-e3-e6-e7, 2e0-e1-e2-e4-e5-e6-e7] 
get_cls(1096): q_lst    = 24 [e3-e4, e2-e4, e1-e4, e3-e5, e2-e5, e1-e5, e5-e6, e4-e6, e3-e6, e2-e6, e1-e6, e3-e7, e2-e7, e1-e7, e0-e1-e4-e6, e0-e2-e4-e6, e0-e3-e4-e6, e0-e1-e5-e6, e0-e2-e5-e6, e0-e3-e5-e6, e0-e4-e5-e6, e0-e4-e5-e7, e0-e4-e6-e7, e0-e5-e6-e7] 
update(86): ETA = 0.00024447 m, counter = 0 / 47 , time = 5.2015e-6 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '4A1', 'A0')  
update(86): ETA = 0.033578 m, counter = 1 / 47 , time = 0.00073515 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '4A1', '{A1}')  
update(86): ETA = 0.20957 m, counter = 2 / 47 , time = 0.0053922 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '4A1', '2{A1}')  
update(86): ETA = 14.236 m, counter = 3 / 47 , time = 0.32894 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '4A1', '{A2}')  
update(86): ETA = 0.59131 m, counter = 4 / 47 , time = 0.34269 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '4A1', '3{A1}')  
update(86): ETA = 111.68 m, counter = 5 / 47 , time = 3.0016 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '4A1', '3{A1}')  
update(86): ETA = 0.0081564 m, counter = 6 / 47 , time = 3.0018 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '4A1', '{A1}+{A2}')  
update(86): ETA = 9.5068 m, counter = 7 / 47 , time = 3.2395 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '4A1', '{A3}')  
update(86): ETA = 0.62294 m, counter = 8 / 47 , time = 3.2555 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '4A1', '2{A1}+{A2}')  
update(86): ETA = 0.011687 m, counter = 9 / 47 , time = 3.2558 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '4A1', '2{A2}')  
update(86): ETA = 0.0089713 m, counter = 10 / 47 , time = 3.2560 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '4A1', '4{A1}')  
update(86): ETA = 0.0087180 m, counter = 11 / 47 , time = 3.2563 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '4A1', '4{A1}')  
update(86): ETA = 0.010987 m, counter = 12 / 47 , time = 3.2566 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '4A1', '{A1}+{A3}')  
update(86): ETA = 0.011159 m, counter = 13 / 47 , time = 3.2569 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '4A1', '{A1}+{A3}')  
update(86): ETA = 0.012215 m, counter = 14 / 47 , time = 3.2573 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '4A1', '{A4}')  
update(86): ETA = 0.012053 m, counter = 15 / 47 , time = 3.2576 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '4A1', '{D4}')  
update(86): ETA = 0.012515 m, counter = 16 / 47 , time = 3.2581 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '4A1', '2{A1}+{A3}')  
update(86): ETA = 0.012127 m, counter = 17 / 47 , time = 3.2585 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '4A1', '2{A1}+{A3}')  
update(86): ETA = 0.010302 m, counter = 18 / 47 , time = 3.2588 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '4A1', '3{A1}+{A2}')  
update(86): ETA = 0.0091598 m, counter = 19 / 47 , time = 3.2591 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '4A1', '5{A1}')  
update(86): ETA = 0.010587 m, counter = 20 / 47 , time = 3.2595 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '4A1', '{A1}+2{A2}')  
update(86): ETA = 0.011972 m, counter = 21 / 47 , time = 3.2600 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '4A1', '{A1}+{A4}')  
update(86): ETA = 0.011596 m, counter = 22 / 47 , time = 3.2605 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '4A1', '{A1}+{D4}')  
update(86): ETA = 0.010509 m, counter = 23 / 47 , time = 3.2609 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '4A1', '{A2}+{A3}')  
update(86): ETA = 0.012409 m, counter = 24 / 47 , time = 3.2614 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '4A1', '{A5}')  
update(86): ETA = 0.011657 m, counter = 25 / 47 , time = 3.2620 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '4A1', '{A5}')  
update(86): ETA = 0.011059 m, counter = 26 / 47 , time = 3.2625 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '4A1', '{D5}')  
update(86): ETA = 0.011219 m, counter = 27 / 47 , time = 3.2631 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '4A1', '2{A1}+{D4}')  
update(86): ETA = 0.011042 m, counter = 28 / 47 , time = 3.2636 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '4A1', '2{A3}')  
update(86): ETA = 0.0090855 m, counter = 29 / 47 , time = 3.2641 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '4A1', '3{A1}+{A3}')  
update(86): ETA = 0.0089052 m, counter = 30 / 47 , time = 3.2647 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '4A1', '3{A2}')  
update(86): ETA = 0.0068288 m, counter = 31 / 47 , time = 3.2651 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '4A1', '6{A1}')  
update(86): ETA = 0.0081958 m, counter = 32 / 47 , time = 3.2656 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '4A1', '{A1}+{A2}+{A3}')  
update(86): ETA = 0.0087775 m, counter = 33 / 47 , time = 3.2663 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '4A1', '{A1}+{A5}')  
update(86): ETA = 0.0081510 m, counter = 34 / 47 , time = 3.2669 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '4A1', '{A1}+{A5}')  
update(86): ETA = 0.0074928 m, counter = 35 / 47 , time = 3.2675 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '4A1', '{A1}+{D5}')  
update(86): ETA = 0.0064964 m, counter = 36 / 47 , time = 3.2681 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '4A1', '{A2}+{A4}')  
update(86): ETA = 0.0070368 m, counter = 37 / 47 , time = 3.2688 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '4A1', '{A6}')  
update(86): ETA = 0.0064446 m, counter = 38 / 47 , time = 3.2695 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '4A1', '{D6}')  
update(86): ETA = 0.0056872 m, counter = 39 / 47 , time = 3.2702 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '4A1', '{E6}')  
update(86): ETA = 0.0046710 m, counter = 40 / 47 , time = 3.2709 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '4A1', '3{A1}+{D4}')  
update(86): ETA = 0.0032088 m, counter = 41 / 47 , time = 3.2714 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '4A1', '7{A1}')  
update(86): ETA = 0.0034368 m, counter = 42 / 47 , time = 3.2721 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '4A1', '{A1}+2{A3}')  
update(86): ETA = 0.0032615 m, counter = 43 / 47 , time = 3.2729 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '4A1', '{A1}+{D6}')  
update(86): ETA = 0.0023270 m, counter = 44 / 47 , time = 3.2737 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '4A1', '{A2}+{A5}')  
update(86): ETA = 0.0018127 m, counter = 45 / 47 , time = 3.2746 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '4A1', '{A7}')  
update(86): ETA = 0.00091032 m, counter = 46 / 47 , time = 3.2755 m, info = get_cls seeking bases in s_lst and q_lst:  (8, '4A1', '{E7}')  
get_cls(1130): Setting Dynkin types of 171 items...please wait... 
update(86): ETA = 0.023093 m, counter = 0 / 171 , time = 0.0022958 m, info = 8 4A1 A0  
update(86): ETA = 0.62794 m, counter = 17 / 171 , time = 0.071613 m, info = 8 4A1 2A1  
update(86): ETA = 0.60899 m, counter = 34 / 171 , time = 0.14718 m, info = 8 4A1 2A1+A2  
update(86): ETA = 0.67172 m, counter = 51 / 171 , time = 0.24234 m, info = 8 4A1 2A1+A2  
update(86): ETA = 0.57486 m, counter = 68 / 171 , time = 0.33722 m, info = 8 4A1 A4  
update(86): ETA = 0.48207 m, counter = 85 / 171 , time = 0.43251 m, info = 8 4A1 4A1  
update(86): ETA = 0.39095 m, counter = 102 / 171 , time = 0.52884 m, info = 8 4A1 2A2  
update(86): ETA = 0.29184 m, counter = 119 / 171 , time = 0.62425 m, info = 8 4A1 2A2  
update(86): ETA = 0.21958 m, counter = 136 / 171 , time = 0.73090 m, info = 8 4A1 3A2  
update(86): ETA = 0.12126 m, counter = 153 / 171 , time = 0.84542 m, info = 8 4A1 3A2  
update(86): ETA = 0.0066422 m, counter = 170 / 171 , time = 0.95834 m, info = 8 4A1 A2+A4  
get_cls(1145): inv      = 4A1 , rank = 8 
get_cls(1146): bas1_lst = 1 [('A0', 1)] 
get_cls(1147): bas2_lst = 8 [('2A1', 3), ('3A1', 1), ('A0', 1), ('A1', 3)] 
get_cls(1148): bas3_lst = 163 [('2A1', 12), ('2A1+A2', 24), ('2A2', 40), ('2A3', 4), ('3A2', 8), ('4A1', 6), ('A0', 1), ('A2', 12), ('A2+A4', 24), ('A4', 24), ('A6', 8)] 
update(86): ETA = 1.3552e-6 m, counter = 0 / 1304 , time = 1.3510e-7 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', 'A0', 'A0')  
get_cls(1168): 	 appended:  (8, '4A1', 'A0') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A0', 'A0') 
get_cls(1168): 	 appended:  (8, '4A1', '2A1') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A0', '2A1') 
get_cls(1168): 	 appended:  (8, '4A1', '[A2]') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A0', 'A2') 
get_cls(1168): 	 appended:  (8, '4A1', '2A1+[A2]') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A0', '2A1+A2') 
get_cls(1168): 	 appended:  (8, '4A1', '2[A2]') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A0', '2A2') 
get_cls(1168): 	 appended:  (8, '4A1', '2A2') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A0', '2A2') 
get_cls(1168): 	 appended:  (8, '4A1', '4A1') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A0', '4A1') 
get_cls(1168): 	 appended:  (8, '4A1', '[A4]') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A0', 'A4') 
get_cls(1168): 	 appended:  (8, '4A1', '2A3') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A0', '2A3') 
get_cls(1168): 	 appended:  (8, '4A1', '3[A2]') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A0', '3A2') 
update(86): ETA = 12.538 m, counter = 130 / 1304 , time = 1.3884 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', 'A0', '3A2')  
get_cls(1168): 	 appended:  (8, '4A1', '[A2]+[A4]') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A0', 'A2+A4') 
get_cls(1168): 	 appended:  (8, '4A1', '[A6]') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A0', 'A6') 
get_cls(1168): 	 appended:  (8, '4A1', '{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A1', 'A0') 
get_cls(1168): 	 appended:  (8, '4A1', '2A1+{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A1', '2A1') 
get_cls(1168): 	 appended:  (8, '4A1', '[A3]') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A1', '2A1') 
get_cls(1168): 	 appended:  (8, '4A1', '{A1}+[A2]') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A1', 'A2') 
get_cls(1168): 	 appended:  (8, '4A1', '[A2]+[A3]') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A1', '2A1+A2') 
get_cls(1168): 	 appended:  (8, '4A1', '{A1}+2[A2]') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A1', '2A2') 
get_cls(1168): 	 appended:  (8, '4A1', '[A5]') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A1', '2A2') 
get_cls(1168): 	 appended:  (8, '4A1', '4A1+{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A1', '4A1') 
get_cls(1168): 	 appended:  (8, '4A1', '{A1}+[A4]') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A1', 'A4') 
update(86): ETA = 5.5195 m, counter = 260 / 1304 , time = 2.0757 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', 'A1', 'A4')  
update(86): ETA = 2.3679 m, counter = 390 / 1304 , time = 2.4125 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', 'A1', '2A2')  
update(86): ETA = 1.5970 m, counter = 520 / 1304 , time = 2.6773 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', 'A1', '2A1+A2')  
update(86): ETA = 0.80749 m, counter = 650 / 1304 , time = 2.8378 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', 'A1', 'A6')  
get_cls(1168): 	 appended:  (8, '4A1', '2{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A0', '2A1', 'A0') 
get_cls(1168): 	 appended:  (8, '4A1', '{A1}+[A3]') , ( bas1.type, bas2.type, bas3.type ) = ('A0', '2A1', '2A1') 
get_cls(1168): 	 appended:  (8, '4A1', '2{A1}+[A2]') , ( bas1.type, bas2.type, bas3.type ) = ('A0', '2A1', 'A2') 
update(86): ETA = 0.39510 m, counter = 780 / 1304 , time = 2.9358 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', '2A1', '3A2')  
update(86): ETA = 0.23785 m, counter = 910 / 1304 , time = 3.0143 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', '2A1', 'A4')  
update(86): ETA = 0.12081 m, counter = 1040 / 1304 , time = 3.0738 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', '2A1', '2A2')  
get_cls(1168): 	 appended:  (8, '4A1', '3{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A0', '3A1', 'A0') 
update(86): ETA = 0.016448 m, counter = 1170 / 1304 , time = 3.0898 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', '3A1', '2A1+A2')  
update(86): ETA = 0.00011557 m, counter = 1300 / 1304 , time = 3.0935 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', '3A1', 'A6')  
get_cls(1070): looping through inv_lst: (8, 'D4', [e2-e3, e3-e4, e4-e5, e0-e1-e2-e3]) 
get_part_roots(875): r_lst      = 63 [e1-e2, e2-e3, e1-e3, e3-e4, e2-e4, e1-e4, e4-e5, e3-e5, e2-e5, e1-e5, e5-e6, e4-e6, e3-e6, e2-e6, e1-e6, e6-e7, e5-e7, e4-e7, e3-e7, e2-e7, e1-e7, e0-e1-e2-e3, e0-e1-e2-e4, e0-e1-e3-e4, e0-e2-e3-e4, e0-e1-e2-e5, e0-e1-e3-e5, e0-e2-e3-e5, e0-e1-e4-e5, e0-e2-e4-e5, e0-e3-e4-e5, e0-e1-e2-e6, e0-e1-e3-e6, e0-e2-e3-e6, e0-e1-e4-e6, e0-e2-e4-e6, e0-e3-e4-e6, e0-e1-e5-e6, e0-e2-e5-e6, e0-e3-e5-e6, e0-e4-e5-e6, e0-e1-e2-e7, e0-e1-e3-e7, e0-e2-e3-e7, e0-e1-e4-e7, e0-e2-e4-e7, e0-e3-e4-e7, e0-e1-e5-e7, e0-e2-e5-e7, e0-e3-e5-e7, e0-e4-e5-e7, e0-e1-e6-e7, e0-e2-e6-e7, e0-e3-e6-e7, e0-e4-e6-e7, e0-e5-e6-e7, 2e0-e1-e2-e3-e4-e5-e6, 2e0-e1-e2-e3-e4-e5-e7, 2e0-e1-e2-e3-e4-e6-e7, 2e0-e1-e2-e3-e5-e6-e7, 2e0-e1-e2-e4-e5-e6-e7, 2e0-e1-e3-e4-e5-e6-e7, 2e0-e2-e3-e4-e5-e6-e7] 
get_part_roots(876): s_lst      = 3 [e6-e7, e0-e1-e6-e7, 2e0-e2-e3-e4-e5-e6-e7] 
get_part_roots(877): tq1_lst    = 48 [e1-e2, e1-e3, e1-e4, e1-e5, e5-e6, e4-e6, e3-e6, e2-e6, e1-e6, e5-e7, e4-e7, e3-e7, e2-e7, e1-e7, e0-e2-e3-e4, e0-e2-e3-e5, e0-e2-e4-e5, e0-e3-e4-e5, e0-e1-e2-e6, e0-e1-e3-e6, e0-e2-e3-e6, e0-e1-e4-e6, e0-e2-e4-e6, e0-e3-e4-e6, e0-e1-e5-e6, e0-e2-e5-e6, e0-e3-e5-e6, e0-e4-e5-e6, e0-e1-e2-e7, e0-e1-e3-e7, e0-e2-e3-e7, e0-e1-e4-e7, e0-e2-e4-e7, e0-e3-e4-e7, e0-e1-e5-e7, e0-e2-e5-e7, e0-e3-e5-e7, e0-e4-e5-e7, e0-e2-e6-e7, e0-e3-e6-e7, e0-e4-e6-e7, e0-e5-e6-e7, 2e0-e1-e2-e3-e4-e5-e6, 2e0-e1-e2-e3-e4-e5-e7, 2e0-e1-e2-e3-e4-e6-e7, 2e0-e1-e2-e3-e5-e6-e7, 2e0-e1-e2-e4-e5-e6-e7, 2e0-e1-e3-e4-e5-e6-e7] 
get_part_roots(878): tq_lst     = 48 [e1-e2, e1-e3, e1-e4, e1-e5, e5-e6, e4-e6, e3-e6, e2-e6, e1-e6, e5-e7, e4-e7, e3-e7, e2-e7, e1-e7, e0-e2-e3-e4, e0-e2-e3-e5, e0-e2-e4-e5, e0-e3-e4-e5, e0-e1-e2-e6, e0-e1-e3-e6, e0-e2-e3-e6, e0-e1-e4-e6, e0-e2-e4-e6, e0-e3-e4-e6, e0-e1-e5-e6, e0-e2-e5-e6, e0-e3-e5-e6, e0-e4-e5-e6, e0-e1-e2-e7, e0-e1-e3-e7, e0-e2-e3-e7, e0-e1-e4-e7, e0-e2-e4-e7, e0-e3-e4-e7, e0-e1-e5-e7, e0-e2-e5-e7, e0-e3-e5-e7, e0-e4-e5-e7, e0-e2-e6-e7, e0-e3-e6-e7, e0-e4-e6-e7, e0-e5-e6-e7, 2e0-e1-e2-e3-e4-e5-e6, 2e0-e1-e2-e3-e4-e5-e7, 2e0-e1-e2-e3-e4-e6-e7, 2e0-e1-e2-e3-e5-e6-e7, 2e0-e1-e2-e4-e5-e6-e7, 2e0-e1-e3-e4-e5-e6-e7] 
get_part_roots(879): q_lst      = 24 [e1-e2, e1-e3, e1-e4, e1-e5, e5-e6, e4-e6, e3-e6, e2-e6, e1-e6, e5-e7, e4-e7, e3-e7, e2-e7, e1-e7, e0-e2-e3-e6, e0-e2-e4-e6, e0-e3-e4-e6, e0-e2-e3-e7, e0-e2-e4-e7, e0-e3-e4-e7, e0-e2-e6-e7, e0-e3-e6-e7, e0-e4-e6-e7, e0-e5-e6-e7] 
get_part_roots(880):        M --> 24 [e0-e3-e4-e5, e0-e2-e4-e5, e0-e2-e3-e5, e0-e2-e3-e4, e0-e1-e5-e6, e0-e1-e4-e6, e0-e1-e3-e6, e0-e1-e2-e6, 2e0-e1-e2-e3-e4-e5-e6, e0-e1-e5-e7, e0-e1-e4-e7, e0-e1-e3-e7, e0-e1-e2-e7, 2e0-e1-e2-e3-e4-e5-e7, e0-e4-e5-e6, e0-e3-e5-e6, e0-e2-e5-e6, e0-e4-e5-e7, e0-e3-e5-e7, e0-e2-e5-e7, 2e0-e1-e3-e4-e5-e6-e7, 2e0-e1-e2-e4-e5-e6-e7, 2e0-e1-e2-e3-e5-e6-e7, 2e0-e1-e2-e3-e4-e6-e7] 
get_part_roots(881): inv.Md_lst = D4 [e2-e3, e3-e4, e4-e5, e0-e1-e2-e3] , rank = 8 
import_cls(1015): importing:  (8, 'D4', 'A0') [e2-e3, e3-e4, e4-e5, e0-e1-e2-e3] == [e2-e3, e3-e4, e4-e5, e0-e1-e2-e3] 
import_cls(1015): importing:  (8, 'D4', '2A1') [e2-e3, e3-e4, e4-e5, e0-e1-e2-e3] == [e2-e3, e3-e4, e4-e5, e0-e1-e2-e3] 
import_cls(1015): importing:  (8, 'D4', '2A2') [e2-e3, e3-e4, e4-e5, e0-e1-e2-e3] == [e2-e3, e3-e4, e4-e5, e0-e1-e2-e3] 
get_cls(1086): looping through inv_lst continued after recursive call: (8, 'D4', [e2-e3, e3-e4, e4-e5, e0-e1-e2-e3]) 
get_cls(1094): bas1_lst = 3 [('D4', 'A0'), ('D4', '2A1'), ('D4', '2A2')] 
get_cls(1095): s_lst    = 3 [e6-e7, e0-e1-e6-e7, 2e0-e2-e3-e4-e5-e6-e7] 
get_cls(1096): q_lst    = 12 [e5-e7, e4-e7, e3-e7, e2-e7, e1-e7, e0-e2-e3-e7, e0-e2-e4-e7, e0-e3-e4-e7, e0-e2-e6-e7, e0-e3-e6-e7, e0-e4-e6-e7, e0-e5-e6-e7] 
update(86): ETA = 0.00026707 m, counter = 0 / 47 , time = 5.6823e-6 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'D4', 'A0')  
update(86): ETA = 0.033268 m, counter = 1 / 47 , time = 0.00072890 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'D4', '{A1}')  
update(86): ETA = 0.090704 m, counter = 2 / 47 , time = 0.0027445 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'D4', '2{A1}')  
update(86): ETA = 0.34390 m, counter = 3 / 47 , time = 0.010560 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'D4', '{A2}')  
update(86): ETA = 0.047754 m, counter = 4 / 47 , time = 0.011671 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'D4', '3{A1}')  
update(86): ETA = 0.30475 m, counter = 5 / 47 , time = 0.018927 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'D4', '3{A1}')  
update(86): ETA = 0.0080606 m, counter = 6 / 47 , time = 0.019124 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'D4', '{A1}+{A2}')  
update(86): ETA = 0.047350 m, counter = 7 / 47 , time = 0.020307 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'D4', '{A3}')  
update(86): ETA = 0.047001 m, counter = 8 / 47 , time = 0.021512 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'D4', '2{A1}+{A2}')  
update(86): ETA = 0.011620 m, counter = 9 / 47 , time = 0.021818 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'D4', '2{A2}')  
update(86): ETA = 0.0089613 m, counter = 10 / 47 , time = 0.022060 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'D4', '4{A1}')  
update(86): ETA = 0.0086881 m, counter = 11 / 47 , time = 0.022302 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'D4', '4{A1}')  
update(86): ETA = 0.010947 m, counter = 12 / 47 , time = 0.022615 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'D4', '{A1}+{A3}')  
update(86): ETA = 0.010825 m, counter = 13 / 47 , time = 0.022933 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'D4', '{A1}+{A3}')  
update(86): ETA = 0.012176 m, counter = 14 / 47 , time = 0.023302 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'D4', '{A4}')  
update(86): ETA = 0.011996 m, counter = 15 / 47 , time = 0.023677 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'D4', '{D4}')  
update(86): ETA = 0.012805 m, counter = 16 / 47 , time = 0.024090 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'D4', '2{A1}+{A3}')  
update(86): ETA = 0.012079 m, counter = 17 / 47 , time = 0.024492 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'D4', '2{A1}+{A3}')  
update(86): ETA = 0.010270 m, counter = 18 / 47 , time = 0.024847 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'D4', '3{A1}+{A2}')  
update(86): ETA = 0.0091294 m, counter = 19 / 47 , time = 0.025173 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'D4', '5{A1}')  
update(86): ETA = 0.010540 m, counter = 20 / 47 , time = 0.025563 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'D4', '{A1}+2{A2}')  
update(86): ETA = 0.011896 m, counter = 21 / 47 , time = 0.026021 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'D4', '{A1}+{A4}')  
update(86): ETA = 0.011491 m, counter = 22 / 47 , time = 0.026480 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'D4', '{A1}+{D4}')  
update(86): ETA = 0.010413 m, counter = 23 / 47 , time = 0.026914 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'D4', '{A2}+{A3}')  
update(86): ETA = 0.012045 m, counter = 24 / 47 , time = 0.027438 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'D4', '{A5}')  
update(86): ETA = 0.011567 m, counter = 25 / 47 , time = 0.027964 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'D4', '{A5}')  
update(86): ETA = 0.011205 m, counter = 26 / 47 , time = 0.028497 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'D4', '{D5}')  
update(86): ETA = 0.011155 m, counter = 27 / 47 , time = 0.029055 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'D4', '2{A1}+{D4}')  
update(86): ETA = 0.010941 m, counter = 28 / 47 , time = 0.029631 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'D4', '2{A3}')  
update(86): ETA = 0.0089916 m, counter = 29 / 47 , time = 0.030130 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'D4', '3{A1}+{A3}')  
update(86): ETA = 0.0088595 m, counter = 30 / 47 , time = 0.030651 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'D4', '3{A2}')  
update(86): ETA = 0.0067814 m, counter = 31 / 47 , time = 0.031075 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'D4', '6{A1}')  
update(86): ETA = 0.0079902 m, counter = 32 / 47 , time = 0.031608 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'D4', '{A1}+{A2}+{A3}')  
update(86): ETA = 0.0087218 m, counter = 33 / 47 , time = 0.032231 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'D4', '{A1}+{A5}')  
update(86): ETA = 0.0082140 m, counter = 34 / 47 , time = 0.032863 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'D4', '{A1}+{A5}')  
update(86): ETA = 0.0074378 m, counter = 35 / 47 , time = 0.033483 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'D4', '{A1}+{D5}')  
update(86): ETA = 0.0064797 m, counter = 36 / 47 , time = 0.034072 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'D4', '{A2}+{A4}')  
update(86): ETA = 0.0070093 m, counter = 37 / 47 , time = 0.034773 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'D4', '{A6}')  
update(86): ETA = 0.0063179 m, counter = 38 / 47 , time = 0.035475 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'D4', '{D6}')  
update(86): ETA = 0.0056657 m, counter = 39 / 47 , time = 0.036183 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'D4', '{E6}')  
update(86): ETA = 0.0047436 m, counter = 40 / 47 , time = 0.036860 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'D4', '3{A1}+{D4}')  
update(86): ETA = 0.0032056 m, counter = 41 / 47 , time = 0.037395 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'D4', '7{A1}')  
update(86): ETA = 0.0034262 m, counter = 42 / 47 , time = 0.038080 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'D4', '{A1}+2{A3}')  
update(86): ETA = 0.0032551 m, counter = 43 / 47 , time = 0.038894 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'D4', '{A1}+{D6}')  
update(86): ETA = 0.0022987 m, counter = 44 / 47 , time = 0.039660 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'D4', '{A2}+{A5}')  
update(86): ETA = 0.0018024 m, counter = 45 / 47 , time = 0.040561 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'D4', '{A7}')  
update(86): ETA = 0.00091777 m, counter = 46 / 47 , time = 0.041479 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'D4', '{E7}')  
get_cls(1130): Setting Dynkin types of 21 items...please wait... 
update(86): ETA = 0.024321 m, counter = 0 / 21 , time = 0.0023163 m, info = 8 D4 A0  
update(86): ETA = 0.066992 m, counter = 2 / 21 , time = 0.0093681 m, info = 8 D4 A1  
update(86): ETA = 0.066963 m, counter = 4 / 21 , time = 0.017246 m, info = 8 D4 2A1  
update(86): ETA = 0.065372 m, counter = 6 / 21 , time = 0.025962 m, info = 8 D4 2A1  
update(86): ETA = 0.048559 m, counter = 8 / 21 , time = 0.033433 m, info = 8 D4 A0  
update(86): ETA = 0.047907 m, counter = 10 / 21 , time = 0.042143 m, info = 8 D4 2A1  
update(86): ETA = 0.039185 m, counter = 12 / 21 , time = 0.050851 m, info = 8 D4 2A1  
update(86): ETA = 0.030632 m, counter = 14 / 21 , time = 0.059603 m, info = 8 D4 2A1  
update(86): ETA = 0.021832 m, counter = 16 / 21 , time = 0.068336 m, info = 8 D4 2A1  
update(86): ETA = 0.013089 m, counter = 18 / 21 , time = 0.077062 m, info = 8 D4 2A1  
update(86): ETA = 0.0043663 m, counter = 20 / 21 , time = 0.085795 m, info = 8 D4 2A1  
get_cls(1145): inv      = D4 , rank = 8 
get_cls(1146): bas1_lst = 3 [('2A1', 1), ('2A2', 1), ('A0', 1)] 
get_cls(1147): bas2_lst = 8 [('2A1', 3), ('3A1', 1), ('A0', 1), ('A1', 3)] 
get_cls(1148): bas3_lst = 13 [('2A1', 12), ('A0', 1)] 
update(86): ETA = 1.5197e-6 m, counter = 0 / 312 , time = 1.5100e-7 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', 'A0', 'A0')  
get_cls(1168): 	 appended:  (8, 'D4', 'A0') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A0', 'A0') 
get_cls(1168): 	 appended:  (8, 'D4', '2A1') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A0', '2A1') 
get_cls(1168): 	 appended:  (8, 'D4', '{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A1', 'A0') 
get_cls(1168): 	 appended:  (8, 'D4', '2A1+{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A1', '2A1') 
update(86): ETA = 2.9234 m, counter = 31 / 312 , time = 0.32251 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', 'A1', '2A1')  
get_cls(1168): 	 appended:  (8, 'D4', '2{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A0', '2A1', 'A0') 
update(86): ETA = 1.1067 m, counter = 62 / 312 , time = 0.45974 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', '2A1', '2A1')  
get_cls(1168): 	 appended:  (8, 'D4', '3{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A0', '3A1', 'A0') 
update(86): ETA = 0.32435 m, counter = 93 / 312 , time = 0.50565 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', '3A1', '2A1')  
get_cls(1168): 	 appended:  (8, 'D4', '4A1') , ( bas1.type, bas2.type, bas3.type ) = ('2A1', 'A0', '2A1') 
get_cls(1168): 	 appended:  (8, 'D4', '2A2') , ( bas1.type, bas2.type, bas3.type ) = ('2A1', 'A0', '2A1') 
get_cls(1168): 	 appended:  (8, 'D4', '[A3]') , ( bas1.type, bas2.type, bas3.type ) = ('2A1', 'A1', 'A0') 
update(86): ETA = 0.60076 m, counter = 124 / 312 , time = 0.60472 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('2A1', 'A1', '2A1')  
get_cls(1168): 	 appended:  (8, 'D4', '4A1+{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('2A1', 'A1', '2A1') 
update(86): ETA = 0.21669 m, counter = 155 / 312 , time = 0.64750 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('2A1', 'A1', '2A1')  
get_cls(1168): 	 appended:  (8, 'D4', '{A1}+[A3]') , ( bas1.type, bas2.type, bas3.type ) = ('2A1', '2A1', 'A0') 
update(86): ETA = 0.042438 m, counter = 186 / 312 , time = 0.65794 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('2A1', '2A1', '2A1')  
get_cls(1168): 	 appended:  (8, 'D4', '2A3') , ( bas1.type, bas2.type, bas3.type ) = ('2A2', 'A0', '2A1') 
update(86): ETA = 0.10859 m, counter = 217 / 312 , time = 0.69338 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('2A2', 'A0', '2A1')  
get_cls(1168): 	 appended:  (8, 'D4', '[A5]') , ( bas1.type, bas2.type, bas3.type ) = ('2A2', 'A1', 'A0') 
update(86): ETA = 0.022308 m, counter = 248 / 312 , time = 0.70418 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('2A2', 'A1', '2A1')  
update(86): ETA = 0.00054679 m, counter = 279 / 312 , time = 0.70470 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('2A2', '2A1', '2A1')  
update(86): ETA = 5.9528e-6 m, counter = 310 / 312 , time = 0.70479 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('2A2', '3A1', '2A1')  
get_cls(1070): looping through inv_lst: (8, 'A1+D4', [e2-e3, e3-e4, e4-e5, e6-e7, e0-e1-e2-e3]) 
get_part_roots(875): r_lst      = 63 [e1-e2, e2-e3, e1-e3, e3-e4, e2-e4, e1-e4, e4-e5, e3-e5, e2-e5, e1-e5, e5-e6, e4-e6, e3-e6, e2-e6, e1-e6, e6-e7, e5-e7, e4-e7, e3-e7, e2-e7, e1-e7, e0-e1-e2-e3, e0-e1-e2-e4, e0-e1-e3-e4, e0-e2-e3-e4, e0-e1-e2-e5, e0-e1-e3-e5, e0-e2-e3-e5, e0-e1-e4-e5, e0-e2-e4-e5, e0-e3-e4-e5, e0-e1-e2-e6, e0-e1-e3-e6, e0-e2-e3-e6, e0-e1-e4-e6, e0-e2-e4-e6, e0-e3-e4-e6, e0-e1-e5-e6, e0-e2-e5-e6, e0-e3-e5-e6, e0-e4-e5-e6, e0-e1-e2-e7, e0-e1-e3-e7, e0-e2-e3-e7, e0-e1-e4-e7, e0-e2-e4-e7, e0-e3-e4-e7, e0-e1-e5-e7, e0-e2-e5-e7, e0-e3-e5-e7, e0-e4-e5-e7, e0-e1-e6-e7, e0-e2-e6-e7, e0-e3-e6-e7, e0-e4-e6-e7, e0-e5-e6-e7, 2e0-e1-e2-e3-e4-e5-e6, 2e0-e1-e2-e3-e4-e5-e7, 2e0-e1-e2-e3-e4-e6-e7, 2e0-e1-e2-e3-e5-e6-e7, 2e0-e1-e2-e4-e5-e6-e7, 2e0-e1-e3-e4-e5-e6-e7, 2e0-e2-e3-e4-e5-e6-e7] 
get_part_roots(876): s_lst      = 2 [e0-e1-e6-e7, 2e0-e2-e3-e4-e5-e6-e7] 
get_part_roots(877): tq1_lst    = 48 [e1-e2, e1-e3, e1-e4, e1-e5, e5-e6, e4-e6, e3-e6, e2-e6, e1-e6, e5-e7, e4-e7, e3-e7, e2-e7, e1-e7, e0-e2-e3-e4, e0-e2-e3-e5, e0-e2-e4-e5, e0-e3-e4-e5, e0-e1-e2-e6, e0-e1-e3-e6, e0-e2-e3-e6, e0-e1-e4-e6, e0-e2-e4-e6, e0-e3-e4-e6, e0-e1-e5-e6, e0-e2-e5-e6, e0-e3-e5-e6, e0-e4-e5-e6, e0-e1-e2-e7, e0-e1-e3-e7, e0-e2-e3-e7, e0-e1-e4-e7, e0-e2-e4-e7, e0-e3-e4-e7, e0-e1-e5-e7, e0-e2-e5-e7, e0-e3-e5-e7, e0-e4-e5-e7, e0-e2-e6-e7, e0-e3-e6-e7, e0-e4-e6-e7, e0-e5-e6-e7, 2e0-e1-e2-e3-e4-e5-e6, 2e0-e1-e2-e3-e4-e5-e7, 2e0-e1-e2-e3-e4-e6-e7, 2e0-e1-e2-e3-e5-e6-e7, 2e0-e1-e2-e4-e5-e6-e7, 2e0-e1-e3-e4-e5-e6-e7] 
get_part_roots(878): tq_lst     = 48 [e1-e2, e1-e3, e1-e4, e1-e5, e5-e6, e4-e6, e3-e6, e2-e6, e1-e6, e5-e7, e4-e7, e3-e7, e2-e7, e1-e7, e0-e2-e3-e4, e0-e2-e3-e5, e0-e2-e4-e5, e0-e3-e4-e5, e0-e1-e2-e6, e0-e1-e3-e6, e0-e2-e3-e6, e0-e1-e4-e6, e0-e2-e4-e6, e0-e3-e4-e6, e0-e1-e5-e6, e0-e2-e5-e6, e0-e3-e5-e6, e0-e4-e5-e6, e0-e1-e2-e7, e0-e1-e3-e7, e0-e2-e3-e7, e0-e1-e4-e7, e0-e2-e4-e7, e0-e3-e4-e7, e0-e1-e5-e7, e0-e2-e5-e7, e0-e3-e5-e7, e0-e4-e5-e7, e0-e2-e6-e7, e0-e3-e6-e7, e0-e4-e6-e7, e0-e5-e6-e7, 2e0-e1-e2-e3-e4-e5-e6, 2e0-e1-e2-e3-e4-e5-e7, 2e0-e1-e2-e3-e4-e6-e7, 2e0-e1-e2-e3-e5-e6-e7, 2e0-e1-e2-e4-e5-e6-e7, 2e0-e1-e3-e4-e5-e6-e7] 
get_part_roots(879): q_lst      = 24 [e1-e2, e1-e3, e1-e4, e1-e5, e5-e6, e4-e6, e3-e6, e2-e6, e1-e6, e5-e7, e4-e7, e3-e7, e2-e7, e1-e7, e0-e2-e3-e6, e0-e2-e4-e6, e0-e3-e4-e6, e0-e2-e5-e6, e0-e3-e5-e6, e0-e4-e5-e6, e0-e2-e6-e7, e0-e3-e6-e7, e0-e4-e6-e7, e0-e5-e6-e7] 
get_part_roots(880):        M --> 24 [e0-e3-e4-e5, e0-e2-e4-e5, e0-e2-e3-e5, e0-e2-e3-e4, e0-e1-e5-e7, e0-e1-e4-e7, e0-e1-e3-e7, e0-e1-e2-e7, 2e0-e1-e2-e3-e4-e5-e7, e0-e1-e5-e6, e0-e1-e4-e6, e0-e1-e3-e6, e0-e1-e2-e6, 2e0-e1-e2-e3-e4-e5-e6, e0-e4-e5-e7, e0-e3-e5-e7, e0-e2-e5-e7, e0-e3-e4-e7, e0-e2-e4-e7, e0-e2-e3-e7, 2e0-e1-e3-e4-e5-e6-e7, 2e0-e1-e2-e4-e5-e6-e7, 2e0-e1-e2-e3-e5-e6-e7, 2e0-e1-e2-e3-e4-e6-e7] 
get_part_roots(881): inv.Md_lst = A1+D4 [e2-e3, e3-e4, e4-e5, e6-e7, e0-e1-e2-e3] , rank = 8 
get_cls(1086): looping through inv_lst continued after recursive call: (8, 'A1+D4', [e2-e3, e3-e4, e4-e5, e6-e7, e0-e1-e2-e3]) 
get_cls(1094): bas1_lst = 1 [('A1+D4', 'A0')] 
get_cls(1095): s_lst    = 2 [e0-e1-e6-e7, 2e0-e2-e3-e4-e5-e6-e7] 
get_cls(1096): q_lst    = 24 [e1-e2, e1-e3, e1-e4, e1-e5, e5-e6, e4-e6, e3-e6, e2-e6, e1-e6, e5-e7, e4-e7, e3-e7, e2-e7, e1-e7, e0-e2-e3-e6, e0-e2-e4-e6, e0-e3-e4-e6, e0-e2-e5-e6, e0-e3-e5-e6, e0-e4-e5-e6, e0-e2-e6-e7, e0-e3-e6-e7, e0-e4-e6-e7, e0-e5-e6-e7] 
update(86): ETA = 0.000061071 m, counter = 0 / 47 , time = 1.2994e-6 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'A1+D4', 'A0')  
update(86): ETA = 0.033390 m, counter = 1 / 47 , time = 0.00072716 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'A1+D4', '{A1}')  
update(86): ETA = 0.20909 m, counter = 2 / 47 , time = 0.0053736 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'A1+D4', '2{A1}')  
update(86): ETA = 13.571 m, counter = 3 / 47 , time = 0.31381 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'A1+D4', '{A2}')  
update(86): ETA = 0.57711 m, counter = 4 / 47 , time = 0.32723 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'A1+D4', '3{A1}')  
update(86): ETA = 85.321 m, counter = 5 / 47 , time = 2.3587 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'A1+D4', '3{A1}')  
update(86): ETA = 0.0080647 m, counter = 6 / 47 , time = 2.3589 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'A1+D4', '{A1}+{A2}')  
update(86): ETA = 9.2533 m, counter = 7 / 47 , time = 2.5902 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'A1+D4', '{A3}')  
update(86): ETA = 0.61522 m, counter = 8 / 47 , time = 2.6060 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'A1+D4', '2{A1}+{A2}')  
update(86): ETA = 0.011619 m, counter = 9 / 47 , time = 2.6063 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'A1+D4', '2{A2}')  
update(86): ETA = 0.0089744 m, counter = 10 / 47 , time = 2.6065 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'A1+D4', '4{A1}')  
update(86): ETA = 0.0086855 m, counter = 11 / 47 , time = 2.6068 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'A1+D4', '4{A1}')  
update(86): ETA = 0.010941 m, counter = 12 / 47 , time = 2.6071 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'A1+D4', '{A1}+{A3}')  
update(86): ETA = 0.010767 m, counter = 13 / 47 , time = 2.6074 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'A1+D4', '{A1}+{A3}')  
update(86): ETA = 0.012110 m, counter = 14 / 47 , time = 2.6078 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'A1+D4', '{A4}')  
update(86): ETA = 0.012265 m, counter = 15 / 47 , time = 2.6082 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'A1+D4', '{D4}')  
update(86): ETA = 0.012443 m, counter = 16 / 47 , time = 2.6086 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'A1+D4', '2{A1}+{A3}')  
update(86): ETA = 0.012053 m, counter = 17 / 47 , time = 2.6090 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'A1+D4', '2{A1}+{A3}')  
update(86): ETA = 0.010255 m, counter = 18 / 47 , time = 2.6093 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'A1+D4', '3{A1}+{A2}')  
update(86): ETA = 0.0091285 m, counter = 19 / 47 , time = 2.6096 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'A1+D4', '5{A1}')  
update(86): ETA = 0.010526 m, counter = 20 / 47 , time = 2.6100 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'A1+D4', '{A1}+2{A2}')  
update(86): ETA = 0.011870 m, counter = 21 / 47 , time = 2.6105 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'A1+D4', '{A1}+{A4}')  
update(86): ETA = 0.011468 m, counter = 22 / 47 , time = 2.6110 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'A1+D4', '{A1}+{D4}')  
update(86): ETA = 0.010391 m, counter = 23 / 47 , time = 2.6114 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'A1+D4', '{A2}+{A3}')  
update(86): ETA = 0.012033 m, counter = 24 / 47 , time = 2.6119 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'A1+D4', '{A5}')  
update(86): ETA = 0.011746 m, counter = 25 / 47 , time = 2.6124 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'A1+D4', '{A5}')  
update(86): ETA = 0.010968 m, counter = 26 / 47 , time = 2.6130 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'A1+D4', '{D5}')  
update(86): ETA = 0.011097 m, counter = 27 / 47 , time = 2.6135 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'A1+D4', '2{A1}+{D4}')  
update(86): ETA = 0.010923 m, counter = 28 / 47 , time = 2.6141 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'A1+D4', '2{A3}')  
update(86): ETA = 0.0089766 m, counter = 29 / 47 , time = 2.6146 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'A1+D4', '3{A1}+{A3}')  
update(86): ETA = 0.0088434 m, counter = 30 / 47 , time = 2.6151 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'A1+D4', '3{A2}')  
update(86): ETA = 0.0067834 m, counter = 31 / 47 , time = 2.6155 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'A1+D4', '6{A1}')  
update(86): ETA = 0.0079705 m, counter = 32 / 47 , time = 2.6161 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'A1+D4', '{A1}+{A2}+{A3}')  
update(86): ETA = 0.0088844 m, counter = 33 / 47 , time = 2.6167 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'A1+D4', '{A1}+{A5}')  
update(86): ETA = 0.0081265 m, counter = 34 / 47 , time = 2.6173 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'A1+D4', '{A1}+{A5}')  
update(86): ETA = 0.0074716 m, counter = 35 / 47 , time = 2.6180 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'A1+D4', '{A1}+{D5}')  
update(86): ETA = 0.0064729 m, counter = 36 / 47 , time = 2.6185 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'A1+D4', '{A2}+{A4}')  
update(86): ETA = 0.0070440 m, counter = 37 / 47 , time = 2.6192 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'A1+D4', '{A6}')  
update(86): ETA = 0.0063950 m, counter = 38 / 47 , time = 2.6200 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'A1+D4', '{D6}')  
update(86): ETA = 0.0057516 m, counter = 39 / 47 , time = 2.6207 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'A1+D4', '{E6}')  
update(86): ETA = 0.0046811 m, counter = 40 / 47 , time = 2.6213 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'A1+D4', '3{A1}+{D4}')  
update(86): ETA = 0.0032047 m, counter = 41 / 47 , time = 2.6219 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'A1+D4', '7{A1}')  
update(86): ETA = 0.0034602 m, counter = 42 / 47 , time = 2.6226 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'A1+D4', '{A1}+2{A3}')  
update(86): ETA = 0.0032834 m, counter = 43 / 47 , time = 2.6234 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'A1+D4', '{A1}+{D6}')  
update(86): ETA = 0.0023071 m, counter = 44 / 47 , time = 2.6242 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'A1+D4', '{A2}+{A5}')  
update(86): ETA = 0.0018341 m, counter = 45 / 47 , time = 2.6251 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'A1+D4', '{A7}')  
update(86): ETA = 0.00091217 m, counter = 46 / 47 , time = 2.6260 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'A1+D4', '{E7}')  
get_cls(1130): Setting Dynkin types of 105 items...please wait... 
update(86): ETA = 0.025048 m, counter = 0 / 105 , time = 0.0023855 m, info = 8 A1+D4 A0  
update(86): ETA = 0.38373 m, counter = 10 / 105 , time = 0.042778 m, info = 8 A1+D4 A2  
update(86): ETA = 0.36882 m, counter = 20 / 105 , time = 0.086168 m, info = 8 A1+D4 A2  
update(86): ETA = 0.34760 m, counter = 30 / 105 , time = 0.13251 m, info = 8 A1+D4 A4  
update(86): ETA = 0.37113 m, counter = 40 / 105 , time = 0.18961 m, info = 8 A1+D4 A4  
update(86): ETA = 0.31476 m, counter = 50 / 105 , time = 0.24684 m, info = 8 A1+D4 A4  
update(86): ETA = 0.25686 m, counter = 60 / 105 , time = 0.30392 m, info = 8 A1+D4 A4  
update(86): ETA = 0.20178 m, counter = 70 / 105 , time = 0.36157 m, info = 8 A1+D4 2A2  
update(86): ETA = 0.14312 m, counter = 80 / 105 , time = 0.41882 m, info = 8 A1+D4 2A2  
update(86): ETA = 0.085661 m, counter = 90 / 105 , time = 0.47593 m, info = 8 A1+D4 2A2  
update(86): ETA = 0.028214 m, counter = 100 / 105 , time = 0.53235 m, info = 8 A1+D4 A4  
get_cls(1145): inv      = A1+D4 , rank = 8 
get_cls(1146): bas1_lst = 1 [('A0', 1)] 
get_cls(1147): bas2_lst = 4 [('2A1', 1), ('A0', 1), ('A1', 2)] 
get_cls(1148): bas3_lst = 101 [('2A1', 8), ('2A2', 32), ('4A1', 12), ('A0', 1), ('A2', 16), ('A4', 32)] 
update(86): ETA = 2.0067e-6 m, counter = 0 / 404 , time = 1.9868e-7 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', 'A0', 'A0')  
get_cls(1168): 	 appended:  (8, 'A1+D4', 'A0') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A0', 'A0') 
get_cls(1168): 	 appended:  (8, 'A1+D4', '2A1') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A0', '2A1') 
get_cls(1168): 	 appended:  (8, 'A1+D4', '[A2]') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A0', 'A2') 
get_cls(1168): 	 appended:  (8, 'A1+D4', '2[A2]') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A0', '2A2') 
update(86): ETA = 4.9742 m, counter = 40 / 404 , time = 0.54661 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', 'A0', '2A2')  
get_cls(1168): 	 appended:  (8, 'A1+D4', '4A1') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A0', '4A1') 
get_cls(1168): 	 appended:  (8, 'A1+D4', '[A4]') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A0', 'A4') 
update(86): ETA = 3.1461 m, counter = 80 / 404 , time = 0.93502 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', 'A0', 'A4')  
get_cls(1168): 	 appended:  (8, 'A1+D4', '{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A1', 'A0') 
get_cls(1168): 	 appended:  (8, 'A1+D4', '[A3]') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A1', '2A1') 
get_cls(1168): 	 appended:  (8, 'A1+D4', '{A1}+[A2]') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A1', 'A2') 
update(86): ETA = 1.9217 m, counter = 120 / 404 , time = 1.2057 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', 'A1', 'A2')  
update(86): ETA = 0.43255 m, counter = 160 / 404 , time = 1.2766 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', 'A1', '4A1')  
update(86): ETA = 0.0040654 m, counter = 200 / 404 , time = 1.2774 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', 'A1', 'A4')  
update(86): ETA = 0.48232 m, counter = 240 / 404 , time = 1.3950 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', 'A1', '2A2')  
update(86): ETA = 0.0019545 m, counter = 280 / 404 , time = 1.3957 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', 'A1', 'A4')  
get_cls(1168): 	 appended:  (8, 'A1+D4', '2{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A0', '2A1', 'A0') 
update(86): ETA = 0.035602 m, counter = 320 / 404 , time = 1.4126 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', '2A1', 'A2')  
update(86): ETA = 0.0010129 m, counter = 360 / 404 , time = 1.4135 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', '2A1', '4A1')  
update(86): ETA = 0.00010388 m, counter = 400 / 404 , time = 1.4146 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', '2A1', 'A4')  
get_cls(1070): looping through inv_lst: (8, 'D6', [e2-e3, e3-e4, e4-e5, e5-e6, e6-e7, e0-e1-e2-e3]) 
get_part_roots(875): r_lst      = 63 [e1-e2, e2-e3, e1-e3, e3-e4, e2-e4, e1-e4, e4-e5, e3-e5, e2-e5, e1-e5, e5-e6, e4-e6, e3-e6, e2-e6, e1-e6, e6-e7, e5-e7, e4-e7, e3-e7, e2-e7, e1-e7, e0-e1-e2-e3, e0-e1-e2-e4, e0-e1-e3-e4, e0-e2-e3-e4, e0-e1-e2-e5, e0-e1-e3-e5, e0-e2-e3-e5, e0-e1-e4-e5, e0-e2-e4-e5, e0-e3-e4-e5, e0-e1-e2-e6, e0-e1-e3-e6, e0-e2-e3-e6, e0-e1-e4-e6, e0-e2-e4-e6, e0-e3-e4-e6, e0-e1-e5-e6, e0-e2-e5-e6, e0-e3-e5-e6, e0-e4-e5-e6, e0-e1-e2-e7, e0-e1-e3-e7, e0-e2-e3-e7, e0-e1-e4-e7, e0-e2-e4-e7, e0-e3-e4-e7, e0-e1-e5-e7, e0-e2-e5-e7, e0-e3-e5-e7, e0-e4-e5-e7, e0-e1-e6-e7, e0-e2-e6-e7, e0-e3-e6-e7, e0-e4-e6-e7, e0-e5-e6-e7, 2e0-e1-e2-e3-e4-e5-e6, 2e0-e1-e2-e3-e4-e5-e7, 2e0-e1-e2-e3-e4-e6-e7, 2e0-e1-e2-e3-e5-e6-e7, 2e0-e1-e2-e4-e5-e6-e7, 2e0-e1-e3-e4-e5-e6-e7, 2e0-e2-e3-e4-e5-e6-e7] 
get_part_roots(876): s_lst      = 1 [2e0-e2-e3-e4-e5-e6-e7] 
get_part_roots(877): tq1_lst    = 32 [e1-e2, e1-e3, e1-e4, e1-e5, e1-e6, e1-e7, e0-e2-e3-e4, e0-e2-e3-e5, e0-e2-e4-e5, e0-e3-e4-e5, e0-e2-e3-e6, e0-e2-e4-e6, e0-e3-e4-e6, e0-e2-e5-e6, e0-e3-e5-e6, e0-e4-e5-e6, e0-e2-e3-e7, e0-e2-e4-e7, e0-e3-e4-e7, e0-e2-e5-e7, e0-e3-e5-e7, e0-e4-e5-e7, e0-e2-e6-e7, e0-e3-e6-e7, e0-e4-e6-e7, e0-e5-e6-e7, 2e0-e1-e2-e3-e4-e5-e6, 2e0-e1-e2-e3-e4-e5-e7, 2e0-e1-e2-e3-e4-e6-e7, 2e0-e1-e2-e3-e5-e6-e7, 2e0-e1-e2-e4-e5-e6-e7, 2e0-e1-e3-e4-e5-e6-e7] 
get_part_roots(878): tq_lst     = 32 [e1-e2, e1-e3, e1-e4, e1-e5, e1-e6, e1-e7, e0-e2-e3-e4, e0-e2-e3-e5, e0-e2-e4-e5, e0-e3-e4-e5, e0-e2-e3-e6, e0-e2-e4-e6, e0-e3-e4-e6, e0-e2-e5-e6, e0-e3-e5-e6, e0-e4-e5-e6, e0-e2-e3-e7, e0-e2-e4-e7, e0-e3-e4-e7, e0-e2-e5-e7, e0-e3-e5-e7, e0-e4-e5-e7, e0-e2-e6-e7, e0-e3-e6-e7, e0-e4-e6-e7, e0-e5-e6-e7, 2e0-e1-e2-e3-e4-e5-e6, 2e0-e1-e2-e3-e4-e5-e7, 2e0-e1-e2-e3-e4-e6-e7, 2e0-e1-e2-e3-e5-e6-e7, 2e0-e1-e2-e4-e5-e6-e7, 2e0-e1-e3-e4-e5-e6-e7] 
get_part_roots(879): q_lst      = 16 [e1-e2, e1-e3, e1-e4, e1-e5, e1-e6, e1-e7, e0-e2-e3-e4, e0-e2-e3-e5, e0-e2-e4-e5, e0-e3-e4-e5, e0-e2-e3-e6, e0-e2-e4-e6, e0-e3-e4-e6, e0-e2-e5-e6, e0-e3-e5-e6, e0-e4-e5-e6] 
get_part_roots(880):        M --> 16 [2e0-e1-e3-e4-e5-e6-e7, 2e0-e1-e2-e4-e5-e6-e7, 2e0-e1-e2-e3-e5-e6-e7, 2e0-e1-e2-e3-e4-e6-e7, 2e0-e1-e2-e3-e4-e5-e7, 2e0-e1-e2-e3-e4-e5-e6, e0-e5-e6-e7, e0-e4-e6-e7, e0-e3-e6-e7, e0-e2-e6-e7, e0-e4-e5-e7, e0-e3-e5-e7, e0-e2-e5-e7, e0-e3-e4-e7, e0-e2-e4-e7, e0-e2-e3-e7] 
get_part_roots(881): inv.Md_lst = D6 [e2-e3, e3-e4, e4-e5, e5-e6, e6-e7, e0-e1-e2-e3] , rank = 8 
get_cls(1086): looping through inv_lst continued after recursive call: (8, 'D6', [e2-e3, e3-e4, e4-e5, e5-e6, e6-e7, e0-e1-e2-e3]) 
get_cls(1094): bas1_lst = 1 [('D6', 'A0')] 
get_cls(1095): s_lst    = 1 [2e0-e2-e3-e4-e5-e6-e7] 
get_cls(1096): q_lst    = 16 [e1-e2, e1-e3, e1-e4, e1-e5, e1-e6, e1-e7, e0-e2-e3-e4, e0-e2-e3-e5, e0-e2-e4-e5, e0-e3-e4-e5, e0-e2-e3-e6, e0-e2-e4-e6, e0-e3-e4-e6, e0-e2-e5-e6, e0-e3-e5-e6, e0-e4-e5-e6] 
update(86): ETA = 0.00015202 m, counter = 0 / 47 , time = 3.2345e-6 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'D6', 'A0')  
update(86): ETA = 0.033508 m, counter = 1 / 47 , time = 0.00073167 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'D6', '{A1}')  
update(86): ETA = 0.12248 m, counter = 2 / 47 , time = 0.0034534 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'D6', '2{A1}')  
update(86): ETA = 1.9406 m, counter = 3 / 47 , time = 0.047557 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'D6', '{A2}')  
update(86): ETA = 0.077328 m, counter = 4 / 47 , time = 0.049356 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'D6', '3{A1}')  
update(86): ETA = 1.7631 m, counter = 5 / 47 , time = 0.091335 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'D6', '3{A1}')  
update(86): ETA = 0.0084884 m, counter = 6 / 47 , time = 0.091542 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'D6', '{A1}+{A2}')  
update(86): ETA = 0.075149 m, counter = 7 / 47 , time = 0.093421 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'D6', '{A3}')  
update(86): ETA = 0.073869 m, counter = 8 / 47 , time = 0.095315 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'D6', '2{A1}+{A2}')  
update(86): ETA = 0.011997 m, counter = 9 / 47 , time = 0.095631 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'D6', '2{A2}')  
update(86): ETA = 0.0089582 m, counter = 10 / 47 , time = 0.095873 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'D6', '4{A1}')  
update(86): ETA = 0.0086982 m, counter = 11 / 47 , time = 0.096114 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'D6', '4{A1}')  
update(86): ETA = 0.010985 m, counter = 12 / 47 , time = 0.096428 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'D6', '{A1}+{A3}')  
update(86): ETA = 0.010811 m, counter = 13 / 47 , time = 0.096746 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'D6', '{A1}+{A3}')  
update(86): ETA = 0.012218 m, counter = 14 / 47 , time = 0.097116 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'D6', '{A4}')  
update(86): ETA = 0.012022 m, counter = 15 / 47 , time = 0.097492 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'D6', '{D4}')  
update(86): ETA = 0.012527 m, counter = 16 / 47 , time = 0.097896 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'D6', '2{A1}+{A3}')  
update(86): ETA = 0.012115 m, counter = 17 / 47 , time = 0.098300 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'D6', '2{A1}+{A3}')  
update(86): ETA = 0.010302 m, counter = 18 / 47 , time = 0.098655 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'D6', '3{A1}+{A2}')  
update(86): ETA = 0.0091536 m, counter = 19 / 47 , time = 0.098982 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'D6', '5{A1}')  
update(86): ETA = 0.010566 m, counter = 20 / 47 , time = 0.099373 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'D6', '{A1}+2{A2}')  
update(86): ETA = 0.012162 m, counter = 21 / 47 , time = 0.099841 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'D6', '{A1}+{A4}')  
update(86): ETA = 0.011499 m, counter = 22 / 47 , time = 0.10030 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'D6', '{A1}+{D4}')  
update(86): ETA = 0.010432 m, counter = 23 / 47 , time = 0.10074 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'D6', '{A2}+{A3}')  
update(86): ETA = 0.012109 m, counter = 24 / 47 , time = 0.10126 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'D6', '{A5}')  
update(86): ETA = 0.011567 m, counter = 25 / 47 , time = 0.10179 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'D6', '{A5}')  
update(86): ETA = 0.010985 m, counter = 26 / 47 , time = 0.10231 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'D6', '{D5}')  
update(86): ETA = 0.011150 m, counter = 27 / 47 , time = 0.10287 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'D6', '2{A1}+{D4}')  
update(86): ETA = 0.010942 m, counter = 28 / 47 , time = 0.10344 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'D6', '2{A3}')  
update(86): ETA = 0.0091698 m, counter = 29 / 47 , time = 0.10395 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'D6', '3{A1}+{A3}')  
update(86): ETA = 0.0088528 m, counter = 30 / 47 , time = 0.10447 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'D6', '3{A2}')  
update(86): ETA = 0.0069602 m, counter = 31 / 47 , time = 0.10491 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'D6', '6{A1}')  
update(86): ETA = 0.0079788 m, counter = 32 / 47 , time = 0.10544 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'D6', '{A1}+{A2}+{A3}')  
update(86): ETA = 0.0087213 m, counter = 33 / 47 , time = 0.10606 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'D6', '{A1}+{A5}')  
update(86): ETA = 0.0080854 m, counter = 34 / 47 , time = 0.10669 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'D6', '{A1}+{A5}')  
update(86): ETA = 0.0074640 m, counter = 35 / 47 , time = 0.10731 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'D6', '{A1}+{D5}')  
update(86): ETA = 0.0064814 m, counter = 36 / 47 , time = 0.10790 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'D6', '{A2}+{A4}')  
update(86): ETA = 0.0071441 m, counter = 37 / 47 , time = 0.10861 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'D6', '{A6}')  
update(86): ETA = 0.0063626 m, counter = 38 / 47 , time = 0.10932 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'D6', '{D6}')  
update(86): ETA = 0.0056739 m, counter = 39 / 47 , time = 0.11003 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'D6', '{E6}')  
update(86): ETA = 0.0046850 m, counter = 40 / 47 , time = 0.11070 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'D6', '3{A1}+{D4}')  
update(86): ETA = 0.0032176 m, counter = 41 / 47 , time = 0.11123 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'D6', '7{A1}')  
update(86): ETA = 0.0034335 m, counter = 42 / 47 , time = 0.11192 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'D6', '{A1}+2{A3}')  
update(86): ETA = 0.0032944 m, counter = 43 / 47 , time = 0.11274 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'D6', '{A1}+{D6}')  
update(86): ETA = 0.0022995 m, counter = 44 / 47 , time = 0.11351 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'D6', '{A2}+{A5}')  
update(86): ETA = 0.0018115 m, counter = 45 / 47 , time = 0.11442 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'D6', '{A7}')  
update(86): ETA = 0.00091218 m, counter = 46 / 47 , time = 0.11533 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'D6', '{E7}')  
get_cls(1130): Setting Dynkin types of 19 items...please wait... 
update(86): ETA = 0.047106 m, counter = 0 / 19 , time = 0.0024793 m, info = 8 D6 A0  
update(86): ETA = 0.066048 m, counter = 1 / 19 , time = 0.0061486 m, info = 8 D6 A1  
update(86): ETA = 0.042172 m, counter = 2 / 19 , time = 0.0086293 m, info = 8 D6 A0  
update(86): ETA = 0.071187 m, counter = 3 / 19 , time = 0.013079 m, info = 8 D6 A2  
update(86): ETA = 0.066570 m, counter = 4 / 19 , time = 0.017517 m, info = 8 D6 A2  
update(86): ETA = 0.062205 m, counter = 5 / 19 , time = 0.021960 m, info = 8 D6 A2  
update(86): ETA = 0.057829 m, counter = 6 / 19 , time = 0.026408 m, info = 8 D6 A2  
update(86): ETA = 0.053514 m, counter = 7 / 19 , time = 0.030868 m, info = 8 D6 A2  
update(86): ETA = 0.048795 m, counter = 8 / 19 , time = 0.035304 m, info = 8 D6 A2  
update(86): ETA = 0.044330 m, counter = 9 / 19 , time = 0.039737 m, info = 8 D6 A2  
update(86): ETA = 0.040073 m, counter = 10 / 19 , time = 0.044189 m, info = 8 D6 A2  
update(86): ETA = 0.035360 m, counter = 11 / 19 , time = 0.048609 m, info = 8 D6 A2  
update(86): ETA = 0.031058 m, counter = 12 / 19 , time = 0.053046 m, info = 8 D6 A2  
update(86): ETA = 0.026610 m, counter = 13 / 19 , time = 0.057481 m, info = 8 D6 A2  
update(86): ETA = 0.022409 m, counter = 14 / 19 , time = 0.061963 m, info = 8 D6 A2  
update(86): ETA = 0.017798 m, counter = 15 / 19 , time = 0.066412 m, info = 8 D6 A2  
update(86): ETA = 0.013323 m, counter = 16 / 19 , time = 0.070853 m, info = 8 D6 A2  
update(86): ETA = 0.0088698 m, counter = 17 / 19 , time = 0.075288 m, info = 8 D6 A2  
update(86): ETA = 0.0044491 m, counter = 18 / 19 , time = 0.079737 m, info = 8 D6 A2  
get_cls(1145): inv      = D6 , rank = 8 
get_cls(1146): bas1_lst = 1 [('A0', 1)] 
get_cls(1147): bas2_lst = 2 [('A0', 1), ('A1', 1)] 
get_cls(1148): bas3_lst = 17 [('A0', 1), ('A2', 16)] 
update(86): ETA = 1.5312e-6 m, counter = 0 / 34 , time = 1.3510e-7 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', 'A0', 'A0')  
get_cls(1168): 	 appended:  (8, 'D6', 'A0') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A0', 'A0') 
get_cls(1168): 	 appended:  (8, 'D6', '[A2]') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A0', 'A2') 
update(86): ETA = 0.64540 m, counter = 3 / 34 , time = 0.062458 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', 'A0', 'A2')  
update(86): ETA = 0.42649 m, counter = 6 / 34 , time = 0.10815 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', 'A0', 'A2')  
update(86): ETA = 0.37978 m, counter = 9 / 34 , time = 0.15373 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', 'A0', 'A2')  
update(86): ETA = 0.33475 m, counter = 12 / 34 , time = 0.19937 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', 'A0', 'A2')  
update(86): ETA = 0.28956 m, counter = 15 / 34 , time = 0.24509 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', 'A0', 'A2')  
get_cls(1168): 	 appended:  (8, 'D6', '{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A1', 'A0') 
update(86): ETA = 0.28189 m, counter = 18 / 34 , time = 0.29795 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', 'A1', 'A2')  
update(86): ETA = 0.00021877 m, counter = 21 / 34 , time = 0.29800 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', 'A1', 'A2')  
update(86): ETA = 0.00016867 m, counter = 24 / 34 , time = 0.29805 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', 'A1', 'A2')  
update(86): ETA = 0.00011752 m, counter = 27 / 34 , time = 0.29810 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', 'A1', 'A2')  
update(86): ETA = 0.000066619 m, counter = 30 / 34 , time = 0.29815 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', 'A1', 'A2')  
update(86): ETA = 0.000016767 m, counter = 33 / 34 , time = 0.29820 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', 'A1', 'A2')  
get_cls(1070): looping through inv_lst: (8, 'E7', [e1-e2, e2-e3, e3-e4, e4-e5, e5-e6, e6-e7, e0-e1-e2-e3]) 
get_part_roots(875): r_lst      = 63 [e1-e2, e2-e3, e1-e3, e3-e4, e2-e4, e1-e4, e4-e5, e3-e5, e2-e5, e1-e5, e5-e6, e4-e6, e3-e6, e2-e6, e1-e6, e6-e7, e5-e7, e4-e7, e3-e7, e2-e7, e1-e7, e0-e1-e2-e3, e0-e1-e2-e4, e0-e1-e3-e4, e0-e2-e3-e4, e0-e1-e2-e5, e0-e1-e3-e5, e0-e2-e3-e5, e0-e1-e4-e5, e0-e2-e4-e5, e0-e3-e4-e5, e0-e1-e2-e6, e0-e1-e3-e6, e0-e2-e3-e6, e0-e1-e4-e6, e0-e2-e4-e6, e0-e3-e4-e6, e0-e1-e5-e6, e0-e2-e5-e6, e0-e3-e5-e6, e0-e4-e5-e6, e0-e1-e2-e7, e0-e1-e3-e7, e0-e2-e3-e7, e0-e1-e4-e7, e0-e2-e4-e7, e0-e3-e4-e7, e0-e1-e5-e7, e0-e2-e5-e7, e0-e3-e5-e7, e0-e4-e5-e7, e0-e1-e6-e7, e0-e2-e6-e7, e0-e3-e6-e7, e0-e4-e6-e7, e0-e5-e6-e7, 2e0-e1-e2-e3-e4-e5-e6, 2e0-e1-e2-e3-e4-e5-e7, 2e0-e1-e2-e3-e4-e6-e7, 2e0-e1-e2-e3-e5-e6-e7, 2e0-e1-e2-e4-e5-e6-e7, 2e0-e1-e3-e4-e5-e6-e7, 2e0-e2-e3-e4-e5-e6-e7] 
get_part_roots(876): s_lst      = 0 [] 
get_part_roots(877): tq1_lst    = 0 [] 
get_part_roots(878): tq_lst     = 0 [] 
get_part_roots(879): q_lst      = 0 [] 
get_part_roots(880):        M --> 0 [] 
get_part_roots(881): inv.Md_lst = E7 [e1-e2, e2-e3, e3-e4, e4-e5, e5-e6, e6-e7, e0-e1-e2-e3] , rank = 8 
get_cls(1086): looping through inv_lst continued after recursive call: (8, 'E7', [e1-e2, e2-e3, e3-e4, e4-e5, e5-e6, e6-e7, e0-e1-e2-e3]) 
get_cls(1094): bas1_lst = 1 [('E7', 'A0')] 
get_cls(1095): s_lst    = 0 [] 
get_cls(1096): q_lst    = 0 [] 
update(86): ETA = 0.000059577 m, counter = 0 / 47 , time = 1.2676e-6 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'E7', 'A0')  
update(86): ETA = 0.033427 m, counter = 1 / 47 , time = 0.00072793 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'E7', '{A1}')  
update(86): ETA = 0.0048062 m, counter = 2 / 47 , time = 0.00083474 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'E7', '2{A1}')  
update(86): ETA = 0.0061255 m, counter = 3 / 47 , time = 0.00097395 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'E7', '{A2}')  
update(86): ETA = 0.0072383 m, counter = 4 / 47 , time = 0.0011423 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'E7', '3{A1}')  
update(86): ETA = 0.0071100 m, counter = 5 / 47 , time = 0.0013116 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'E7', '3{A1}')  
update(86): ETA = 0.0080454 m, counter = 6 / 47 , time = 0.0015078 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'E7', '{A1}+{A2}')  
update(86): ETA = 0.0097661 m, counter = 7 / 47 , time = 0.0017520 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'E7', '{A3}')  
update(86): ETA = 0.010673 m, counter = 8 / 47 , time = 0.0020256 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'E7', '2{A1}+{A2}')  
update(86): ETA = 0.011649 m, counter = 9 / 47 , time = 0.0023322 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'E7', '2{A2}')  
update(86): ETA = 0.0089786 m, counter = 10 / 47 , time = 0.0025748 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'E7', '4{A1}')  
update(86): ETA = 0.0086982 m, counter = 11 / 47 , time = 0.0028164 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'E7', '4{A1}')  
update(86): ETA = 0.010974 m, counter = 12 / 47 , time = 0.0031300 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'E7', '{A1}+{A3}')  
update(86): ETA = 0.011132 m, counter = 13 / 47 , time = 0.0034574 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'E7', '{A1}+{A3}')  
update(86): ETA = 0.012173 m, counter = 14 / 47 , time = 0.0038263 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'E7', '{A4}')  
update(86): ETA = 0.011996 m, counter = 15 / 47 , time = 0.0042012 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'E7', '{D4}')  
update(86): ETA = 0.012477 m, counter = 16 / 47 , time = 0.0046036 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'E7', '2{A1}+{A3}')  
update(86): ETA = 0.012071 m, counter = 17 / 47 , time = 0.0050060 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'E7', '2{A1}+{A3}')  
update(86): ETA = 0.010275 m, counter = 18 / 47 , time = 0.0053603 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'E7', '3{A1}+{A2}')  
update(86): ETA = 0.0091523 m, counter = 19 / 47 , time = 0.0056871 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'E7', '5{A1}')  
update(86): ETA = 0.010561 m, counter = 20 / 47 , time = 0.0060783 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'E7', '{A1}+2{A2}')  
update(86): ETA = 0.011906 m, counter = 21 / 47 , time = 0.0065363 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'E7', '{A1}+{A4}')  
update(86): ETA = 0.011512 m, counter = 22 / 47 , time = 0.0069967 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'E7', '{A1}+{D4}')  
update(86): ETA = 0.010659 m, counter = 23 / 47 , time = 0.0074409 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'E7', '{A2}+{A3}')  
update(86): ETA = 0.012106 m, counter = 24 / 47 , time = 0.0079672 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'E7', '{A5}')  
update(86): ETA = 0.011568 m, counter = 25 / 47 , time = 0.0084930 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'E7', '{A5}')  
update(86): ETA = 0.011021 m, counter = 26 / 47 , time = 0.0090179 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'E7', '{D5}')  
update(86): ETA = 0.011183 m, counter = 27 / 47 , time = 0.0095770 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'E7', '2{A1}+{D4}')  
update(86): ETA = 0.010966 m, counter = 28 / 47 , time = 0.010154 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'E7', '2{A3}')  
update(86): ETA = 0.0090096 m, counter = 29 / 47 , time = 0.010655 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'E7', '3{A1}+{A3}')  
update(86): ETA = 0.0088627 m, counter = 30 / 47 , time = 0.011176 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'E7', '3{A2}')  
update(86): ETA = 0.0069403 m, counter = 31 / 47 , time = 0.011610 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'E7', '6{A1}')  
update(86): ETA = 0.0079967 m, counter = 32 / 47 , time = 0.012143 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'E7', '{A1}+{A2}+{A3}')  
update(86): ETA = 0.0087820 m, counter = 33 / 47 , time = 0.012770 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'E7', '{A1}+{A5}')  
update(86): ETA = 0.0081553 m, counter = 34 / 47 , time = 0.013398 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'E7', '{A1}+{A5}')  
update(86): ETA = 0.0074692 m, counter = 35 / 47 , time = 0.014020 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'E7', '{A1}+{D5}')  
update(86): ETA = 0.0064832 m, counter = 36 / 47 , time = 0.014609 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'E7', '{A2}+{A4}')  
update(86): ETA = 0.0070468 m, counter = 37 / 47 , time = 0.015314 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'E7', '{A6}')  
update(86): ETA = 0.0064422 m, counter = 38 / 47 , time = 0.016030 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'E7', '{D6}')  
update(86): ETA = 0.0056826 m, counter = 39 / 47 , time = 0.016740 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'E7', '{E6}')  
update(86): ETA = 0.0046749 m, counter = 40 / 47 , time = 0.017408 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'E7', '3{A1}+{D4}')  
update(86): ETA = 0.0032000 m, counter = 41 / 47 , time = 0.017941 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'E7', '7{A1}')  
update(86): ETA = 0.0034981 m, counter = 42 / 47 , time = 0.018641 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'E7', '{A1}+2{A3}')  
update(86): ETA = 0.0032499 m, counter = 43 / 47 , time = 0.019453 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'E7', '{A1}+{D6}')  
update(86): ETA = 0.0023214 m, counter = 44 / 47 , time = 0.020227 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'E7', '{A2}+{A5}')  
update(86): ETA = 0.0018050 m, counter = 45 / 47 , time = 0.021130 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'E7', '{A7}')  
update(86): ETA = 0.00090921 m, counter = 46 / 47 , time = 0.022039 m, info = get_cls seeking bases in s_lst and q_lst:  (8, 'E7', '{E7}')  
get_cls(1130): Setting Dynkin types of 2 items...please wait... 
update(86): ETA = 0.0051356 m, counter = 0 / 2 , time = 0.0025678 m, info = 8 E7 A0  
update(86): ETA = 0.0025442 m, counter = 1 / 2 , time = 0.0051120 m, info = 8 E7 A0  
get_cls(1145): inv      = E7 , rank = 8 
get_cls(1146): bas1_lst = 1 [('A0', 1)] 
get_cls(1147): bas2_lst = 1 [('A0', 1)] 
get_cls(1148): bas3_lst = 1 [('A0', 1)] 
update(86): ETA = 1.5100e-7 m, counter = 0 / 1 , time = 1.5100e-7 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', 'A0', 'A0')  
get_cls(1168): 	 appended:  (8, 'E7', 'A0') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A0', 'A0') 
usecase__get_cls(68): Classification of root bases:
 rownr rank   Mtype            type  #-2  #-1 #fam #-2R  #-1R  #famR                                                                Md_lst                                                                                                                                  d_lst                                                                                                                                                                                                                                                                                                                                                   M
   135    8      A0              A0    0   56  126    0    56    126                                                                    []                                                                                                                                     []                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   136    8      A0            {A1}    1   44   93    1    44     93                                                                    []                                                                                                                                [e1-e2]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   137    8      A0           2{A1}    2   34   68    2    34     68                                                                    []                                                                                                                         [e1-e2, e3-e4]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   138    8      A0            {A2}    2   32   61    2    32     61                                                                    []                                                                                                                         [e1-e2, e2-e3]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   139    8      A0           3{A1}    3   26   49    3    26     49                                                                    []                                                                                                                  [e1-e2, e3-e4, e5-e6]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   140    8      A0           3{A1}    3   25   51    3    25     51                                                                    []                                                                                                            [e4-e5, e6-e7, e0-e1-e2-e3]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   141    8      A0       {A1}+{A2}    3   24   44    3    24     44                                                                    []                                                                                                                  [e1-e2, e2-e3, e4-e5]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   142    8      A0            {A3}    3   22   37    3    22     37                                                                    []                                                                                                                  [e1-e2, e2-e3, e3-e4]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   143    8      A0      2{A1}+{A2}    4   18   31    4    18     31                                                                    []                                                                                                           [e1-e2, e2-e3, e4-e5, e6-e7]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   144    8      A0           2{A2}    4   16   28    4    16     28                                                                    []                                                                                                           [e1-e2, e2-e3, e4-e5, e5-e6]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   145    8      A0           4{A1}    4   20   35    4    20     35                                                                    []                                                                                           [e1-e2, e3-e4, e5-e6, 2e0-e1-e2-e3-e4-e5-e6]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   146    8      A0           4{A1}    4   19   36    4    19     36                                                                    []                                                                                                     [e1-e2, e4-e5, e6-e7, e0-e1-e2-e3]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   147    8      A0       {A1}+{A3}    4   16   26    4    16     26                                                                    []                                                                                                           [e1-e2, e2-e3, e3-e4, e5-e6]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   148    8      A0       {A1}+{A3}    4   15   28    4    15     28                                                                    []                                                                                                     [e3-e4, e4-e5, e6-e7, e0-e1-e2-e3]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   149    8      A0            {A4}    4   14   21    4    14     21                                                                    []                                                                                                           [e1-e2, e2-e3, e3-e4, e4-e5]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   150    8      A0            {D4}    4   14   19    4    14     19                                                                    []                                                                                                     [e2-e3, e3-e4, e4-e5, e0-e1-e2-e3]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   151    8      A0      2{A1}+{A3}    5   12   18    5    12     18                                                                    []                                                                                    [e1-e2, e2-e3, e3-e4, e5-e6, 2e0-e1-e2-e3-e4-e5-e6]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   152    8      A0      2{A1}+{A3}    5   11   19    5    11     19                                                                    []                                                                                              [e1-e2, e3-e4, e4-e5, e6-e7, e0-e1-e2-e3]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   153    8      A0      3{A1}+{A2}    5   13   22    5    13     22                                                                    []                                                                                              [e1-e2, e2-e3, e4-e5, e6-e7, e0-e1-e2-e3]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   154    8      A0           5{A1}    5   14   26    5    14     26                                                                    []                                                                                        [e2-e3, e4-e5, e6-e7, e0-e1-e2-e3, e0-e1-e4-e5]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   155    8      A0      {A1}+2{A2}    5   12   19    5    12     19                                                                    []                                                                                              [e1-e2, e2-e3, e4-e5, e5-e6, e0-e1-e2-e3]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   156    8      A0       {A1}+{A4}    5   10   14    5    10     14                                                                    []                                                                                                    [e1-e2, e2-e3, e3-e4, e4-e5, e6-e7]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   157    8      A0       {A1}+{D4}    5    9   14    5     9     14                                                                    []                                                                                              [e2-e3, e3-e4, e4-e5, e6-e7, e0-e1-e2-e3]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   158    8      A0       {A2}+{A3}    5   10   16    5    10     16                                                                    []                                                                                                    [e1-e2, e2-e3, e3-e4, e5-e6, e6-e7]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   159    8      A0            {A5}    5    8   11    5     8     11                                                                    []                                                                                                    [e1-e2, e2-e3, e3-e4, e4-e5, e5-e6]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   160    8      A0            {A5}    5    7   13    5     7     13                                                                    []                                                                                              [e3-e4, e4-e5, e5-e6, e6-e7, e0-e1-e2-e3]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   161    8      A0            {D5}    5    8    9    5     8      9                                                                    []                                                                                              [e1-e2, e2-e3, e3-e4, e4-e5, e0-e1-e2-e3]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   162    8      A0      2{A1}+{D4}    6    6   10    6     6     10                                                                    []                                                                                 [e2-e3, e4-e5, e5-e6, e6-e7, e0-e1-e2-e3, e0-e1-e4-e5]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   163    8      A0           2{A3}    6    6    9    6     6      9                                                                    []                                                                             [e1-e2, e2-e3, e3-e4, e5-e6, e6-e7, 2e0-e1-e2-e3-e4-e5-e6]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   164    8      A0      3{A1}+{A3}    6    8   13    6     8     13                                                                    []                                                                                 [e1-e2, e2-e3, e4-e5, e6-e7, e0-e1-e2-e3, e0-e1-e4-e5]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   165    8      A0           3{A2}    6    8   11    6     8     11                                                                    []                                                                                 [e1-e2, e2-e3, e4-e5, e5-e6, e0-e1-e2-e3, e0-e4-e5-e6]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   166    8      A0           6{A1}    6   10   19    6    10     19                                                                    []                                                                           [e1-e2, e3-e4, e5-e6, e0-e1-e2-e7, e0-e3-e4-e7, e0-e5-e6-e7]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   167    8      A0  {A1}+{A2}+{A3}    6    7   11    6     7     11                                                                    []                                                                                       [e1-e2, e2-e3, e4-e5, e5-e6, e6-e7, e0-e1-e2-e3]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   168    8      A0       {A1}+{A5}    6    6    7    6     6      7                                                                    []                                                                             [e1-e2, e2-e3, e3-e4, e4-e5, e5-e6, 2e0-e1-e2-e3-e4-e5-e6]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   169    8      A0       {A1}+{A5}    6    5    8    6     5      8                                                                    []                                                                                       [e1-e2, e3-e4, e4-e5, e5-e6, e6-e7, e0-e1-e2-e3]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   170    8      A0       {A1}+{D5}    6    5    6    6     5      6                                                                    []                                                                                       [e1-e2, e2-e3, e3-e4, e4-e5, e6-e7, e0-e1-e2-e3]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   171    8      A0       {A2}+{A4}    6    6    8    6     6      8                                                                    []                                                                                       [e1-e2, e2-e3, e3-e4, e5-e6, e6-e7, e0-e1-e2-e3]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   172    8      A0            {A6}    6    4    5    6     4      5                                                                    []                                                                                             [e1-e2, e2-e3, e3-e4, e4-e5, e5-e6, e6-e7]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   173    8      A0            {D6}    6    3    5    6     3      5                                                                    []                                                                                       [e2-e3, e3-e4, e4-e5, e5-e6, e6-e7, e0-e1-e2-e3]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   174    8      A0            {E6}    6    4    3    6     4      3                                                                    []                                                                                       [e1-e2, e2-e3, e3-e4, e4-e5, e5-e6, e0-e1-e2-e3]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   175    8      A0      3{A1}+{D4}    7    4    7    7     4      7                                                                    []                                                          [e1-e2, e3-e4, e4-e5, e5-e6, e0-e1-e2-e7, e0-e3-e4-e7, 2e0-e1-e2-e3-e4-e5-e6]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   176    8      A0           7{A1}    7    7   14    7     7     14                                                                    []                                                    [e1-e2, e3-e4, e5-e6, e0-e1-e2-e7, e0-e3-e4-e7, e0-e5-e6-e7, 2e0-e1-e2-e3-e4-e5-e6]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   177    8      A0      {A1}+2{A3}    7    4    6    7     4      6                                                                    []                                                                [e1-e2, e2-e3, e3-e4, e5-e6, e6-e7, e0-e5-e6-e7, 2e0-e1-e2-e3-e4-e5-e6]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   178    8      A0       {A1}+{D6}    7    2    3    7     2      3                                                                    []                                                                          [e1-e2, e2-e3, e4-e5, e5-e6, e6-e7, e0-e1-e2-e3, e0-e1-e4-e5]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   179    8      A0       {A2}+{A5}    7    3    4    7     3      4                                                                    []                                                                          [e1-e2, e2-e3, e4-e5, e5-e6, e6-e7, e0-e1-e2-e3, e0-e4-e5-e6]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   180    8      A0            {A7}    7    2    2    7     2      2                                                                    []                                                                      [e1-e2, e2-e3, e3-e4, e4-e5, e5-e6, e6-e7, 2e0-e1-e2-e3-e4-e5-e6]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   181    8      A0            {E7}    7    1    1    7     1      1                                                                    []                                                                                [e1-e2, e2-e3, e3-e4, e4-e5, e5-e6, e6-e7, e0-e1-e2-e3]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   182    8      A1              A0    0   56  126    0    32     60                                                               [e1-e2]                                                                                                                                     []                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   183    8      A1            {A1}    1   44   93    1    24     43                                                               [e1-e2]                                                                                                                                [e6-e7]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   184    8      A1           2{A1}    2   34   68    2    18     30                                                               [e1-e2]                                                                                                                   [e6-e7, e0-e3-e6-e7]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   185    8      A1           2{A1}    2   34   68    2    16     34                                                               [e1-e2]                                                                                                                   [e5-e6, e0-e3-e4-e7]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   186    8      A1            {A2}    2   32   61    2    16     27                                                               [e1-e2]                                                                                                                         [e5-e6, e6-e7]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   187    8      A1           3{A1}    3   26   49    3    14     21                                                               [e1-e2]                                                                                                  [e5-e6, e4-e7, 2e0-e1-e2-e4-e5-e6-e7]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   188    8      A1           3{A1}    3   25   51    3    13     21                                                               [e1-e2]                                                                                            [e6-e7, e0-e3-e6-e7, 2e0-e1-e2-e4-e5-e6-e7]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   189    8      A1           3{A1}    3   26   49    3    12     23                                                               [e1-e2]                                                                                                            [e5-e6, e4-e7, e0-e3-e4-e7]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   190    8      A1       {A1}+{A2}    3   24   44    3    12     18                                                               [e1-e2]                                                                                                            [e5-e6, e6-e7, e0-e5-e6-e7]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   191    8      A1            {A3}    3   22   37    3    10     15                                                               [e1-e2]                                                                                                            [e5-e6, e0-e3-e5-e6, e6-e7]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   192    8      A1            {A3}    3   22   37    3     8     19                                                               [e1-e2]                                                                                                            [e4-e5, e5-e6, e0-e3-e4-e7]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   193    8      A1      2{A1}+{A2}    4   18   31    4     8     13                                                               [e1-e2]                                                                                               [e5-e6, e0-e3-e5-e6, e4-e7, e0-e4-e5-e7]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   194    8      A1           2{A2}    4   16   28    4     8     10                                                               [e1-e2]                                                                                     [e5-e6, e0-e3-e5-e6, e3-e7, 2e0-e1-e2-e3-e4-e5-e7]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   195    8      A1           4{A1}    4   19   36    4     9     16                                                               [e1-e2]                                                                                     [e5-e6, e4-e7, e0-e3-e4-e7, 2e0-e1-e2-e4-e5-e6-e7]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   196    8      A1           4{A1}    4   20   35    4     8     17                                                               [e1-e2]                                                                                               [e5-e6, e0-e3-e5-e6, e4-e7, e0-e3-e4-e7]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   197    8      A1       {A1}+{A3}    4   16   26    4     8     10                                                               [e1-e2]                                                                                           [e4-e5, e5-e6, e6-e7, 2e0-e1-e2-e4-e5-e6-e7]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   198    8      A1       {A1}+{A3}    4   15   28    4     7     10                                                               [e1-e2]                                                                                     [e5-e6, e0-e3-e5-e6, e6-e7, 2e0-e1-e2-e4-e5-e6-e7]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   199    8      A1       {A1}+{A3}    4   16   26    4     6     12                                                               [e1-e2]                                                                                                     [e4-e5, e5-e6, e3-e7, e0-e3-e4-e7]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   200    8      A1            {A4}    4   14   21    4     6      7                                                               [e1-e2]                                                                                                     [e4-e5, e5-e6, e0-e4-e5-e6, e6-e7]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   201    8      A1            {D4}    4   14   19    4     4      9                                                               [e1-e2]                                                                                                     [e4-e5, e0-e3-e4-e5, e5-e6, e6-e7]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   202    8      A1      2{A1}+{A3}    5   11   19    5     5      7                                                               [e1-e2]                                                                              [e4-e5, e3-e6, 2e0-e1-e2-e3-e4-e5-e6, e6-e7, e0-e3-e6-e7]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   203    8      A1      2{A1}+{A3}    5   12   18    5     4      8                                                               [e1-e2]                                                                                        [e4-e5, e5-e6, e0-e4-e5-e6, e3-e7, e0-e3-e4-e7]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   204    8      A1           5{A1}    5   14   26    5     6     12                                                               [e1-e2]                                                                        [e5-e6, e0-e3-e5-e6, e4-e7, e0-e3-e4-e7, 2e0-e1-e2-e4-e5-e6-e7]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   205    8      A1       {A1}+{D4}    5    9   14    5     3      6                                                               [e1-e2]                                                                              [e4-e5, e0-e3-e4-e5, e5-e6, e6-e7, 2e0-e1-e2-e4-e5-e6-e7]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   206    8      A1       {A2}+{A3}    5   10   16    5     4      6                                                               [e1-e2]                                                                                  [e4-e5, e5-e6, e0-e4-e5-e6, e0-e1-e2-e7, e0-e3-e4-e7]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   207    8      A1            {A5}    5    8   11    5     4      3                                                               [e1-e2]                                                                                    [e3-e4, e4-e5, e5-e6, 2e0-e1-e2-e3-e4-e5-e6, e6-e7]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   208    8      A1            {A5}    5    7   13    5     3      3                                                               [e1-e2]                                                                                        [e3-e4, e0-e1-e2-e5, e5-e6, e0-e3-e5-e6, e6-e7]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   209    8      A1            {D5}    5    8    9    5     2      3                                                               [e1-e2]                                                                                              [e3-e4, e4-e5, e0-e3-e4-e5, e5-e6, e6-e7]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   210    8      A1      2{A1}+{D4}    6    6   10    6     2      4                                                               [e1-e2]                                                                 [e3-e4, e4-e5, e5-e6, 2e0-e1-e2-e3-e4-e5-e6, e0-e1-e2-e7, e0-e3-e4-e7]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   211    8      A1           2{A3}    6    6    9    6     2      3                                                               [e1-e2]                                                                           [e3-e4, e0-e1-e2-e5, e5-e6, e0-e3-e5-e6, e4-e7, e0-e3-e4-e7]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   212    8      A1           6{A1}    6   10   19    6     4      9                                                               [e1-e2]                                                           [e4-e5, e3-e6, 2e0-e1-e2-e3-e4-e5-e6, e0-e1-e2-e7, e0-e4-e5-e7, e0-e3-e6-e7]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   213    8      A1            {D6}    6    3    5    6     1      1                                                               [e1-e2]                                                                                 [e0-e1-e2-e3, e3-e4, e4-e5, e0-e3-e4-e5, e5-e6, e6-e7]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   214    8     2A1              A0    0   56  126    0    16     26                                                        [e1-e2, e3-e4]                                                                                                                                     []                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   215    8     2A1            {A1}    1   44   93    1    12     17                                                        [e1-e2, e3-e4]                                                                                                                                [e6-e7]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   216    8     2A1            {A1}    1   44   93    1     8     25                                                        [e1-e2, e3-e4]                                                                                                                          [e0-e5-e6-e7]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   217    8     2A1             2A1    2   34   68    0    14     20                                                        [e1-e2, e3-e4]                                                                                                             [e0-e1-e3-e7, e0-e2-e4-e7]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   218    8     2A1           2{A1}    2   34   68    2    10     12                                                        [e1-e2, e3-e4]                                                                                                         [e6-e7, 2e0-e1-e2-e3-e4-e6-e7]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   219    8     2A1           2{A1}    2   34   68    2     8     12                                                        [e1-e2, e3-e4]                                                                                                                   [e5-e6, e0-e1-e2-e7]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   220    8     2A1           2{A1}    2   34   68    2     6     16                                                        [e1-e2, e3-e4]                                                                                                                   [e6-e7, e0-e5-e6-e7]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   221    8     2A1            {A2}    2   32   61    2     8      9                                                        [e1-e2, e3-e4]                                                                                                                         [e5-e6, e6-e7]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   222    8     2A1        2A1+{A1}    3   26   49    1    10     13                                                        [e1-e2, e3-e4]                                                                                                      [e5-e6, e0-e1-e3-e7, e0-e2-e4-e7]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   223    8     2A1        2A1+{A1}    3   25   51    1     7     19                                                        [e1-e2, e3-e4]                                                                                                [e0-e5-e6-e7, e0-e1-e3-e7, e0-e2-e4-e7]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   224    8     2A1           3{A1}    3   26   49    3     6      9                                                        [e1-e2, e3-e4]                                                                                                      [e5-e6, e0-e1-e2-e7, e0-e3-e4-e7]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   225    8     2A1           3{A1}    3   25   51    3     5     11                                                        [e1-e2, e3-e4]                                                                                            [e6-e7, e0-e5-e6-e7, 2e0-e1-e2-e3-e4-e6-e7]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   226    8     2A1           3{A1}    3   26   49    3     4     11                                                        [e1-e2, e3-e4]                                                                                                      [e5-e6, e0-e1-e2-e7, e0-e5-e6-e7]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   227    8     2A1       {A1}+{A2}    3   24   44    3     4      8                                                        [e1-e2, e3-e4]                                                                                                            [e5-e6, e6-e7, e0-e5-e6-e7]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   228    8     2A1            [A3]    3   22   37    1    10     11                                                        [e1-e2, e3-e4]                                                                                                      [e0-e1-e3-e6, e0-e2-e4-e6, e6-e7]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   229    8     2A1            {A3}    3   22   37    3     6      5                                                        [e1-e2, e3-e4]                                                                                                  [e5-e6, 2e0-e1-e2-e3-e4-e5-e6, e6-e7]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   230    8     2A1            {A3}    3   22   37    3     4      5                                                        [e1-e2, e3-e4]                                                                                                            [e0-e1-e2-e5, e5-e6, e6-e7]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   231    8     2A1        2A1+{A2}    4   18   31    2     6      7                                                        [e1-e2, e3-e4]                                                                                         [e0-e1-e2-e5, e5-e6, e0-e1-e3-e7, e0-e2-e4-e7]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   232    8     2A1             4A1    4   20   35    0    12     15                                                        [e1-e2, e3-e4]                                                                                   [e0-e1-e3-e6, e0-e2-e4-e6, e0-e2-e3-e7, e0-e1-e4-e7]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   233    8     2A1       2{A1}+2A1    4   20   35    2     8      9                                                        [e1-e2, e3-e4]                                                                               [e0-e1-e3-e6, e0-e2-e4-e6, e5-e7, 2e0-e1-e2-e3-e4-e5-e7]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   234    8     2A1       2A1+2{A1}    4   19   36    2     5     12                                                        [e1-e2, e3-e4]                                                                                         [e5-e6, e0-e5-e6-e7, e0-e1-e3-e7, e0-e2-e4-e7]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   235    8     2A1           4{A1}    4   20   35    4     4      7                                                        [e1-e2, e3-e4]                                                                               [e5-e6, 2e0-e1-e2-e3-e4-e5-e6, e0-e1-e2-e7, e0-e3-e4-e7]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   236    8     2A1           4{A1}    4   19   36    4     3      8                                                        [e1-e2, e3-e4]                                                                                         [e5-e6, e0-e1-e2-e7, e0-e3-e4-e7, e0-e5-e6-e7]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   237    8     2A1       {A1}+[A3]    4   16   26    2     6      8                                                        [e1-e2, e3-e4]                                                                                         [e0-e1-e2-e5, e0-e1-e3-e6, e0-e2-e4-e6, e6-e7]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   238    8     2A1       {A1}+[A3]    4   15   28    2     5     10                                                        [e1-e2, e3-e4]                                                                                         [e0-e1-e3-e6, e0-e2-e4-e6, e6-e7, e0-e5-e6-e7]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   239    8     2A1       {A1}+{A3}    4   15   28    4     3      4                                                        [e1-e2, e3-e4]                                                                                     [e5-e6, 2e0-e1-e2-e3-e4-e5-e6, e6-e7, e0-e5-e6-e7]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   240    8     2A1       {A1}+{A3}    4   16   26    4     2      4                                                        [e1-e2, e3-e4]                                                                                               [e0-e1-e2-e5, e5-e6, e6-e7, e0-e5-e6-e7]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   241    8     2A1            [D4]    4   14   19    2     6      5                                                        [e1-e2, e3-e4]                                                                                               [e0-e1-e3-e5, e0-e2-e4-e5, e5-e6, e6-e7]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   242    8     2A1            {D4}    4   14   19    4     2      3                                                        [e1-e2, e3-e4]                                                                                               [e0-e1-e2-e5, e0-e3-e4-e5, e5-e6, e6-e7]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   243    8     2A1        2A1+[A3]    5   12   18    1     8      8                                                        [e1-e2, e3-e4]                                                                            [e0-e1-e3-e5, e0-e2-e4-e5, e5-e6, e0-e2-e3-e7, e0-e1-e4-e7]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   244    8     2A1      2{A1}+[A3]    5   12   18    3     4      6                                                        [e1-e2, e3-e4]                                                                            [e0-e1-e3-e5, e0-e2-e4-e5, e5-e6, e0-e1-e2-e7, e0-e3-e4-e7]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   245    8     2A1        2A1+{A3}    5   12   18    3     4      4                                                        [e1-e2, e3-e4]                                                                            [e0-e1-e2-e5, e0-e3-e4-e5, e5-e6, e0-e1-e3-e7, e0-e2-e4-e7]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   246    8     2A1      2{A1}+[A3]    5   11   19    3     3      7                                                        [e1-e2, e3-e4]                                                                            [e0-e1-e2-e5, e0-e1-e3-e6, e0-e2-e4-e6, e6-e7, e0-e5-e6-e7]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   247    8     2A1   2A1+{A1}+{A2}    5   13   22    3     3      6                                                        [e1-e2, e3-e4]                                                                            [e0-e1-e2-e5, e5-e6, e0-e5-e6-e7, e0-e1-e3-e7, e0-e2-e4-e7]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   248    8     2A1        4A1+{A1}    5   14   26    1     8     10                                                        [e1-e2, e3-e4]                                                                      [e0-e1-e2-e5, e0-e1-e3-e6, e0-e2-e4-e6, e0-e2-e3-e7, e0-e1-e4-e7]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   249    8     2A1        4A1+{A1}    5   14   26    1     6     14                                                        [e1-e2, e3-e4]                                                                      [e0-e1-e3-e6, e0-e2-e4-e6, e0-e5-e6-e7, e0-e2-e3-e7, e0-e1-e4-e7]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   250    8     2A1       3{A1}+2A1    5   14   26    3     4      8                                                        [e1-e2, e3-e4]                                                                  [e0-e1-e3-e6, e0-e2-e4-e6, e5-e7, e0-e5-e6-e7, 2e0-e1-e2-e3-e4-e5-e7]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   251    8     2A1           5{A1}    5   14   26    5     2      6                                                        [e1-e2, e3-e4]                                                                  [e5-e6, 2e0-e1-e2-e3-e4-e5-e6, e0-e1-e2-e7, e0-e3-e4-e7, e0-e5-e6-e7]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   252    8     2A1       {A1}+[D4]    5    9   14    3     3      4                                                        [e1-e2, e3-e4]                                                                                  [e0-e1-e3-e5, e0-e2-e4-e5, e5-e6, e6-e7, e0-e5-e6-e7]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   253    8     2A1       {A1}+{D4}    5    9   14    5     1      2                                                        [e1-e2, e3-e4]                                                                                  [e0-e1-e2-e5, e0-e3-e4-e5, e5-e6, e6-e7, e0-e5-e6-e7]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   254    8     2A1            [D5]    5    8    9    3     2      3                                                        [e1-e2, e3-e4]                                                                                              [e2-e3, e1-e4, e0-e1-e2-e5, e5-e6, e6-e7]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   255    8     2A1        2A1+[D4]    6    6   10    2     4      4                                                        [e1-e2, e3-e4]                                                                           [e2-e3, e1-e4, e0-e1-e2-e5, e5-e6, e0-e2-e3-e7, e0-e1-e4-e7]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   256    8     2A1           2[A3]    6    6    9    2     4      5                                                        [e1-e2, e3-e4]                                                                           [e2-e3, e1-e4, e0-e1-e2-e5, e0-e2-e3-e6, e0-e1-e4-e6, e6-e7]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   257    8     2A1   2A1+{A1}+[A3]    6    8   13    2     4      7                                                        [e1-e2, e3-e4]                                                               [e0-e1-e3-e5, e0-e2-e4-e5, e5-e6, e0-e5-e6-e7, e0-e2-e3-e7, e0-e1-e4-e7]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   258    8     2A1      3{A1}+[A3]    6    8   13    4     2      5                                                        [e1-e2, e3-e4]                                                               [e0-e1-e3-e5, e0-e2-e4-e5, e5-e6, e0-e1-e2-e7, e0-e3-e4-e7, e0-e5-e6-e7]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   259    8     2A1   2A1+{A1}+{A3}    6    8   13    4     2      3                                                        [e1-e2, e3-e4]                                                               [e0-e1-e2-e5, e0-e3-e4-e5, e5-e6, e0-e5-e6-e7, e0-e1-e3-e7, e0-e2-e4-e7]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   260    8     2A1       2{A1}+4A1    6   10   19    2     6      7                                                        [e1-e2, e3-e4]                                                         [e0-e1-e3-e5, e0-e2-e4-e5, e0-e2-e3-e6, e0-e1-e4-e6, e0-e1-e2-e7, e0-e3-e4-e7]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   261    8     2A1       4A1+2{A1}    6   10   19    2     4      9                                                        [e1-e2, e3-e4]                                                         [e0-e1-e2-e5, e0-e1-e3-e6, e0-e2-e4-e6, e0-e5-e6-e7, e0-e2-e3-e7, e0-e1-e4-e7]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   262    8     2A1       {A1}+[D5]    6    5    6    4     1      2                                                        [e1-e2, e3-e4]                                                                                 [e2-e3, e1-e4, e0-e1-e2-e5, e5-e6, e6-e7, e0-e5-e6-e7]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   263    8     2A1   2A1+{A1}+[D4]    7    4    7    3     2      3                                                        [e1-e2, e3-e4]                                                              [e2-e3, e1-e4, e0-e1-e2-e5, e5-e6, e0-e5-e6-e7, e0-e2-e3-e7, e0-e1-e4-e7]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   264    8     2A1       3{A1}+4A1    7    7   14    3     3      6                                                        [e1-e2, e3-e4]                                            [e0-e1-e3-e5, e0-e2-e4-e5, e0-e2-e3-e6, e0-e1-e4-e6, e0-e1-e2-e7, e0-e3-e4-e7, e0-e5-e6-e7]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   265    8     2A1      {A1}+2[A3]    7    4    6    3     2      4                                                        [e1-e2, e3-e4]                                                              [e2-e3, e1-e4, e0-e1-e2-e5, e0-e2-e3-e6, e0-e1-e4-e6, e6-e7, e0-e5-e6-e7]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   266    8     3A1              A0    0   56  126    0     8      8                                                 [e1-e2, e3-e4, e5-e6]                                                                                                                                     []                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   267    8     3A1            {A1}    1   44   93    1     8      7                                                 [e1-e2, e3-e4, e5-e6]                                                                                                                [2e0-e1-e2-e3-e4-e5-e6]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   268    8     3A1            {A1}    1   44   93    1     4      7                                                 [e1-e2, e3-e4, e5-e6]                                                                                                                          [e0-e1-e2-e7]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   269    8     3A1             2A1    2   34   68    0     6      6                                                 [e1-e2, e3-e4, e5-e6]                                                                                                             [e0-e1-e3-e7, e0-e2-e4-e7]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   270    8     3A1           2{A1}    2   34   68    2     4      6                                                 [e1-e2, e3-e4, e5-e6]                                                                                                   [2e0-e1-e2-e3-e4-e5-e6, e0-e1-e2-e7]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   271    8     3A1           2{A1}    2   34   68    2     2      6                                                 [e1-e2, e3-e4, e5-e6]                                                                                                             [e0-e1-e2-e7, e0-e3-e4-e7]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   272    8     3A1            [A2]    2   32   61    0     8      7                                                 [e1-e2, e3-e4, e5-e6]                                                                                                             [e0-e1-e3-e5, e0-e2-e4-e6]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   273    8     3A1        2A1+{A1}    3   26   49    1     6      5                                                 [e1-e2, e3-e4, e5-e6]                                                                                      [2e0-e1-e2-e3-e4-e5-e6, e0-e1-e3-e7, e0-e2-e4-e7]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   274    8     3A1        2A1+{A1}    3   25   51    1     3      5                                                 [e1-e2, e3-e4, e5-e6]                                                                                                [e0-e1-e2-e7, e0-e3-e5-e7, e0-e4-e6-e7]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   275    8     3A1           3{A1}    3   26   49    3     2      5                                                 [e1-e2, e3-e4, e5-e6]                                                                                      [2e0-e1-e2-e3-e4-e5-e6, e0-e1-e2-e7, e0-e3-e4-e7]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   276    8     3A1           3{A1}    3   25   51    3     1      5                                                 [e1-e2, e3-e4, e5-e6]                                                                                                [e0-e1-e2-e7, e0-e3-e4-e7, e0-e5-e6-e7]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   277    8     3A1       {A1}+[A2]    3   24   44    1     4      6                                                 [e1-e2, e3-e4, e5-e6]                                                                                                [e0-e1-e3-e5, e0-e2-e4-e6, e0-e1-e2-e7]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   278    8     3A1            [A3]    3   22   37    1     2      5                                                 [e1-e2, e3-e4, e5-e6]                                                                                                            [e2-e3, e1-e4, e0-e1-e2-e7]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   279    8     3A1        2A1+[A2]    4   18   31    0     6      5                                                 [e1-e2, e3-e4, e5-e6]                                                                                   [e0-e1-e3-e5, e0-e2-e4-e6, e0-e2-e3-e7, e0-e1-e4-e7]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   280    8     3A1      2{A1}+[A2]    4   18   31    2     2      5                                                 [e1-e2, e3-e4, e5-e6]                                                                                   [e0-e1-e3-e5, e0-e2-e4-e6, e0-e1-e2-e7, e0-e3-e4-e7]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   281    8     3A1             2A2    4   16   28    0     4      4                                                 [e1-e2, e3-e4, e5-e6]                                                                                               [e2-e3, e1-e4, e0-e1-e5-e7, e0-e2-e6-e7]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   282    8     3A1             4A1    4   20   35    0     4      5                                                 [e1-e2, e3-e4, e5-e6]                                                                                               [e2-e3, e1-e4, e0-e2-e3-e7, e0-e1-e4-e7]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   283    8     3A1       2A1+2{A1}    4   19   36    2     3      4                                                 [e1-e2, e3-e4, e5-e6]                                                                         [2e0-e1-e2-e3-e4-e5-e6, e0-e1-e2-e7, e0-e3-e5-e7, e0-e4-e6-e7]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   284    8     3A1           4{A1}    4   19   36    4     1      4                                                 [e1-e2, e3-e4, e5-e6]                                                                         [2e0-e1-e2-e3-e4-e5-e6, e0-e1-e2-e7, e0-e3-e4-e7, e0-e5-e6-e7]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   285    8     3A1       {A1}+[A3]    4   16   26    2     2      4                                                 [e1-e2, e3-e4, e5-e6]                                                                                     [2e0-e1-e2-e3-e4-e5-e6, e2-e3, e1-e4, e0-e1-e2-e7]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   286    8     3A1       {A1}+[A3]    4   15   28    2     1      4                                                 [e1-e2, e3-e4, e5-e6]                                                                                               [e2-e3, e1-e4, e0-e1-e2-e7, e0-e5-e6-e7]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   287    8     3A1      2{A1}+[A3]    5   11   19    3     1      3                                                 [e1-e2, e3-e4, e5-e6]                                                                        [2e0-e1-e2-e3-e4-e5-e6, e2-e3, e1-e4, e0-e1-e2-e7, e0-e5-e6-e7]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   288    8     3A1   2A1+{A1}+[A2]    5   13   22    1     3      4                                                 [e1-e2, e3-e4, e5-e6]                                                                      [e0-e1-e3-e5, e0-e2-e4-e6, e0-e1-e2-e7, e0-e4-e5-e7, e0-e3-e6-e7]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   289    8     3A1      3{A1}+[A2]    5   13   22    3     1      4                                                 [e1-e2, e3-e4, e5-e6]                                                                      [e0-e1-e3-e5, e0-e2-e4-e6, e0-e1-e2-e7, e0-e3-e4-e7, e0-e5-e6-e7]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   290    8     3A1        4A1+{A1}    5   14   26    1     4      4                                                 [e1-e2, e3-e4, e5-e6]                                                                        [2e0-e1-e2-e3-e4-e5-e6, e2-e3, e1-e4, e0-e2-e3-e7, e0-e1-e4-e7]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   291    8     3A1        4A1+{A1}    5   14   26    1     2      4                                                 [e1-e2, e3-e4, e5-e6]                                                                                  [e2-e3, e1-e4, e0-e5-e6-e7, e0-e2-e3-e7, e0-e1-e4-e7]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   292    8     3A1        {A1}+2A2    5   12   19    1     4      3                                                 [e1-e2, e3-e4, e5-e6]                                                                        [2e0-e1-e2-e3-e4-e5-e6, e2-e3, e1-e4, e0-e1-e5-e7, e0-e2-e6-e7]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   293    8     3A1       [A2]+[A3]    5   10   16    1     2      4                                                 [e1-e2, e3-e4, e5-e6]                                                                                  [e2-e3, e1-e4, e0-e2-e3-e5, e0-e1-e4-e6, e0-e1-e2-e7]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   294    8     3A1            [A5]    5    7   13    1     1      3                                                 [e1-e2, e3-e4, e5-e6]                                                                                              [e2-e3, e1-e4, e4-e5, e3-e6, e0-e1-e2-e7]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   295    8     3A1             2A3    6    6    9    0     2      3                                                 [e1-e2, e3-e4, e5-e6]                                                                                 [e2-e3, e1-e4, e4-e5, e3-e6, e0-e2-e3-e7, e0-e1-e4-e7]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   296    8     3A1        [A2]+2A2    6    8   11    0     4      3                                                 [e1-e2, e3-e4, e5-e6]                                                                     [e2-e3, e1-e4, e0-e2-e3-e5, e0-e1-e4-e6, e0-e1-e5-e7, e0-e2-e6-e7]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   297    8     3A1       4A1+2{A1}    6   10   19    2     2      3                                                 [e1-e2, e3-e4, e5-e6]                                                           [2e0-e1-e2-e3-e4-e5-e6, e2-e3, e1-e4, e0-e5-e6-e7, e0-e2-e3-e7, e0-e1-e4-e7]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   298    8     3A1  {A1}+[A2]+[A3]    6    7   11    2     1      3                                                 [e1-e2, e3-e4, e5-e6]                                                                     [e2-e3, e1-e4, e0-e2-e3-e5, e0-e1-e4-e6, e0-e1-e2-e7, e0-e5-e6-e7]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   299    8     3A1       {A1}+[A5]    6    5    8    2     1      2                                                 [e1-e2, e3-e4, e5-e6]                                                                       [2e0-e1-e2-e3-e4-e5-e6, e2-e3, e1-e4, e4-e5, e3-e6, e0-e1-e2-e7]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   300    8     3A1        {A1}+2A3    7    4    6    1     2      2                                                 [e1-e2, e3-e4, e5-e6]                                                          [2e0-e1-e2-e3-e4-e5-e6, e2-e3, e1-e4, e4-e5, e3-e6, e0-e2-e3-e7, e0-e1-e4-e7]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   301    8     3A1       [A2]+[A5]    7    3    4    1     1      2                                                 [e1-e2, e3-e4, e5-e6]                                                                    [e2-e3, e1-e4, e4-e5, e3-e6, e0-e1-e4-e5, e0-e2-e3-e6, e0-e1-e2-e7]                                                                                                                                    [(1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   302    8    3A1'              A0    0   56  126    0     0     24                                           [e4-e5, e6-e7, e0-e1-e2-e3]                                                                                                                                     []                                                                                                                           [(2, 1, 1, 1, 0, 0, 0, 0), (-1, 0, -1, -1, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 0, 1, 0)]
   303    8    3A1'            {A1}    1   44   93    1     0     15                                           [e4-e5, e6-e7, e0-e1-e2-e3]                                                                                                                                [e1-e2]                                                                                                                           [(2, 1, 1, 1, 0, 0, 0, 0), (-1, 0, -1, -1, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 0, 1, 0)]
   304    8    3A1'             2A1    2   34   68    0     0     18                                           [e4-e5, e6-e7, e0-e1-e2-e3]                                                                                                                   [e3-e4, e0-e1-e2-e5]                                                                                                                           [(2, 1, 1, 1, 0, 0, 0, 0), (-1, 0, -1, -1, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 0, 1, 0)]
   305    8    3A1'           2{A1}    2   34   68    2     0     10                                           [e4-e5, e6-e7, e0-e1-e2-e3]                                                                                                                   [e1-e2, e0-e3-e4-e5]                                                                                                                           [(2, 1, 1, 1, 0, 0, 0, 0), (-1, 0, -1, -1, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 0, 1, 0)]
   306    8    3A1'            {A2}    2   32   61    2     0      7                                           [e4-e5, e6-e7, e0-e1-e2-e3]                                                                                                                         [e1-e2, e2-e3]                                                                                                                           [(2, 1, 1, 1, 0, 0, 0, 0), (-1, 0, -1, -1, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 0, 1, 0)]
   307    8    3A1'        2A1+{A1}    3   26   49    1     0     11                                           [e4-e5, e6-e7, e0-e1-e2-e3]                                                                                                            [e1-e2, e3-e4, e0-e1-e2-e5]                                                                                                                           [(2, 1, 1, 1, 0, 0, 0, 0), (-1, 0, -1, -1, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 0, 1, 0)]
   308    8    3A1'           3{A1}    3   26   49    3     0      7                                           [e4-e5, e6-e7, e0-e1-e2-e3]                                                                                                      [e1-e2, e0-e3-e4-e5, e0-e3-e6-e7]                                                                                                                           [(2, 1, 1, 1, 0, 0, 0, 0), (-1, 0, -1, -1, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 0, 1, 0)]
   309    8    3A1'            [A3]    3   22   37    1     0      9                                           [e4-e5, e6-e7, e0-e1-e2-e3]                                                                                                            [e1-e2, e2-e4, e0-e1-e3-e5]                                                                                                                           [(2, 1, 1, 1, 0, 0, 0, 0), (-1, 0, -1, -1, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 0, 1, 0)]
   310    8    3A1'            {A3}    3   22   37    3     0      3                                           [e4-e5, e6-e7, e0-e1-e2-e3]                                                                                                  [e1-e2, e2-e3, 2e0-e1-e2-e4-e5-e6-e7]                                                                                                                           [(2, 1, 1, 1, 0, 0, 0, 0), (-1, 0, -1, -1, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 0, 1, 0)]
   311    8    3A1'        2A1+{A2}    4   18   31    2     0      5                                           [e4-e5, e6-e7, e0-e1-e2-e3]                                                                                                           [e1-e2, e2-e3, e5-e6, e4-e7]                                                                                                                           [(2, 1, 1, 1, 0, 0, 0, 0), (-1, 0, -1, -1, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 0, 1, 0)]
   312    8    3A1'             2A2    4   16   28    0     0     12                                           [e4-e5, e6-e7, e0-e1-e2-e3]                                                                                                     [e3-e4, e5-e6, e4-e7, e0-e1-e2-e5]                                                                                                                           [(2, 1, 1, 1, 0, 0, 0, 0), (-1, 0, -1, -1, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 0, 1, 0)]
   313    8    3A1'             4A1    4   20   35    0     0     13                                           [e4-e5, e6-e7, e0-e1-e2-e3]                                                                                               [e3-e4, e2-e5, e0-e1-e3-e4, e0-e1-e2-e5]                                                                                                                           [(2, 1, 1, 1, 0, 0, 0, 0), (-1, 0, -1, -1, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 0, 1, 0)]
   314    8    3A1'       2A1+2{A1}    4   20   35    2     0      7                                           [e4-e5, e6-e7, e0-e1-e2-e3]                                                                                               [e1-e2, e0-e3-e4-e5, e3-e4, e0-e1-e2-e5]                                                                                                                           [(2, 1, 1, 1, 0, 0, 0, 0), (-1, 0, -1, -1, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 0, 1, 0)]
   315    8    3A1'           4{A1}    4   20   35    4     0      5                                           [e4-e5, e6-e7, e0-e1-e2-e3]                                                                               [e1-e2, e0-e3-e4-e5, e0-e3-e6-e7, 2e0-e1-e2-e4-e5-e6-e7]                                                                                                                           [(2, 1, 1, 1, 0, 0, 0, 0), (-1, 0, -1, -1, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 0, 1, 0)]
   316    8    3A1'       {A1}+[A3]    4   16   26    2     0      6                                           [e4-e5, e6-e7, e0-e1-e2-e3]                                                                                                     [e1-e2, e0-e3-e4-e5, e5-e6, e4-e7]                                                                                                                           [(2, 1, 1, 1, 0, 0, 0, 0), (-1, 0, -1, -1, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 0, 1, 0)]
   317    8    3A1'            [D4]    4   14   19    2     0      3                                           [e4-e5, e6-e7, e0-e1-e2-e3]                                                                                                     [e1-e2, e2-e3, e3-e4, e0-e1-e2-e5]                                                                                                                           [(2, 1, 1, 1, 0, 0, 0, 0), (-1, 0, -1, -1, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 0, 1, 0)]
   318    8    3A1'            {D4}    4   14   19    4     0      1                                           [e4-e5, e6-e7, e0-e1-e2-e3]                                                                                               [e2-e3, e1-e2, e0-e1-e4-e5, e0-e1-e6-e7]                                                                                                                           [(2, 1, 1, 1, 0, 0, 0, 0), (-1, 0, -1, -1, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 0, 1, 0)]
   319    8    3A1'        2A1+[A3]    5   12   18    1     0      6                                           [e4-e5, e6-e7, e0-e1-e2-e3]                                                                                        [e1-e2, e3-e4, e2-e5, e0-e1-e3-e4, e0-e1-e2-e5]                                                                                                                           [(2, 1, 1, 1, 0, 0, 0, 0), (-1, 0, -1, -1, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 0, 1, 0)]
   320    8    3A1'      2{A1}+[A3]    5   12   18    3     0      4                                           [e4-e5, e6-e7, e0-e1-e2-e3]                                                                                  [e1-e2, e0-e3-e4-e5, e0-e3-e6-e7, e3-e4, e0-e1-e2-e5]                                                                                                                           [(2, 1, 1, 1, 0, 0, 0, 0), (-1, 0, -1, -1, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 0, 1, 0)]
   321    8    3A1'        2A1+{A3}    5   12   18    3     0      2                                           [e4-e5, e6-e7, e0-e1-e2-e3]                                                                                    [e1-e2, e2-e3, 2e0-e1-e2-e4-e5-e6-e7, e5-e6, e4-e7]                                                                                                                           [(2, 1, 1, 1, 0, 0, 0, 0), (-1, 0, -1, -1, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 0, 1, 0)]
   322    8    3A1'        4A1+{A1}    5   14   26    1     0      8                                           [e4-e5, e6-e7, e0-e1-e2-e3]                                                                        [e1-e2, e3-e4, e0-e1-e2-e5, e0-e5-e6-e7, 2e0-e1-e2-e3-e4-e6-e7]                                                                                                                           [(2, 1, 1, 1, 0, 0, 0, 0), (-1, 0, -1, -1, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 0, 1, 0)]
   323    8    3A1'        {A1}+2A2    5   12   19    1     0      7                                           [e4-e5, e6-e7, e0-e1-e2-e3]                                                                                              [e1-e2, e3-e4, e5-e6, e4-e7, e0-e1-e2-e5]                                                                                                                           [(2, 1, 1, 1, 0, 0, 0, 0), (-1, 0, -1, -1, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 0, 1, 0)]
   324    8    3A1'            [A5]    5    8   11    1     0      5                                           [e4-e5, e6-e7, e0-e1-e2-e3]                                                                                        [e1-e2, e3-e4, e2-e6, e0-e1-e2-e5, e0-e1-e3-e7]                                                                                                                           [(2, 1, 1, 1, 0, 0, 0, 0), (-1, 0, -1, -1, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 0, 1, 0)]
   325    8    3A1'            [D5]    5    8    9    3     0      1                                           [e4-e5, e6-e7, e0-e1-e2-e3]                                                                                              [e2-e3, e1-e2, e0-e1-e4-e5, e5-e6, e4-e7]                                                                                                                           [(2, 1, 1, 1, 0, 0, 0, 0), (-1, 0, -1, -1, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 0, 1, 0)]
   326    8    3A1'        2A1+[D4]    6    6   10    2     0      2                                           [e4-e5, e6-e7, e0-e1-e2-e3]                                                                 [e1-e2, e2-e3, e3-e4, e0-e1-e2-e5, e0-e5-e6-e7, 2e0-e1-e2-e3-e4-e6-e7]                                                                                                                           [(2, 1, 1, 1, 0, 0, 0, 0), (-1, 0, -1, -1, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 0, 1, 0)]
   327    8    3A1'             2A3    6    6    9    0     0      7                                           [e4-e5, e6-e7, e0-e1-e2-e3]                                                                           [e3-e4, e2-e5, e1-e6, e0-e1-e3-e4, e0-e1-e2-e5, e0-e2-e3-e7]                                                                                                                           [(2, 1, 1, 1, 0, 0, 0, 0), (-1, 0, -1, -1, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 0, 1, 0)]
   328    8    3A1'           2[A3]    6    6    9    2     0      3                                           [e4-e5, e6-e7, e0-e1-e2-e3]                                                                           [e1-e2, e0-e3-e4-e5, e5-e6, e4-e7, e0-e1-e5-e6, e0-e1-e4-e7]                                                                                                                           [(2, 1, 1, 1, 0, 0, 0, 0), (-1, 0, -1, -1, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 0, 1, 0)]
   329    8    3A1'        2A2+{A2}    6    8   11    2     0      3                                           [e4-e5, e6-e7, e0-e1-e2-e3]                                                                       [e1-e2, e2-e3, e5-e6, e4-e7, e0-e4-e5-e6, 2e0-e1-e2-e3-e4-e5-e7]                                                                                                                           [(2, 1, 1, 1, 0, 0, 0, 0), (-1, 0, -1, -1, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 0, 1, 0)]
   330    8    3A1'       4A1+2{A1}    6   10   19    2     0      5                                           [e4-e5, e6-e7, e0-e1-e2-e3]                                                           [e1-e2, e0-e3-e4-e5, e3-e4, e0-e1-e2-e5, e0-e5-e6-e7, 2e0-e1-e2-e3-e4-e6-e7]                                                                                                                           [(2, 1, 1, 1, 0, 0, 0, 0), (-1, 0, -1, -1, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 0, 1, 0)]
   331    8    3A1'       {A1}+[A5]    6    6    7    2     0      3                                           [e4-e5, e6-e7, e0-e1-e2-e3]                                                                                 [e1-e2, e0-e3-e4-e5, e3-e4, e5-e6, e4-e7, e0-e1-e2-e5]                                                                                                                           [(2, 1, 1, 1, 0, 0, 0, 0), (-1, 0, -1, -1, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 0, 1, 0)]
   332    8    3A1'            [E6]    6    4    3    2     0      1                                           [e4-e5, e6-e7, e0-e1-e2-e3]                                                                                       [e1-e2, e2-e3, e3-e4, e5-e6, e4-e7, e0-e1-e2-e5]                                                                                                                           [(2, 1, 1, 1, 0, 0, 0, 0), (-1, 0, -1, -1, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 0, 1, 0)]
   333    8    3A1'        {A1}+2A3    7    4    6    1     0      4                                           [e4-e5, e6-e7, e0-e1-e2-e3]                                                                    [e1-e2, e3-e4, e4-e6, e5-e7, e0-e1-e2-e5, e0-e3-e4-e6, e0-e3-e5-e7]                                                                                                                           [(2, 1, 1, 1, 0, 0, 0, 0), (-1, 0, -1, -1, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 0, 1, 0)]
   334    8    3A1'            [A7]    7    2    2    1     0      2                                           [e4-e5, e6-e7, e0-e1-e2-e3]                                                                          [e1-e2, e3-e4, e2-e5, e4-e6, e5-e7, e0-e1-e3-e4, e0-e1-e2-e5]                                                                                                                           [(2, 1, 1, 1, 0, 0, 0, 0), (-1, 0, -1, -1, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 0, 1, 0)]
   335    8     4A1              A0    0   56  126    0     0      6                                    [e1-e2, e4-e5, e6-e7, e0-e1-e2-e3]                                                                                                                                     []                                                                                                                           [(2, 1, 1, 1, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0), (-1, 0, -1, -1, 0, 0, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 0, 1, 0)]
   336    8     4A1            {A1}    1   44   93    1     0      5                                    [e1-e2, e4-e5, e6-e7, e0-e1-e2-e3]                                                                                                                          [e0-e3-e4-e5]                                                                                                                           [(2, 1, 1, 1, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0), (-1, 0, -1, -1, 0, 0, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 0, 1, 0)]
   337    8     4A1             2A1    2   34   68    0     0      4                                    [e1-e2, e4-e5, e6-e7, e0-e1-e2-e3]                                                                                                                   [e3-e4, e0-e1-e2-e5]                                                                                                                           [(2, 1, 1, 1, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0), (-1, 0, -1, -1, 0, 0, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 0, 1, 0)]
   338    8     4A1           2{A1}    2   34   68    2     0      4                                    [e1-e2, e4-e5, e6-e7, e0-e1-e2-e3]                                                                                                             [e0-e3-e4-e5, e0-e3-e6-e7]                                                                                                                           [(2, 1, 1, 1, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0), (-1, 0, -1, -1, 0, 0, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 0, 1, 0)]
   339    8     4A1            [A2]    2   32   61    0     0      5                                    [e1-e2, e4-e5, e6-e7, e0-e1-e2-e3]                                                                                                                   [e2-e4, e0-e2-e3-e5]                                                                                                                           [(2, 1, 1, 1, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0), (-1, 0, -1, -1, 0, 0, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 0, 1, 0)]
   340    8     4A1        2A1+{A1}    3   26   49    1     0      3                                    [e1-e2, e4-e5, e6-e7, e0-e1-e2-e3]                                                                                                      [e0-e3-e4-e5, e3-e4, e0-e1-e2-e5]                                                                                                                           [(2, 1, 1, 1, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0), (-1, 0, -1, -1, 0, 0, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 0, 1, 0)]
   341    8     4A1           3{A1}    3   26   49    3     0      3                                    [e1-e2, e4-e5, e6-e7, e0-e1-e2-e3]                                                                                      [e0-e3-e4-e5, e0-e3-e6-e7, 2e0-e1-e2-e4-e5-e6-e7]                                                                                                                           [(2, 1, 1, 1, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0), (-1, 0, -1, -1, 0, 0, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 0, 1, 0)]
   342    8     4A1       {A1}+[A2]    3   24   44    1     0      4                                    [e1-e2, e4-e5, e6-e7, e0-e1-e2-e3]                                                                                                      [e0-e3-e4-e5, e2-e6, e0-e2-e3-e7]                                                                                                                           [(2, 1, 1, 1, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0), (-1, 0, -1, -1, 0, 0, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 0, 1, 0)]
   343    8     4A1            [A3]    3   22   37    1     0      3                                    [e1-e2, e4-e5, e6-e7, e0-e1-e2-e3]                                                                                                            [e0-e3-e4-e5, e5-e6, e4-e7]                                                                                                                           [(2, 1, 1, 1, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0), (-1, 0, -1, -1, 0, 0, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 0, 1, 0)]
   344    8     4A1        2A1+[A2]    4   18   31    0     0      3                                    [e1-e2, e4-e5, e6-e7, e0-e1-e2-e3]                                                                                               [e3-e4, e2-e5, e0-e2-e3-e4, e0-e1-e2-e5]                                                                                                                           [(2, 1, 1, 1, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0), (-1, 0, -1, -1, 0, 0, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 0, 1, 0)]
   345    8     4A1      2{A1}+[A2]    4   18   31    2     0      3                                    [e1-e2, e4-e5, e6-e7, e0-e1-e2-e3]                                                                                   [e0-e3-e4-e5, e0-e3-e6-e7, e0-e1-e4-e6, e0-e2-e5-e7]                                                                                                                           [(2, 1, 1, 1, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0), (-1, 0, -1, -1, 0, 0, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 0, 1, 0)]
   346    8     4A1           2[A2]    4   16   28    0     0      4                                    [e1-e2, e4-e5, e6-e7, e0-e1-e2-e3]                                                                                               [e2-e4, e1-e6, e0-e2-e3-e5, e0-e1-e3-e7]                                                                                                                           [(2, 1, 1, 1, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0), (-1, 0, -1, -1, 0, 0, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 0, 1, 0)]
   347    8     4A1             2A2    4   16   28    0     0      2                                    [e1-e2, e4-e5, e6-e7, e0-e1-e2-e3]                                                                                                     [e3-e4, e5-e6, e4-e7, e0-e1-e2-e5]                                                                                                                           [(2, 1, 1, 1, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0), (-1, 0, -1, -1, 0, 0, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 0, 1, 0)]
   348    8     4A1             4A1    4   20   35    0     0      3                                    [e1-e2, e4-e5, e6-e7, e0-e1-e2-e3]                                                                               [e3-e4, e0-e1-e2-e5, e0-e5-e6-e7, 2e0-e1-e2-e3-e4-e6-e7]                                                                                                                           [(2, 1, 1, 1, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0), (-1, 0, -1, -1, 0, 0, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 0, 1, 0)]
   349    8     4A1       {A1}+[A3]    4   16   26    2     0      2                                    [e1-e2, e4-e5, e6-e7, e0-e1-e2-e3]                                                                                         [e0-e3-e4-e5, e0-e3-e6-e7, e3-e4, e0-e1-e2-e5]                                                                                                                           [(2, 1, 1, 1, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0), (-1, 0, -1, -1, 0, 0, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 0, 1, 0)]
   350    8     4A1            [A4]    4   14   21    0     0      3                                    [e1-e2, e4-e5, e6-e7, e0-e1-e2-e3]                                                                                               [e3-e4, e2-e6, e0-e1-e2-e5, e0-e2-e3-e7]                                                                                                                           [(2, 1, 1, 1, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0), (-1, 0, -1, -1, 0, 0, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 0, 1, 0)]
   351    8     4A1        4A1+{A1}    5   14   26    1     0      2                                    [e1-e2, e4-e5, e6-e7, e0-e1-e2-e3]                                                                  [e0-e3-e4-e5, e3-e4, e0-e1-e2-e5, e0-e5-e6-e7, 2e0-e1-e2-e3-e4-e6-e7]                                                                                                                           [(2, 1, 1, 1, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0), (-1, 0, -1, -1, 0, 0, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 0, 1, 0)]
   352    8     4A1      {A1}+2[A2]    5   12   19    1     0      3                                    [e1-e2, e4-e5, e6-e7, e0-e1-e2-e3]                                                                            [e0-e3-e4-e5, e2-e6, e0-e2-e4-e6, e0-e2-e3-e7, e0-e1-e5-e7]                                                                                                                           [(2, 1, 1, 1, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0), (-1, 0, -1, -1, 0, 0, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 0, 1, 0)]
   353    8     4A1       {A1}+[A4]    5   10   14    1     0      2                                    [e1-e2, e4-e5, e6-e7, e0-e1-e2-e3]                                                                                  [e0-e3-e4-e5, e3-e4, e2-e6, e0-e1-e2-e5, e0-e2-e3-e7]                                                                                                                           [(2, 1, 1, 1, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0), (-1, 0, -1, -1, 0, 0, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 0, 1, 0)]
   354    8     4A1       [A2]+[A3]    5   10   16    1     0      2                                    [e1-e2, e4-e5, e6-e7, e0-e1-e2-e3]                                                                                  [e0-e3-e4-e5, e5-e6, e4-e7, e0-e1-e5-e6, e0-e2-e4-e7]                                                                                                                           [(2, 1, 1, 1, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0), (-1, 0, -1, -1, 0, 0, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 0, 1, 0)]
   355    8     4A1            [A5]    5    8   11    1     0      1                                    [e1-e2, e4-e5, e6-e7, e0-e1-e2-e3]                                                                                        [e0-e3-e4-e5, e3-e4, e5-e6, e4-e7, e0-e1-e2-e5]                                                                                                                           [(2, 1, 1, 1, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0), (-1, 0, -1, -1, 0, 0, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 0, 1, 0)]
   356    8     4A1             2A3    6    6    9    0     0      1                                    [e1-e2, e4-e5, e6-e7, e0-e1-e2-e3]                                                                           [e3-e4, e4-e6, e5-e7, e0-e1-e2-e5, e0-e3-e4-e6, e0-e3-e5-e7]                                                                                                                           [(2, 1, 1, 1, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0), (-1, 0, -1, -1, 0, 0, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 0, 1, 0)]
   357    8     4A1           3[A2]    6    8   11    0     0      3                                    [e1-e2, e4-e5, e6-e7, e0-e1-e2-e3]                                                                     [e2-e4, e1-e6, e0-e2-e3-e5, e0-e1-e5-e6, e0-e1-e3-e7, e0-e2-e4-e7]                                                                                                                           [(2, 1, 1, 1, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0), (-1, 0, -1, -1, 0, 0, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 0, 1, 0)]
   358    8     4A1       [A2]+[A4]    6    6    8    0     0      2                                    [e1-e2, e4-e5, e6-e7, e0-e1-e2-e3]                                                                           [e3-e4, e2-e5, e1-e6, e0-e2-e3-e4, e0-e1-e2-e5, e0-e1-e3-e7]                                                                                                                           [(2, 1, 1, 1, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0), (-1, 0, -1, -1, 0, 0, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 0, 1, 0)]
   359    8     4A1            [A6]    6    4    5    0     0      1                                    [e1-e2, e4-e5, e6-e7, e0-e1-e2-e3]                                                                                 [e3-e4, e2-e5, e4-e6, e5-e7, e0-e2-e3-e4, e0-e1-e2-e5]                                                                                                                           [(2, 1, 1, 1, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0), (-1, 0, -1, -1, 0, 0, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 0, 1, 0)]
   360    8      D4              A0    0   56  126    0     8      6                                    [e2-e3, e3-e4, e4-e5, e0-e1-e2-e3]                                                                                                                                     []                                                                                                                  [(3, 2, 1, 1, 1, 1, 0, 0), (-2, -1, -1, -1, -1, -1, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0), (-1, -1, 0, 0, -1, 0, 0, 0), (-1, -1, 0, 0, 0, -1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   361    8      D4            {A1}    1   44   93    1     4      5                                    [e2-e3, e3-e4, e4-e5, e0-e1-e2-e3]                                                                                                                                [e6-e7]                                                                                                                  [(3, 2, 1, 1, 1, 1, 0, 0), (-2, -1, -1, -1, -1, -1, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0), (-1, -1, 0, 0, -1, 0, 0, 0), (-1, -1, 0, 0, 0, -1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   362    8      D4             2A1    2   34   68    0     6      4                                    [e2-e3, e3-e4, e4-e5, e0-e1-e2-e3]                                                                                                                   [e5-e7, e0-e1-e5-e7]                                                                                                                  [(3, 2, 1, 1, 1, 1, 0, 0), (-2, -1, -1, -1, -1, -1, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0), (-1, -1, 0, 0, -1, 0, 0, 0), (-1, -1, 0, 0, 0, -1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   363    8      D4           2{A1}    2   34   68    2     2      4                                    [e2-e3, e3-e4, e4-e5, e0-e1-e2-e3]                                                                                                                   [e6-e7, e0-e1-e6-e7]                                                                                                                  [(3, 2, 1, 1, 1, 1, 0, 0), (-2, -1, -1, -1, -1, -1, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0), (-1, -1, 0, 0, -1, 0, 0, 0), (-1, -1, 0, 0, 0, -1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   364    8      D4        2A1+{A1}    3   25   51    1     3      3                                    [e2-e3, e3-e4, e4-e5, e0-e1-e2-e3]                                                                                            [e6-e7, e0-e2-e6-e7, 2e0-e1-e3-e4-e5-e6-e7]                                                                                                                  [(3, 2, 1, 1, 1, 1, 0, 0), (-2, -1, -1, -1, -1, -1, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0), (-1, -1, 0, 0, -1, 0, 0, 0), (-1, -1, 0, 0, 0, -1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   365    8      D4           3{A1}    3   25   51    3     1      3                                    [e2-e3, e3-e4, e4-e5, e0-e1-e2-e3]                                                                                            [e6-e7, e0-e1-e6-e7, 2e0-e2-e3-e4-e5-e6-e7]                                                                                                                  [(3, 2, 1, 1, 1, 1, 0, 0), (-2, -1, -1, -1, -1, -1, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0), (-1, -1, 0, 0, -1, 0, 0, 0), (-1, -1, 0, 0, 0, -1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   366    8      D4            [A3]    3   22   37    1     2      3                                    [e2-e3, e3-e4, e4-e5, e0-e1-e2-e3]                                                                                                            [e5-e6, e0-e1-e5-e6, e6-e7]                                                                                                                  [(3, 2, 1, 1, 1, 1, 0, 0), (-2, -1, -1, -1, -1, -1, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0), (-1, -1, 0, 0, -1, 0, 0, 0), (-1, -1, 0, 0, 0, -1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   367    8      D4             2A2    4   16   28    0     4      2                                    [e2-e3, e3-e4, e4-e5, e0-e1-e2-e3]                                                                                     [e5-e6, e0-e1-e5-e6, e1-e7, 2e0-e1-e2-e3-e4-e5-e7]                                                                                                                  [(3, 2, 1, 1, 1, 1, 0, 0), (-2, -1, -1, -1, -1, -1, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0), (-1, -1, 0, 0, -1, 0, 0, 0), (-1, -1, 0, 0, 0, -1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   368    8      D4             4A1    4   20   35    0     4      3                                    [e2-e3, e3-e4, e4-e5, e0-e1-e2-e3]                                                                                               [e5-e6, e0-e1-e5-e6, e4-e7, e0-e1-e4-e7]                                                                                                                  [(3, 2, 1, 1, 1, 1, 0, 0), (-2, -1, -1, -1, -1, -1, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0), (-1, -1, 0, 0, -1, 0, 0, 0), (-1, -1, 0, 0, 0, -1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   369    8      D4       {A1}+[A3]    4   15   28    2     1      2                                    [e2-e3, e3-e4, e4-e5, e0-e1-e2-e3]                                                                                     [e5-e6, e0-e1-e5-e6, e6-e7, 2e0-e2-e3-e4-e5-e6-e7]                                                                                                                  [(3, 2, 1, 1, 1, 1, 0, 0), (-2, -1, -1, -1, -1, -1, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0), (-1, -1, 0, 0, -1, 0, 0, 0), (-1, -1, 0, 0, 0, -1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   370    8      D4        4A1+{A1}    5   14   26    1     2      2                                    [e2-e3, e3-e4, e4-e5, e0-e1-e2-e3]                                                                        [e5-e6, e0-e1-e5-e6, 2e0-e2-e3-e4-e5-e6-e7, e4-e7, e0-e1-e4-e7]                                                                                                                  [(3, 2, 1, 1, 1, 1, 0, 0), (-2, -1, -1, -1, -1, -1, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0), (-1, -1, 0, 0, -1, 0, 0, 0), (-1, -1, 0, 0, 0, -1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   371    8      D4            [A5]    5    7   13    1     1      1                                    [e2-e3, e3-e4, e4-e5, e0-e1-e2-e3]                                                                                        [e1-e2, e0-e3-e4-e5, e5-e6, e0-e1-e5-e6, e6-e7]                                                                                                                  [(3, 2, 1, 1, 1, 1, 0, 0), (-2, -1, -1, -1, -1, -1, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0), (-1, -1, 0, 0, -1, 0, 0, 0), (-1, -1, 0, 0, 0, -1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   372    8      D4             2A3    6    6    9    0     2      1                                    [e2-e3, e3-e4, e4-e5, e0-e1-e2-e3]                                                                           [e1-e2, e0-e3-e4-e5, e5-e6, e0-e1-e5-e6, e4-e7, e0-e1-e4-e7]                                                                                                                  [(3, 2, 1, 1, 1, 1, 0, 0), (-2, -1, -1, -1, -1, -1, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0), (-1, -1, 0, 0, -1, 0, 0, 0), (-1, -1, 0, 0, 0, -1, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1)]
   373    8   A1+D4              A0    0   56  126    0     0      4                             [e2-e3, e3-e4, e4-e5, e6-e7, e0-e1-e2-e3]                                                                                                                                     []                                                                                                                  [(3, 2, 1, 1, 1, 1, 0, 0), (-2, -1, -1, -1, -1, -1, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0), (-1, -1, 0, 0, -1, 0, 0, 0), (-1, -1, 0, 0, 0, -1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 0, 1, 0)]
   374    8   A1+D4            {A1}    1   44   93    1     0      3                             [e2-e3, e3-e4, e4-e5, e6-e7, e0-e1-e2-e3]                                                                                                                          [e0-e1-e6-e7]                                                                                                                  [(3, 2, 1, 1, 1, 1, 0, 0), (-2, -1, -1, -1, -1, -1, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0), (-1, -1, 0, 0, -1, 0, 0, 0), (-1, -1, 0, 0, 0, -1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 0, 1, 0)]
   375    8   A1+D4             2A1    2   34   68    0     0      2                             [e2-e3, e3-e4, e4-e5, e6-e7, e0-e1-e2-e3]                                                                                                                   [e1-e2, e0-e3-e4-e5]                                                                                                                  [(3, 2, 1, 1, 1, 1, 0, 0), (-2, -1, -1, -1, -1, -1, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0), (-1, -1, 0, 0, -1, 0, 0, 0), (-1, -1, 0, 0, 0, -1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 0, 1, 0)]
   376    8   A1+D4           2{A1}    2   34   68    2     0      2                             [e2-e3, e3-e4, e4-e5, e6-e7, e0-e1-e2-e3]                                                                                                   [e0-e1-e6-e7, 2e0-e2-e3-e4-e5-e6-e7]                                                                                                                  [(3, 2, 1, 1, 1, 1, 0, 0), (-2, -1, -1, -1, -1, -1, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0), (-1, -1, 0, 0, -1, 0, 0, 0), (-1, -1, 0, 0, 0, -1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 0, 1, 0)]
   377    8   A1+D4            [A2]    2   32   61    0     0      3                             [e2-e3, e3-e4, e4-e5, e6-e7, e0-e1-e2-e3]                                                                                                                   [e5-e6, e0-e1-e5-e7]                                                                                                                  [(3, 2, 1, 1, 1, 1, 0, 0), (-2, -1, -1, -1, -1, -1, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0), (-1, -1, 0, 0, -1, 0, 0, 0), (-1, -1, 0, 0, 0, -1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 0, 1, 0)]
   378    8   A1+D4       {A1}+[A2]    3   24   44    1     0      2                             [e2-e3, e3-e4, e4-e5, e6-e7, e0-e1-e2-e3]                                                                                            [e0-e1-e6-e7, e1-e6, 2e0-e1-e2-e3-e4-e5-e7]                                                                                                                  [(3, 2, 1, 1, 1, 1, 0, 0), (-2, -1, -1, -1, -1, -1, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0), (-1, -1, 0, 0, -1, 0, 0, 0), (-1, -1, 0, 0, 0, -1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 0, 1, 0)]
   379    8   A1+D4            [A3]    3   22   37    1     0      1                             [e2-e3, e3-e4, e4-e5, e6-e7, e0-e1-e2-e3]                                                                                                      [e0-e1-e6-e7, e1-e2, e0-e3-e4-e5]                                                                                                                  [(3, 2, 1, 1, 1, 1, 0, 0), (-2, -1, -1, -1, -1, -1, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0), (-1, -1, 0, 0, -1, 0, 0, 0), (-1, -1, 0, 0, 0, -1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 0, 1, 0)]
   380    8   A1+D4           2[A2]    4   16   28    0     0      2                             [e2-e3, e3-e4, e4-e5, e6-e7, e0-e1-e2-e3]                                                                                     [e5-e6, e1-e7, e0-e1-e5-e7, 2e0-e1-e2-e3-e4-e5-e6]                                                                                                                  [(3, 2, 1, 1, 1, 1, 0, 0), (-2, -1, -1, -1, -1, -1, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0), (-1, -1, 0, 0, -1, 0, 0, 0), (-1, -1, 0, 0, 0, -1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 0, 1, 0)]
   381    8   A1+D4             4A1    4   20   35    0     0      1                             [e2-e3, e3-e4, e4-e5, e6-e7, e0-e1-e2-e3]                                                                               [e1-e2, e0-e3-e4-e5, e0-e3-e6-e7, 2e0-e1-e2-e4-e5-e6-e7]                                                                                                                  [(3, 2, 1, 1, 1, 1, 0, 0), (-2, -1, -1, -1, -1, -1, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0), (-1, -1, 0, 0, -1, 0, 0, 0), (-1, -1, 0, 0, 0, -1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 0, 1, 0)]
   382    8   A1+D4            [A4]    4   14   21    0     0      1                             [e2-e3, e3-e4, e4-e5, e6-e7, e0-e1-e2-e3]                                                                                               [e1-e2, e5-e6, e0-e3-e4-e5, e0-e1-e5-e7]                                                                                                                  [(3, 2, 1, 1, 1, 1, 0, 0), (-2, -1, -1, -1, -1, -1, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0), (-1, -1, 0, 0, -1, 0, 0, 0), (-1, -1, 0, 0, 0, -1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 0, 1, 0)]
   383    8      D6              A0    0   56  126    0     0      2                      [e2-e3, e3-e4, e4-e5, e5-e6, e6-e7, e0-e1-e2-e3]                                                                                                                                     []                                                                                                          [(4, 3, 1, 1, 1, 1, 1, 1), (-3, -2, -1, -1, -1, -1, -1, -1), (-1, -1, -1, 0, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0), (-1, -1, 0, 0, -1, 0, 0, 0), (-1, -1, 0, 0, 0, -1, 0, 0), (-1, -1, 0, 0, 0, 0, -1, 0), (-1, -1, 0, 0, 0, 0, 0, -1)]
   384    8      D6            {A1}    1   44   93    1     0      1                      [e2-e3, e3-e4, e4-e5, e5-e6, e6-e7, e0-e1-e2-e3]                                                                                                                [2e0-e2-e3-e4-e5-e6-e7]                                                                                                          [(4, 3, 1, 1, 1, 1, 1, 1), (-3, -2, -1, -1, -1, -1, -1, -1), (-1, -1, -1, 0, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0), (-1, -1, 0, 0, -1, 0, 0, 0), (-1, -1, 0, 0, 0, -1, 0, 0), (-1, -1, 0, 0, 0, 0, -1, 0), (-1, -1, 0, 0, 0, 0, 0, -1)]
   385    8      D6            [A2]    2   32   61    0     0      1                      [e2-e3, e3-e4, e4-e5, e5-e6, e6-e7, e0-e1-e2-e3]                                                                                                         [e1-e2, 2e0-e1-e3-e4-e5-e6-e7]                                                                                                          [(4, 3, 1, 1, 1, 1, 1, 1), (-3, -2, -1, -1, -1, -1, -1, -1), (-1, -1, -1, 0, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0), (-1, -1, 0, 0, -1, 0, 0, 0), (-1, -1, 0, 0, 0, -1, 0, 0), (-1, -1, 0, 0, 0, 0, -1, 0), (-1, -1, 0, 0, 0, 0, 0, -1)]
   386    8      E7              A0    0   56  126    0     0      0               [e1-e2, e2-e3, e3-e4, e4-e5, e5-e6, e6-e7, e0-e1-e2-e3]                                                                                                                                     []                                                                            [(8, 3, 3, 3, 3, 3, 3, 3), (-3, -2, -1, -1, -1, -1, -1, -1), (-3, -1, -2, -1, -1, -1, -1, -1), (-3, -1, -1, -2, -1, -1, -1, -1), (-3, -1, -1, -1, -2, -1, -1, -1), (-3, -1, -1, -1, -1, -2, -1, -1), (-3, -1, -1, -1, -1, -1, -2, -1), (-3, -1, -1, -1, -1, -1, -1, -2)]
 
usecase__get_cls(69): rank = 8 , len = 252 
usecase__get_cls(70): ################################################################################ 
get_cls(1059): rank = 9 
get_bas_lst(582): start 
update(86): ETA = 0.000046717 m, counter = 0 / 128 , time = 7.2996e-6 m, info = get_bas_lst rank = 9  
update(86): ETA = 54.653 m, counter = 20 / 128 , time = 10.121 m, info = get_bas_lst rank = 9  
update(86): ETA = 19.885 m, counter = 40 / 128 , time = 14.640 m, info = get_bas_lst rank = 9  
update(86): ETA = 10.721 m, counter = 60 / 128 , time = 17.793 m, info = get_bas_lst rank = 9  
update(86): ETA = 4.8152 m, counter = 80 / 128 , time = 19.800 m, info = get_bas_lst rank = 9  
update(86): ETA = 2.3759 m, counter = 100 / 128 , time = 21.497 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.48465 m, counter = 120 / 128 , time = 22.709 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.0022868 m, counter = 0 / 8192 , time = 5.5830e-6 m, info = get_bas_lst rank = 9  
update(86): ETA = 4215.2 m, counter = 20 / 8192 , time = 10.316 m, info = get_bas_lst rank = 9  
update(86): ETA = 1866.0 m, counter = 40 / 8192 , time = 14.894 m, info = get_bas_lst rank = 9  
update(86): ETA = 1287.8 m, counter = 60 / 8192 , time = 18.061 m, info = get_bas_lst rank = 9  
update(86): ETA = 825.38 m, counter = 80 / 8192 , time = 20.096 m, info = get_bas_lst rank = 9  
update(86): ETA = 688.69 m, counter = 100 / 8192 , time = 21.799 m, info = get_bas_lst rank = 9  
update(86): ETA = 492.64 m, counter = 120 / 8192 , time = 23.019 m, info = get_bas_lst rank = 9  
update(86): ETA = 1624.7 m, counter = 140 / 8192 , time = 27.055 m, info = get_bas_lst rank = 9  
update(86): ETA = 1229.8 m, counter = 160 / 8192 , time = 30.117 m, info = get_bas_lst rank = 9  
update(86): ETA = 793.85 m, counter = 180 / 8192 , time = 32.099 m, info = get_bas_lst rank = 9  
update(86): ETA = 643.28 m, counter = 200 / 8192 , time = 33.708 m, info = get_bas_lst rank = 9  
update(86): ETA = 529.71 m, counter = 220 / 8192 , time = 35.037 m, info = get_bas_lst rank = 9  
update(86): ETA = 439.56 m, counter = 240 / 8192 , time = 36.143 m, info = get_bas_lst rank = 9  
update(86): ETA = 822.85 m, counter = 260 / 8192 , time = 38.218 m, info = get_bas_lst rank = 9  
update(86): ETA = 1107.3 m, counter = 280 / 8192 , time = 41.017 m, info = get_bas_lst rank = 9  
update(86): ETA = 644.99 m, counter = 300 / 8192 , time = 42.651 m, info = get_bas_lst rank = 9  
update(86): ETA = 364.76 m, counter = 320 / 8192 , time = 43.578 m, info = get_bas_lst rank = 9  
update(86): ETA = 234.62 m, counter = 340 / 8192 , time = 44.175 m, info = get_bas_lst rank = 9  
update(86): ETA = 122.03 m, counter = 360 / 8192 , time = 44.487 m, info = get_bas_lst rank = 9  
update(86): ETA = 116.20 m, counter = 380 / 8192 , time = 44.785 m, info = get_bas_lst rank = 9  
update(86): ETA = 1446.2 m, counter = 400 / 8192 , time = 48.497 m, info = get_bas_lst rank = 9  
update(86): ETA = 704.60 m, counter = 420 / 8192 , time = 50.310 m, info = get_bas_lst rank = 9  
update(86): ETA = 467.35 m, counter = 440 / 8192 , time = 51.516 m, info = get_bas_lst rank = 9  
update(86): ETA = 281.64 m, counter = 460 / 8192 , time = 52.244 m, info = get_bas_lst rank = 9  
update(86): ETA = 202.07 m, counter = 480 / 8192 , time = 52.768 m, info = get_bas_lst rank = 9  
update(86): ETA = 121.25 m, counter = 500 / 8192 , time = 53.083 m, info = get_bas_lst rank = 9  
update(86): ETA = 1048.6 m, counter = 520 / 8192 , time = 55.817 m, info = get_bas_lst rank = 9  
update(86): ETA = 895.56 m, counter = 540 / 8192 , time = 58.158 m, info = get_bas_lst rank = 9  
update(86): ETA = 533.75 m, counter = 560 / 8192 , time = 59.556 m, info = get_bas_lst rank = 9  
update(86): ETA = 317.48 m, counter = 580 / 8192 , time = 60.391 m, info = get_bas_lst rank = 9  
update(86): ETA = 206.79 m, counter = 600 / 8192 , time = 60.935 m, info = get_bas_lst rank = 9  
update(86): ETA = 153.19 m, counter = 620 / 8192 , time = 61.340 m, info = get_bas_lst rank = 9  
update(86): ETA = 78.233 m, counter = 640 / 8192 , time = 61.547 m, info = get_bas_lst rank = 9  
update(86): ETA = 1665.0 m, counter = 660 / 8192 , time = 65.968 m, info = get_bas_lst rank = 9  
update(86): ETA = 639.71 m, counter = 680 / 8192 , time = 67.671 m, info = get_bas_lst rank = 9  
update(86): ETA = 421.84 m, counter = 700 / 8192 , time = 68.798 m, info = get_bas_lst rank = 9  
update(86): ETA = 273.83 m, counter = 720 / 8192 , time = 69.531 m, info = get_bas_lst rank = 9  
update(86): ETA = 156.36 m, counter = 740 / 8192 , time = 69.950 m, info = get_bas_lst rank = 9  
update(86): ETA = 122.28 m, counter = 760 / 8192 , time = 70.279 m, info = get_bas_lst rank = 9  
update(86): ETA = 1377.1 m, counter = 780 / 8192 , time = 73.995 m, info = get_bas_lst rank = 9  
update(86): ETA = 1127.2 m, counter = 800 / 8192 , time = 77.045 m, info = get_bas_lst rank = 9  
update(86): ETA = 730.83 m, counter = 820 / 8192 , time = 79.027 m, info = get_bas_lst rank = 9  
update(86): ETA = 586.18 m, counter = 840 / 8192 , time = 80.622 m, info = get_bas_lst rank = 9  
update(86): ETA = 490.04 m, counter = 860 / 8192 , time = 81.959 m, info = get_bas_lst rank = 9  
update(86): ETA = 402.25 m, counter = 880 / 8192 , time = 83.059 m, info = get_bas_lst rank = 9  
update(86): ETA = 521.36 m, counter = 900 / 8192 , time = 84.489 m, info = get_bas_lst rank = 9  
update(86): ETA = 619.48 m, counter = 920 / 8192 , time = 86.193 m, info = get_bas_lst rank = 9  
update(86): ETA = 429.36 m, counter = 940 / 8192 , time = 87.377 m, info = get_bas_lst rank = 9  
update(86): ETA = 258.12 m, counter = 960 / 8192 , time = 88.091 m, info = get_bas_lst rank = 9  
update(86): ETA = 196.36 m, counter = 980 / 8192 , time = 88.635 m, info = get_bas_lst rank = 9  
update(86): ETA = 100.07 m, counter = 1000 / 8192 , time = 88.913 m, info = get_bas_lst rank = 9  
update(86): ETA = 106.04 m, counter = 1020 / 8192 , time = 89.209 m, info = get_bas_lst rank = 9  
update(86): ETA = 639.57 m, counter = 1040 / 8192 , time = 90.998 m, info = get_bas_lst rank = 9  
update(86): ETA = 382.44 m, counter = 1060 / 8192 , time = 92.070 m, info = get_bas_lst rank = 9  
update(86): ETA = 292.75 m, counter = 1080 / 8192 , time = 92.893 m, info = get_bas_lst rank = 9  
update(86): ETA = 199.96 m, counter = 1100 / 8192 , time = 93.457 m, info = get_bas_lst rank = 9  
update(86): ETA = 152.88 m, counter = 1120 / 8192 , time = 93.890 m, info = get_bas_lst rank = 9  
update(86): ETA = 103.54 m, counter = 1140 / 8192 , time = 94.183 m, info = get_bas_lst rank = 9  
update(86): ETA = 433.30 m, counter = 1160 / 8192 , time = 95.416 m, info = get_bas_lst rank = 9  
update(86): ETA = 433.92 m, counter = 1180 / 8192 , time = 96.653 m, info = get_bas_lst rank = 9  
update(86): ETA = 308.83 m, counter = 1200 / 8192 , time = 97.537 m, info = get_bas_lst rank = 9  
update(86): ETA = 198.79 m, counter = 1220 / 8192 , time = 98.107 m, info = get_bas_lst rank = 9  
update(86): ETA = 150.28 m, counter = 1240 / 8192 , time = 98.539 m, info = get_bas_lst rank = 9  
update(86): ETA = 118.42 m, counter = 1260 / 8192 , time = 98.881 m, info = get_bas_lst rank = 9  
update(86): ETA = 67.926 m, counter = 1280 / 8192 , time = 99.078 m, info = get_bas_lst rank = 9  
update(86): ETA = 724.90 m, counter = 1300 / 8192 , time = 101.18 m, info = get_bas_lst rank = 9  
update(86): ETA = 343.77 m, counter = 1320 / 8192 , time = 102.18 m, info = get_bas_lst rank = 9  
update(86): ETA = 248.05 m, counter = 1340 / 8192 , time = 102.91 m, info = get_bas_lst rank = 9  
update(86): ETA = 191.12 m, counter = 1360 / 8192 , time = 103.47 m, info = get_bas_lst rank = 9  
update(86): ETA = 110.67 m, counter = 1380 / 8192 , time = 103.79 m, info = get_bas_lst rank = 9  
update(86): ETA = 100.13 m, counter = 1400 / 8192 , time = 104.08 m, info = get_bas_lst rank = 9  
update(86): ETA = 16.443 m, counter = 1420 / 8192 , time = 104.13 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.56280 m, counter = 1440 / 8192 , time = 104.14 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.84519 m, counter = 1460 / 8192 , time = 104.14 m, info = get_bas_lst rank = 9  
update(86): ETA = 1.0098 m, counter = 1480 / 8192 , time = 104.14 m, info = get_bas_lst rank = 9  
update(86): ETA = 1.2554 m, counter = 1500 / 8192 , time = 104.14 m, info = get_bas_lst rank = 9  
update(86): ETA = 1.5679 m, counter = 1520 / 8192 , time = 104.15 m, info = get_bas_lst rank = 9  
update(86): ETA = 1.6937 m, counter = 1540 / 8192 , time = 104.15 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.36099 m, counter = 1560 / 8192 , time = 104.16 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.64945 m, counter = 1580 / 8192 , time = 104.16 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.54276 m, counter = 1600 / 8192 , time = 104.16 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.89394 m, counter = 1620 / 8192 , time = 104.16 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.69144 m, counter = 1640 / 8192 , time = 104.16 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.96899 m, counter = 1660 / 8192 , time = 104.17 m, info = get_bas_lst rank = 9  
update(86): ETA = 497.58 m, counter = 1680 / 8192 , time = 105.69 m, info = get_bas_lst rank = 9  
update(86): ETA = 248.86 m, counter = 1700 / 8192 , time = 106.46 m, info = get_bas_lst rank = 9  
update(86): ETA = 127.25 m, counter = 1720 / 8192 , time = 106.85 m, info = get_bas_lst rank = 9  
update(86): ETA = 67.199 m, counter = 1740 / 8192 , time = 107.06 m, info = get_bas_lst rank = 9  
update(86): ETA = 32.540 m, counter = 1760 / 8192 , time = 107.16 m, info = get_bas_lst rank = 9  
update(86): ETA = 15.704 m, counter = 1780 / 8192 , time = 107.21 m, info = get_bas_lst rank = 9  
update(86): ETA = 326.99 m, counter = 1800 / 8192 , time = 108.24 m, info = get_bas_lst rank = 9  
update(86): ETA = 268.15 m, counter = 1820 / 8192 , time = 109.08 m, info = get_bas_lst rank = 9  
update(86): ETA = 148.78 m, counter = 1840 / 8192 , time = 109.55 m, info = get_bas_lst rank = 9  
update(86): ETA = 93.813 m, counter = 1860 / 8192 , time = 109.84 m, info = get_bas_lst rank = 9  
update(86): ETA = 69.142 m, counter = 1880 / 8192 , time = 110.06 m, info = get_bas_lst rank = 9  
update(86): ETA = 36.028 m, counter = 1900 / 8192 , time = 110.18 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.69594 m, counter = 1920 / 8192 , time = 110.18 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.33005 m, counter = 1940 / 8192 , time = 110.18 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.49325 m, counter = 1960 / 8192 , time = 110.18 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.51138 m, counter = 1980 / 8192 , time = 110.18 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.76076 m, counter = 2000 / 8192 , time = 110.19 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.72660 m, counter = 2020 / 8192 , time = 110.19 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.88734 m, counter = 2040 / 8192 , time = 110.19 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.54059 m, counter = 2060 / 8192 , time = 110.19 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.35748 m, counter = 2080 / 8192 , time = 110.19 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.48536 m, counter = 2100 / 8192 , time = 110.20 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.47925 m, counter = 2120 / 8192 , time = 110.20 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.53429 m, counter = 2140 / 8192 , time = 110.20 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.62890 m, counter = 2160 / 8192 , time = 110.20 m, info = get_bas_lst rank = 9  
update(86): ETA = 211.06 m, counter = 2180 / 8192 , time = 110.90 m, info = get_bas_lst rank = 9  
update(86): ETA = 380.30 m, counter = 2200 / 8192 , time = 112.17 m, info = get_bas_lst rank = 9  
update(86): ETA = 222.55 m, counter = 2220 / 8192 , time = 112.92 m, info = get_bas_lst rank = 9  
update(86): ETA = 88.112 m, counter = 2240 / 8192 , time = 113.21 m, info = get_bas_lst rank = 9  
update(86): ETA = 70.350 m, counter = 2260 / 8192 , time = 113.45 m, info = get_bas_lst rank = 9  
update(86): ETA = 18.023 m, counter = 2280 / 8192 , time = 113.51 m, info = get_bas_lst rank = 9  
update(86): ETA = 15.988 m, counter = 2300 / 8192 , time = 113.57 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.39431 m, counter = 2320 / 8192 , time = 113.57 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.42254 m, counter = 2340 / 8192 , time = 113.57 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.54811 m, counter = 2360 / 8192 , time = 113.57 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.65211 m, counter = 2380 / 8192 , time = 113.57 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.64256 m, counter = 2400 / 8192 , time = 113.57 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.79079 m, counter = 2420 / 8192 , time = 113.58 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.56079 m, counter = 2440 / 8192 , time = 113.58 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.30724 m, counter = 2460 / 8192 , time = 113.58 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.54243 m, counter = 2480 / 8192 , time = 113.58 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.45536 m, counter = 2500 / 8192 , time = 113.58 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.60775 m, counter = 2520 / 8192 , time = 113.59 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.66573 m, counter = 2540 / 8192 , time = 113.59 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.78067 m, counter = 2560 / 8192 , time = 113.59 m, info = get_bas_lst rank = 9  
update(86): ETA = 648.30 m, counter = 2580 / 8192 , time = 115.90 m, info = get_bas_lst rank = 9  
update(86): ETA = 302.25 m, counter = 2600 / 8192 , time = 116.98 m, info = get_bas_lst rank = 9  
update(86): ETA = 227.63 m, counter = 2620 / 8192 , time = 117.80 m, info = get_bas_lst rank = 9  
update(86): ETA = 154.91 m, counter = 2640 / 8192 , time = 118.36 m, info = get_bas_lst rank = 9  
update(86): ETA = 86.624 m, counter = 2660 / 8192 , time = 118.67 m, info = get_bas_lst rank = 9  
update(86): ETA = 81.165 m, counter = 2680 / 8192 , time = 118.97 m, info = get_bas_lst rank = 9  
update(86): ETA = 411.25 m, counter = 2700 / 8192 , time = 120.46 m, info = get_bas_lst rank = 9  
update(86): ETA = 334.19 m, counter = 2720 / 8192 , time = 121.68 m, info = get_bas_lst rank = 9  
update(86): ETA = 240.36 m, counter = 2740 / 8192 , time = 122.57 m, info = get_bas_lst rank = 9  
update(86): ETA = 156.57 m, counter = 2760 / 8192 , time = 123.14 m, info = get_bas_lst rank = 9  
update(86): ETA = 117.96 m, counter = 2780 / 8192 , time = 123.58 m, info = get_bas_lst rank = 9  
update(86): ETA = 94.919 m, counter = 2800 / 8192 , time = 123.93 m, info = get_bas_lst rank = 9  
update(86): ETA = 25.990 m, counter = 2820 / 8192 , time = 124.03 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.46704 m, counter = 2840 / 8192 , time = 124.03 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.74832 m, counter = 2860 / 8192 , time = 124.03 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.60998 m, counter = 2880 / 8192 , time = 124.03 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.93506 m, counter = 2900 / 8192 , time = 124.04 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.68660 m, counter = 2920 / 8192 , time = 124.04 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.94510 m, counter = 2940 / 8192 , time = 124.04 m, info = get_bas_lst rank = 9  
update(86): ETA = 227.89 m, counter = 2960 / 8192 , time = 124.92 m, info = get_bas_lst rank = 9  
update(86): ETA = 144.66 m, counter = 2980 / 8192 , time = 125.47 m, info = get_bas_lst rank = 9  
update(86): ETA = 85.251 m, counter = 3000 / 8192 , time = 125.80 m, info = get_bas_lst rank = 9  
update(86): ETA = 50.304 m, counter = 3020 / 8192 , time = 125.99 m, info = get_bas_lst rank = 9  
update(86): ETA = 25.131 m, counter = 3040 / 8192 , time = 126.09 m, info = get_bas_lst rank = 9  
update(86): ETA = 12.691 m, counter = 3060 / 8192 , time = 126.14 m, info = get_bas_lst rank = 9  
update(86): ETA = 138.47 m, counter = 3080 / 8192 , time = 126.68 m, info = get_bas_lst rank = 9  
update(86): ETA = 147.42 m, counter = 3100 / 8192 , time = 127.26 m, info = get_bas_lst rank = 9  
update(86): ETA = 96.249 m, counter = 3120 / 8192 , time = 127.64 m, info = get_bas_lst rank = 9  
update(86): ETA = 59.492 m, counter = 3140 / 8192 , time = 127.88 m, info = get_bas_lst rank = 9  
update(86): ETA = 51.408 m, counter = 3160 / 8192 , time = 128.08 m, info = get_bas_lst rank = 9  
update(86): ETA = 26.775 m, counter = 3180 / 8192 , time = 128.19 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.62123 m, counter = 3200 / 8192 , time = 128.19 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.32682 m, counter = 3220 / 8192 , time = 128.19 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.47079 m, counter = 3240 / 8192 , time = 128.19 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.47708 m, counter = 3260 / 8192 , time = 128.20 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.69808 m, counter = 3280 / 8192 , time = 128.20 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.65986 m, counter = 3300 / 8192 , time = 128.20 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.78627 m, counter = 3320 / 8192 , time = 128.20 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.54418 m, counter = 3340 / 8192 , time = 128.21 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.40951 m, counter = 3360 / 8192 , time = 128.21 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.50664 m, counter = 3380 / 8192 , time = 128.21 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.47791 m, counter = 3400 / 8192 , time = 128.21 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.51827 m, counter = 3420 / 8192 , time = 128.21 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.57899 m, counter = 3440 / 8192 , time = 128.22 m, info = get_bas_lst rank = 9  
update(86): ETA = 70.085 m, counter = 3460 / 8192 , time = 128.51 m, info = get_bas_lst rank = 9  
update(86): ETA = 163.98 m, counter = 3480 / 8192 , time = 129.21 m, info = get_bas_lst rank = 9  
update(86): ETA = 120.14 m, counter = 3500 / 8192 , time = 129.72 m, info = get_bas_lst rank = 9  
update(86): ETA = 51.405 m, counter = 3520 / 8192 , time = 129.94 m, info = get_bas_lst rank = 9  
update(86): ETA = 47.954 m, counter = 3540 / 8192 , time = 130.15 m, info = get_bas_lst rank = 9  
update(86): ETA = 12.483 m, counter = 3560 / 8192 , time = 130.20 m, info = get_bas_lst rank = 9  
update(86): ETA = 12.101 m, counter = 3580 / 8192 , time = 130.25 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.37348 m, counter = 3600 / 8192 , time = 130.26 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.40326 m, counter = 3620 / 8192 , time = 130.26 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.51204 m, counter = 3640 / 8192 , time = 130.26 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.60015 m, counter = 3660 / 8192 , time = 130.26 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.58481 m, counter = 3680 / 8192 , time = 130.26 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.70989 m, counter = 3700 / 8192 , time = 130.27 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.53396 m, counter = 3720 / 8192 , time = 130.27 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.35886 m, counter = 3740 / 8192 , time = 130.27 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.57326 m, counter = 3760 / 8192 , time = 130.27 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.45559 m, counter = 3780 / 8192 , time = 130.28 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.56920 m, counter = 3800 / 8192 , time = 130.28 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.61436 m, counter = 3820 / 8192 , time = 130.28 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.68510 m, counter = 3840 / 8192 , time = 130.28 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.29142 m, counter = 3860 / 8192 , time = 130.29 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.43477 m, counter = 3880 / 8192 , time = 130.29 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.50194 m, counter = 3900 / 8192 , time = 130.29 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.65477 m, counter = 3920 / 8192 , time = 130.29 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.55355 m, counter = 3940 / 8192 , time = 130.30 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.77737 m, counter = 3960 / 8192 , time = 130.30 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.51361 m, counter = 3980 / 8192 , time = 130.30 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.36662 m, counter = 4000 / 8192 , time = 130.30 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.53297 m, counter = 4020 / 8192 , time = 130.31 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.56926 m, counter = 4040 / 8192 , time = 130.31 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.66412 m, counter = 4060 / 8192 , time = 130.31 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.80165 m, counter = 4080 / 8192 , time = 130.32 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.73347 m, counter = 4100 / 8192 , time = 130.32 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.22506 m, counter = 4120 / 8192 , time = 130.32 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.37723 m, counter = 4140 / 8192 , time = 130.32 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.26448 m, counter = 4160 / 8192 , time = 130.32 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.48092 m, counter = 4180 / 8192 , time = 130.33 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.35326 m, counter = 4200 / 8192 , time = 130.33 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.48064 m, counter = 4220 / 8192 , time = 130.33 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.27805 m, counter = 4240 / 8192 , time = 130.33 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.28701 m, counter = 4260 / 8192 , time = 130.33 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.35241 m, counter = 4280 / 8192 , time = 130.34 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.40802 m, counter = 4300 / 8192 , time = 130.34 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.37184 m, counter = 4320 / 8192 , time = 130.34 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.47058 m, counter = 4340 / 8192 , time = 130.34 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.35668 m, counter = 4360 / 8192 , time = 130.34 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.26537 m, counter = 4380 / 8192 , time = 130.35 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.39870 m, counter = 4400 / 8192 , time = 130.35 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.38352 m, counter = 4420 / 8192 , time = 130.35 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.52834 m, counter = 4440 / 8192 , time = 130.35 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.55676 m, counter = 4460 / 8192 , time = 130.35 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.54500 m, counter = 4480 / 8192 , time = 130.36 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.25522 m, counter = 4500 / 8192 , time = 130.36 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.25573 m, counter = 4520 / 8192 , time = 130.36 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.24533 m, counter = 4540 / 8192 , time = 130.36 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.35169 m, counter = 4560 / 8192 , time = 130.36 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.25388 m, counter = 4580 / 8192 , time = 130.37 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.39023 m, counter = 4600 / 8192 , time = 130.37 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.31129 m, counter = 4620 / 8192 , time = 130.37 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.24215 m, counter = 4640 / 8192 , time = 130.37 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.31941 m, counter = 4660 / 8192 , time = 130.37 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.30654 m, counter = 4680 / 8192 , time = 130.37 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.34137 m, counter = 4700 / 8192 , time = 130.38 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.39028 m, counter = 4720 / 8192 , time = 130.38 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.33650 m, counter = 4740 / 8192 , time = 130.38 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.20119 m, counter = 4760 / 8192 , time = 130.38 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.32477 m, counter = 4780 / 8192 , time = 130.38 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.23989 m, counter = 4800 / 8192 , time = 130.39 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.42106 m, counter = 4820 / 8192 , time = 130.39 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.31477 m, counter = 4840 / 8192 , time = 130.39 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.42755 m, counter = 4860 / 8192 , time = 130.39 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.22932 m, counter = 4880 / 8192 , time = 130.39 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.20912 m, counter = 4900 / 8192 , time = 130.39 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.23230 m, counter = 4920 / 8192 , time = 130.40 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.27692 m, counter = 4940 / 8192 , time = 130.40 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.23738 m, counter = 4960 / 8192 , time = 130.40 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.33905 m, counter = 4980 / 8192 , time = 130.40 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.27403 m, counter = 5000 / 8192 , time = 130.40 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.18287 m, counter = 5020 / 8192 , time = 130.40 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.29140 m, counter = 5040 / 8192 , time = 130.41 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.23431 m, counter = 5060 / 8192 , time = 130.41 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.34124 m, counter = 5080 / 8192 , time = 130.41 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.30908 m, counter = 5100 / 8192 , time = 130.41 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.36176 m, counter = 5120 / 8192 , time = 130.41 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.18186 m, counter = 5140 / 8192 , time = 130.42 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.24263 m, counter = 5160 / 8192 , time = 130.42 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.23016 m, counter = 5180 / 8192 , time = 130.42 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.34082 m, counter = 5200 / 8192 , time = 130.42 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.28067 m, counter = 5220 / 8192 , time = 130.42 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.36915 m, counter = 5240 / 8192 , time = 130.43 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.25722 m, counter = 5260 / 8192 , time = 130.43 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.19828 m, counter = 5280 / 8192 , time = 130.43 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.28578 m, counter = 5300 / 8192 , time = 130.43 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.28574 m, counter = 5320 / 8192 , time = 130.43 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.34158 m, counter = 5340 / 8192 , time = 130.43 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.37538 m, counter = 5360 / 8192 , time = 130.44 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.38167 m, counter = 5380 / 8192 , time = 130.44 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.23678 m, counter = 5400 / 8192 , time = 130.44 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.35398 m, counter = 5420 / 8192 , time = 130.44 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.23546 m, counter = 5440 / 8192 , time = 130.45 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.40235 m, counter = 5460 / 8192 , time = 130.45 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.28185 m, counter = 5480 / 8192 , time = 130.45 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.37172 m, counter = 5500 / 8192 , time = 130.45 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.27220 m, counter = 5520 / 8192 , time = 130.46 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.27168 m, counter = 5540 / 8192 , time = 130.46 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.31112 m, counter = 5560 / 8192 , time = 130.46 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.34237 m, counter = 5580 / 8192 , time = 130.46 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.29902 m, counter = 5600 / 8192 , time = 130.46 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.36466 m, counter = 5620 / 8192 , time = 130.47 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.27738 m, counter = 5640 / 8192 , time = 130.47 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.22534 m, counter = 5660 / 8192 , time = 130.47 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.31842 m, counter = 5680 / 8192 , time = 130.47 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.30570 m, counter = 5700 / 8192 , time = 130.48 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.40772 m, counter = 5720 / 8192 , time = 130.48 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.42045 m, counter = 5740 / 8192 , time = 130.48 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.40530 m, counter = 5760 / 8192 , time = 130.49 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.24183 m, counter = 5780 / 8192 , time = 130.49 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.21306 m, counter = 5800 / 8192 , time = 130.49 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.19937 m, counter = 5820 / 8192 , time = 130.49 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.26817 m, counter = 5840 / 8192 , time = 130.49 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.19078 m, counter = 5860 / 8192 , time = 130.50 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.28330 m, counter = 5880 / 8192 , time = 130.50 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.23157 m, counter = 5900 / 8192 , time = 130.50 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.18577 m, counter = 5920 / 8192 , time = 130.50 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.23706 m, counter = 5940 / 8192 , time = 130.50 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.22768 m, counter = 5960 / 8192 , time = 130.51 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.24908 m, counter = 5980 / 8192 , time = 130.51 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.28037 m, counter = 6000 / 8192 , time = 130.51 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.23928 m, counter = 6020 / 8192 , time = 130.51 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.15383 m, counter = 6040 / 8192 , time = 130.51 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.24060 m, counter = 6060 / 8192 , time = 130.52 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.17507 m, counter = 6080 / 8192 , time = 130.52 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.30228 m, counter = 6100 / 8192 , time = 130.52 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.22204 m, counter = 6120 / 8192 , time = 130.52 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.29863 m, counter = 6140 / 8192 , time = 130.53 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.19077 m, counter = 6160 / 8192 , time = 130.53 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.17349 m, counter = 6180 / 8192 , time = 130.53 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.17529 m, counter = 6200 / 8192 , time = 130.53 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.19899 m, counter = 6220 / 8192 , time = 130.53 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.16571 m, counter = 6240 / 8192 , time = 130.54 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.23002 m, counter = 6260 / 8192 , time = 130.54 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.19119 m, counter = 6280 / 8192 , time = 130.54 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.13778 m, counter = 6300 / 8192 , time = 130.54 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.20744 m, counter = 6320 / 8192 , time = 130.54 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.16368 m, counter = 6340 / 8192 , time = 130.55 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.23231 m, counter = 6360 / 8192 , time = 130.55 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.20787 m, counter = 6380 / 8192 , time = 130.55 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.23643 m, counter = 6400 / 8192 , time = 130.55 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.12907 m, counter = 6420 / 8192 , time = 130.55 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.16537 m, counter = 6440 / 8192 , time = 130.56 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.15497 m, counter = 6460 / 8192 , time = 130.56 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.22572 m, counter = 6480 / 8192 , time = 130.56 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.18310 m, counter = 6500 / 8192 , time = 130.56 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.23630 m, counter = 6520 / 8192 , time = 130.57 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.17176 m, counter = 6540 / 8192 , time = 130.57 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.13915 m, counter = 6560 / 8192 , time = 130.57 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.19097 m, counter = 6580 / 8192 , time = 130.57 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.18649 m, counter = 6600 / 8192 , time = 130.57 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.21727 m, counter = 6620 / 8192 , time = 130.58 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.23542 m, counter = 6640 / 8192 , time = 130.58 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.22297 m, counter = 6660 / 8192 , time = 130.58 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.089170 m, counter = 6680 / 8192 , time = 130.58 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.13219 m, counter = 6700 / 8192 , time = 130.59 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.085910 m, counter = 6720 / 8192 , time = 130.59 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.16897 m, counter = 6740 / 8192 , time = 130.59 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.12631 m, counter = 6760 / 8192 , time = 130.59 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.17245 m, counter = 6780 / 8192 , time = 130.59 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.10626 m, counter = 6800 / 8192 , time = 130.60 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.11199 m, counter = 6820 / 8192 , time = 130.60 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.12846 m, counter = 6840 / 8192 , time = 130.60 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.14516 m, counter = 6860 / 8192 , time = 130.60 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.12344 m, counter = 6880 / 8192 , time = 130.60 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.15835 m, counter = 6900 / 8192 , time = 130.61 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.11878 m, counter = 6920 / 8192 , time = 130.61 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.084661 m, counter = 6940 / 8192 , time = 130.61 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.13091 m, counter = 6960 / 8192 , time = 130.61 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.10851 m, counter = 6980 / 8192 , time = 130.61 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.15431 m, counter = 7000 / 8192 , time = 130.61 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.15323 m, counter = 7020 / 8192 , time = 130.62 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.14658 m, counter = 7040 / 8192 , time = 130.62 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.073236 m, counter = 7060 / 8192 , time = 130.62 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.080018 m, counter = 7080 / 8192 , time = 130.62 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.076205 m, counter = 7100 / 8192 , time = 130.62 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.11179 m, counter = 7120 / 8192 , time = 130.63 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.079608 m, counter = 7140 / 8192 , time = 130.63 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.12128 m, counter = 7160 / 8192 , time = 130.63 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.090870 m, counter = 7180 / 8192 , time = 130.63 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.062672 m, counter = 7200 / 8192 , time = 130.63 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.083790 m, counter = 7220 / 8192 , time = 130.64 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.075786 m, counter = 7240 / 8192 , time = 130.64 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.087212 m, counter = 7260 / 8192 , time = 130.64 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.096676 m, counter = 7280 / 8192 , time = 130.64 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.098304 m, counter = 7300 / 8192 , time = 130.64 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.073076 m, counter = 7320 / 8192 , time = 130.64 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.095457 m, counter = 7340 / 8192 , time = 130.65 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.058546 m, counter = 7360 / 8192 , time = 130.65 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.10953 m, counter = 7380 / 8192 , time = 130.65 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.079549 m, counter = 7400 / 8192 , time = 130.65 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.10526 m, counter = 7420 / 8192 , time = 130.66 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.071604 m, counter = 7440 / 8192 , time = 130.66 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.073748 m, counter = 7460 / 8192 , time = 130.66 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.081320 m, counter = 7480 / 8192 , time = 130.66 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.087981 m, counter = 7500 / 8192 , time = 130.66 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.073218 m, counter = 7520 / 8192 , time = 130.67 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.090537 m, counter = 7540 / 8192 , time = 130.67 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.069970 m, counter = 7560 / 8192 , time = 130.67 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.052599 m, counter = 7580 / 8192 , time = 130.67 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.075241 m, counter = 7600 / 8192 , time = 130.68 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.060392 m, counter = 7620 / 8192 , time = 130.68 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.082085 m, counter = 7640 / 8192 , time = 130.68 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.079026 m, counter = 7660 / 8192 , time = 130.68 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.072931 m, counter = 7680 / 8192 , time = 130.69 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.038042 m, counter = 7700 / 8192 , time = 130.69 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.039577 m, counter = 7720 / 8192 , time = 130.69 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.036787 m, counter = 7740 / 8192 , time = 130.69 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.051205 m, counter = 7760 / 8192 , time = 130.69 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.035541 m, counter = 7780 / 8192 , time = 130.70 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.051559 m, counter = 7800 / 8192 , time = 130.70 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.039650 m, counter = 7820 / 8192 , time = 130.70 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.027444 m, counter = 7840 / 8192 , time = 130.70 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.033779 m, counter = 7860 / 8192 , time = 130.70 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.029032 m, counter = 7880 / 8192 , time = 130.71 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.031336 m, counter = 7900 / 8192 , time = 130.71 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.032839 m, counter = 7920 / 8192 , time = 130.71 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.028940 m, counter = 7940 / 8192 , time = 130.71 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.014907 m, counter = 7960 / 8192 , time = 130.71 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.020385 m, counter = 7980 / 8192 , time = 130.72 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.011970 m, counter = 8000 / 8192 , time = 130.72 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.021620 m, counter = 8020 / 8192 , time = 130.72 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.014420 m, counter = 8040 / 8192 , time = 130.72 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.017245 m, counter = 8060 / 8192 , time = 130.72 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.010954 m, counter = 8080 / 8192 , time = 130.73 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.0087594 m, counter = 8100 / 8192 , time = 130.73 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.0073379 m, counter = 8120 / 8192 , time = 130.73 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.0060039 m, counter = 8140 / 8192 , time = 130.73 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.0031368 m, counter = 8160 / 8192 , time = 130.73 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.0016469 m, counter = 8180 / 8192 , time = 130.74 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.0014274 m, counter = 0 / 8192 , time = 3.4849e-6 m, info = get_bas_lst rank = 9  
update(86): ETA = 4217.4 m, counter = 20 / 8192 , time = 10.322 m, info = get_bas_lst rank = 9  
update(86): ETA = 1867.4 m, counter = 40 / 8192 , time = 14.903 m, info = get_bas_lst rank = 9  
update(86): ETA = 1289.1 m, counter = 60 / 8192 , time = 18.073 m, info = get_bas_lst rank = 9  
update(86): ETA = 825.22 m, counter = 80 / 8192 , time = 20.108 m, info = get_bas_lst rank = 9  
update(86): ETA = 687.61 m, counter = 100 / 8192 , time = 21.807 m, info = get_bas_lst rank = 9  
update(86): ETA = 490.10 m, counter = 120 / 8192 , time = 23.022 m, info = get_bas_lst rank = 9  
update(86): ETA = 1457.3 m, counter = 140 / 8192 , time = 26.641 m, info = get_bas_lst rank = 9  
update(86): ETA = 754.97 m, counter = 160 / 8192 , time = 28.521 m, info = get_bas_lst rank = 9  
update(86): ETA = 434.85 m, counter = 180 / 8192 , time = 29.607 m, info = get_bas_lst rank = 9  
update(86): ETA = 287.41 m, counter = 200 / 8192 , time = 30.326 m, info = get_bas_lst rank = 9  
update(86): ETA = 225.08 m, counter = 220 / 8192 , time = 30.891 m, info = get_bas_lst rank = 9  
update(86): ETA = 121.42 m, counter = 240 / 8192 , time = 31.196 m, info = get_bas_lst rank = 9  
update(86): ETA = 576.68 m, counter = 260 / 8192 , time = 32.650 m, info = get_bas_lst rank = 9  
update(86): ETA = 841.27 m, counter = 280 / 8192 , time = 34.777 m, info = get_bas_lst rank = 9  
update(86): ETA = 334.81 m, counter = 300 / 8192 , time = 35.625 m, info = get_bas_lst rank = 9  
update(86): ETA = 123.97 m, counter = 320 / 8192 , time = 35.940 m, info = get_bas_lst rank = 9  
update(86): ETA = 100.37 m, counter = 340 / 8192 , time = 36.196 m, info = get_bas_lst rank = 9  
update(86): ETA = 20.505 m, counter = 360 / 8192 , time = 36.248 m, info = get_bas_lst rank = 9  
update(86): ETA = 20.314 m, counter = 380 / 8192 , time = 36.300 m, info = get_bas_lst rank = 9  
update(86): ETA = 1416.1 m, counter = 400 / 8192 , time = 39.935 m, info = get_bas_lst rank = 9  
update(86): ETA = 754.87 m, counter = 420 / 8192 , time = 41.877 m, info = get_bas_lst rank = 9  
update(86): ETA = 415.74 m, counter = 440 / 8192 , time = 42.950 m, info = get_bas_lst rank = 9  
update(86): ETA = 286.48 m, counter = 460 / 8192 , time = 43.691 m, info = get_bas_lst rank = 9  
update(86): ETA = 207.16 m, counter = 480 / 8192 , time = 44.228 m, info = get_bas_lst rank = 9  
update(86): ETA = 125.14 m, counter = 500 / 8192 , time = 44.554 m, info = get_bas_lst rank = 9  
update(86): ETA = 1048.4 m, counter = 520 / 8192 , time = 47.287 m, info = get_bas_lst rank = 9  
update(86): ETA = 878.86 m, counter = 540 / 8192 , time = 49.584 m, info = get_bas_lst rank = 9  
update(86): ETA = 527.43 m, counter = 560 / 8192 , time = 50.966 m, info = get_bas_lst rank = 9  
update(86): ETA = 320.80 m, counter = 580 / 8192 , time = 51.809 m, info = get_bas_lst rank = 9  
update(86): ETA = 210.50 m, counter = 600 / 8192 , time = 52.364 m, info = get_bas_lst rank = 9  
update(86): ETA = 153.38 m, counter = 620 / 8192 , time = 52.769 m, info = get_bas_lst rank = 9  
update(86): ETA = 80.139 m, counter = 640 / 8192 , time = 52.981 m, info = get_bas_lst rank = 9  
update(86): ETA = 1878.2 m, counter = 660 / 8192 , time = 57.968 m, info = get_bas_lst rank = 9  
update(86): ETA = 947.53 m, counter = 680 / 8192 , time = 60.491 m, info = get_bas_lst rank = 9  
update(86): ETA = 717.22 m, counter = 700 / 8192 , time = 62.406 m, info = get_bas_lst rank = 9  
update(86): ETA = 526.81 m, counter = 720 / 8192 , time = 63.816 m, info = get_bas_lst rank = 9  
update(86): ETA = 458.28 m, counter = 740 / 8192 , time = 65.046 m, info = get_bas_lst rank = 9  
update(86): ETA = 381.89 m, counter = 760 / 8192 , time = 66.073 m, info = get_bas_lst rank = 9  
update(86): ETA = 1388.0 m, counter = 780 / 8192 , time = 69.819 m, info = get_bas_lst rank = 9  
update(86): ETA = 797.19 m, counter = 800 / 8192 , time = 71.975 m, info = get_bas_lst rank = 9  
update(86): ETA = 493.71 m, counter = 820 / 8192 , time = 73.315 m, info = get_bas_lst rank = 9  
update(86): ETA = 279.43 m, counter = 840 / 8192 , time = 74.075 m, info = get_bas_lst rank = 9  
update(86): ETA = 198.32 m, counter = 860 / 8192 , time = 74.616 m, info = get_bas_lst rank = 9  
update(86): ETA = 116.33 m, counter = 880 / 8192 , time = 74.934 m, info = get_bas_lst rank = 9  
update(86): ETA = 287.96 m, counter = 900 / 8192 , time = 75.724 m, info = get_bas_lst rank = 9  
update(86): ETA = 450.11 m, counter = 920 / 8192 , time = 76.962 m, info = get_bas_lst rank = 9  
update(86): ETA = 208.25 m, counter = 940 / 8192 , time = 77.536 m, info = get_bas_lst rank = 9  
update(86): ETA = 83.085 m, counter = 960 / 8192 , time = 77.766 m, info = get_bas_lst rank = 9  
update(86): ETA = 78.696 m, counter = 980 / 8192 , time = 77.984 m, info = get_bas_lst rank = 9  
update(86): ETA = 16.732 m, counter = 1000 / 8192 , time = 78.031 m, info = get_bas_lst rank = 9  
update(86): ETA = 17.997 m, counter = 1020 / 8192 , time = 78.081 m, info = get_bas_lst rank = 9  
update(86): ETA = 583.70 m, counter = 1040 / 8192 , time = 79.713 m, info = get_bas_lst rank = 9  
update(86): ETA = 254.80 m, counter = 1060 / 8192 , time = 80.428 m, info = get_bas_lst rank = 9  
update(86): ETA = 112.15 m, counter = 1080 / 8192 , time = 80.743 m, info = get_bas_lst rank = 9  
update(86): ETA = 76.337 m, counter = 1100 / 8192 , time = 80.958 m, info = get_bas_lst rank = 9  
update(86): ETA = 39.553 m, counter = 1120 / 8192 , time = 81.070 m, info = get_bas_lst rank = 9  
update(86): ETA = 17.103 m, counter = 1140 / 8192 , time = 81.119 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.76795 m, counter = 1160 / 8192 , time = 81.121 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.40513 m, counter = 1180 / 8192 , time = 81.122 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.64953 m, counter = 1200 / 8192 , time = 81.124 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.59661 m, counter = 1220 / 8192 , time = 81.126 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.80238 m, counter = 1240 / 8192 , time = 81.128 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.86646 m, counter = 1260 / 8192 , time = 81.130 m, info = get_bas_lst rank = 9  
update(86): ETA = 1.0367 m, counter = 1280 / 8192 , time = 81.134 m, info = get_bas_lst rank = 9  
update(86): ETA = 809.54 m, counter = 1300 / 8192 , time = 83.483 m, info = get_bas_lst rank = 9  
update(86): ETA = 367.62 m, counter = 1320 / 8192 , time = 84.553 m, info = get_bas_lst rank = 9  
update(86): ETA = 255.18 m, counter = 1340 / 8192 , time = 85.297 m, info = get_bas_lst rank = 9  
update(86): ETA = 190.56 m, counter = 1360 / 8192 , time = 85.855 m, info = get_bas_lst rank = 9  
update(86): ETA = 124.02 m, counter = 1380 / 8192 , time = 86.219 m, info = get_bas_lst rank = 9  
update(86): ETA = 82.348 m, counter = 1400 / 8192 , time = 86.462 m, info = get_bas_lst rank = 9  
update(86): ETA = 568.93 m, counter = 1420 / 8192 , time = 88.142 m, info = get_bas_lst rank = 9  
update(86): ETA = 265.39 m, counter = 1440 / 8192 , time = 88.928 m, info = get_bas_lst rank = 9  
update(86): ETA = 144.89 m, counter = 1460 / 8192 , time = 89.359 m, info = get_bas_lst rank = 9  
update(86): ETA = 73.814 m, counter = 1480 / 8192 , time = 89.579 m, info = get_bas_lst rank = 9  
update(86): ETA = 36.413 m, counter = 1500 / 8192 , time = 89.688 m, info = get_bas_lst rank = 9  
update(86): ETA = 15.989 m, counter = 1520 / 8192 , time = 89.735 m, info = get_bas_lst rank = 9  
update(86): ETA = 232.31 m, counter = 1540 / 8192 , time = 90.434 m, info = get_bas_lst rank = 9  
update(86): ETA = 271.57 m, counter = 1560 / 8192 , time = 91.253 m, info = get_bas_lst rank = 9  
update(86): ETA = 101.02 m, counter = 1580 / 8192 , time = 91.558 m, info = get_bas_lst rank = 9  
update(86): ETA = 22.832 m, counter = 1600 / 8192 , time = 91.628 m, info = get_bas_lst rank = 9  
update(86): ETA = 20.214 m, counter = 1620 / 8192 , time = 91.689 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.35676 m, counter = 1640 / 8192 , time = 91.690 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.54977 m, counter = 1660 / 8192 , time = 91.692 m, info = get_bas_lst rank = 9  
update(86): ETA = 370.11 m, counter = 1680 / 8192 , time = 92.829 m, info = get_bas_lst rank = 9  
update(86): ETA = 112.60 m, counter = 1700 / 8192 , time = 93.176 m, info = get_bas_lst rank = 9  
update(86): ETA = 44.520 m, counter = 1720 / 8192 , time = 93.313 m, info = get_bas_lst rank = 9  
update(86): ETA = 22.075 m, counter = 1740 / 8192 , time = 93.382 m, info = get_bas_lst rank = 9  
update(86): ETA = 19.797 m, counter = 1760 / 8192 , time = 93.443 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.55859 m, counter = 1780 / 8192 , time = 93.445 m, info = get_bas_lst rank = 9  
update(86): ETA = 376.58 m, counter = 1800 / 8192 , time = 94.623 m, info = get_bas_lst rank = 9  
update(86): ETA = 315.37 m, counter = 1820 / 8192 , time = 95.613 m, info = get_bas_lst rank = 9  
update(86): ETA = 138.34 m, counter = 1840 / 8192 , time = 96.049 m, info = get_bas_lst rank = 9  
update(86): ETA = 78.182 m, counter = 1860 / 8192 , time = 96.296 m, info = get_bas_lst rank = 9  
update(86): ETA = 71.706 m, counter = 1880 / 8192 , time = 96.523 m, info = get_bas_lst rank = 9  
update(86): ETA = 15.182 m, counter = 1900 / 8192 , time = 96.571 m, info = get_bas_lst rank = 9  
update(86): ETA = 15.967 m, counter = 1920 / 8192 , time = 96.622 m, info = get_bas_lst rank = 9  
update(86): ETA = 450.08 m, counter = 1940 / 8192 , time = 98.062 m, info = get_bas_lst rank = 9  
update(86): ETA = 129.75 m, counter = 1960 / 8192 , time = 98.478 m, info = get_bas_lst rank = 9  
update(86): ETA = 17.378 m, counter = 1980 / 8192 , time = 98.534 m, info = get_bas_lst rank = 9  
update(86): ETA = 16.974 m, counter = 2000 / 8192 , time = 98.589 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.46980 m, counter = 2020 / 8192 , time = 98.590 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.61824 m, counter = 2040 / 8192 , time = 98.592 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.42787 m, counter = 2060 / 8192 , time = 98.594 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.42114 m, counter = 2080 / 8192 , time = 98.595 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.60518 m, counter = 2100 / 8192 , time = 98.597 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.66255 m, counter = 2120 / 8192 , time = 98.599 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.79469 m, counter = 2140 / 8192 , time = 98.602 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.88305 m, counter = 2160 / 8192 , time = 98.605 m, info = get_bas_lst rank = 9  
update(86): ETA = 263.44 m, counter = 2180 / 8192 , time = 99.481 m, info = get_bas_lst rank = 9  
update(86): ETA = 521.86 m, counter = 2200 / 8192 , time = 101.22 m, info = get_bas_lst rank = 9  
update(86): ETA = 288.56 m, counter = 2220 / 8192 , time = 102.19 m, info = get_bas_lst rank = 9  
update(86): ETA = 197.68 m, counter = 2240 / 8192 , time = 102.85 m, info = get_bas_lst rank = 9  
update(86): ETA = 164.83 m, counter = 2260 / 8192 , time = 103.41 m, info = get_bas_lst rank = 9  
update(86): ETA = 107.32 m, counter = 2280 / 8192 , time = 103.77 m, info = get_bas_lst rank = 9  
update(86): ETA = 70.865 m, counter = 2300 / 8192 , time = 104.01 m, info = get_bas_lst rank = 9  
update(86): ETA = 523.75 m, counter = 2320 / 8192 , time = 105.80 m, info = get_bas_lst rank = 9  
update(86): ETA = 250.37 m, counter = 2340 / 8192 , time = 106.65 m, info = get_bas_lst rank = 9  
update(86): ETA = 112.08 m, counter = 2360 / 8192 , time = 107.04 m, info = get_bas_lst rank = 9  
update(86): ETA = 71.813 m, counter = 2380 / 8192 , time = 107.28 m, info = get_bas_lst rank = 9  
update(86): ETA = 35.898 m, counter = 2400 / 8192 , time = 107.41 m, info = get_bas_lst rank = 9  
update(86): ETA = 15.316 m, counter = 2420 / 8192 , time = 107.46 m, info = get_bas_lst rank = 9  
update(86): ETA = 390.84 m, counter = 2440 / 8192 , time = 108.82 m, info = get_bas_lst rank = 9  
update(86): ETA = 409.12 m, counter = 2460 / 8192 , time = 110.25 m, info = get_bas_lst rank = 9  
update(86): ETA = 281.56 m, counter = 2480 / 8192 , time = 111.23 m, info = get_bas_lst rank = 9  
update(86): ETA = 178.22 m, counter = 2500 / 8192 , time = 111.86 m, info = get_bas_lst rank = 9  
update(86): ETA = 128.44 m, counter = 2520 / 8192 , time = 112.31 m, info = get_bas_lst rank = 9  
update(86): ETA = 101.66 m, counter = 2540 / 8192 , time = 112.67 m, info = get_bas_lst rank = 9  
update(86): ETA = 55.751 m, counter = 2560 / 8192 , time = 112.87 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.28049 m, counter = 2580 / 8192 , time = 112.87 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.42588 m, counter = 2600 / 8192 , time = 112.87 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.48865 m, counter = 2620 / 8192 , time = 112.87 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.66849 m, counter = 2640 / 8192 , time = 112.88 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.57014 m, counter = 2660 / 8192 , time = 112.88 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.82702 m, counter = 2680 / 8192 , time = 112.88 m, info = get_bas_lst rank = 9  
update(86): ETA = 503.84 m, counter = 2700 / 8192 , time = 114.72 m, info = get_bas_lst rank = 9  
update(86): ETA = 365.88 m, counter = 2720 / 8192 , time = 116.05 m, info = get_bas_lst rank = 9  
update(86): ETA = 256.94 m, counter = 2740 / 8192 , time = 117.00 m, info = get_bas_lst rank = 9  
update(86): ETA = 160.09 m, counter = 2760 / 8192 , time = 117.59 m, info = get_bas_lst rank = 9  
update(86): ETA = 120.00 m, counter = 2780 / 8192 , time = 118.03 m, info = get_bas_lst rank = 9  
update(86): ETA = 78.636 m, counter = 2800 / 8192 , time = 118.32 m, info = get_bas_lst rank = 9  
update(86): ETA = 134.89 m, counter = 2820 / 8192 , time = 118.82 m, info = get_bas_lst rank = 9  
update(86): ETA = 147.79 m, counter = 2840 / 8192 , time = 119.38 m, info = get_bas_lst rank = 9  
update(86): ETA = 63.349 m, counter = 2860 / 8192 , time = 119.61 m, info = get_bas_lst rank = 9  
update(86): ETA = 14.714 m, counter = 2880 / 8192 , time = 119.67 m, info = get_bas_lst rank = 9  
update(86): ETA = 14.716 m, counter = 2900 / 8192 , time = 119.72 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.33388 m, counter = 2920 / 8192 , time = 119.73 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.50495 m, counter = 2940 / 8192 , time = 119.73 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.32098 m, counter = 2960 / 8192 , time = 119.73 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.32070 m, counter = 2980 / 8192 , time = 119.73 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.32167 m, counter = 3000 / 8192 , time = 119.73 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.41906 m, counter = 3020 / 8192 , time = 119.73 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.39638 m, counter = 3040 / 8192 , time = 119.73 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.50751 m, counter = 3060 / 8192 , time = 119.74 m, info = get_bas_lst rank = 9  
update(86): ETA = 181.25 m, counter = 3080 / 8192 , time = 120.45 m, info = get_bas_lst rank = 9  
update(86): ETA = 183.41 m, counter = 3100 / 8192 , time = 121.17 m, info = get_bas_lst rank = 9  
update(86): ETA = 91.527 m, counter = 3120 / 8192 , time = 121.53 m, info = get_bas_lst rank = 9  
update(86): ETA = 52.994 m, counter = 3140 / 8192 , time = 121.74 m, info = get_bas_lst rank = 9  
update(86): ETA = 52.823 m, counter = 3160 / 8192 , time = 121.95 m, info = get_bas_lst rank = 9  
update(86): ETA = 11.849 m, counter = 3180 / 8192 , time = 121.99 m, info = get_bas_lst rank = 9  
update(86): ETA = 12.771 m, counter = 3200 / 8192 , time = 122.05 m, info = get_bas_lst rank = 9  
update(86): ETA = 231.50 m, counter = 3220 / 8192 , time = 122.98 m, info = get_bas_lst rank = 9  
update(86): ETA = 83.440 m, counter = 3240 / 8192 , time = 123.31 m, info = get_bas_lst rank = 9  
update(86): ETA = 12.808 m, counter = 3260 / 8192 , time = 123.37 m, info = get_bas_lst rank = 9  
update(86): ETA = 13.159 m, counter = 3280 / 8192 , time = 123.42 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.42227 m, counter = 3300 / 8192 , time = 123.42 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.55129 m, counter = 3320 / 8192 , time = 123.42 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.38728 m, counter = 3340 / 8192 , time = 123.42 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.35145 m, counter = 3360 / 8192 , time = 123.43 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.49002 m, counter = 3380 / 8192 , time = 123.43 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.51744 m, counter = 3400 / 8192 , time = 123.43 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.60681 m, counter = 3420 / 8192 , time = 123.43 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.68563 m, counter = 3440 / 8192 , time = 123.44 m, info = get_bas_lst rank = 9  
update(86): ETA = 121.25 m, counter = 3460 / 8192 , time = 123.95 m, info = get_bas_lst rank = 9  
update(86): ETA = 199.59 m, counter = 3480 / 8192 , time = 124.80 m, info = get_bas_lst rank = 9  
update(86): ETA = 96.401 m, counter = 3500 / 8192 , time = 125.21 m, info = get_bas_lst rank = 9  
update(86): ETA = 51.545 m, counter = 3520 / 8192 , time = 125.43 m, info = get_bas_lst rank = 9  
update(86): ETA = 46.793 m, counter = 3540 / 8192 , time = 125.63 m, info = get_bas_lst rank = 9  
update(86): ETA = 22.680 m, counter = 3560 / 8192 , time = 125.73 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.73254 m, counter = 3580 / 8192 , time = 125.73 m, info = get_bas_lst rank = 9  
update(86): ETA = 210.95 m, counter = 3600 / 8192 , time = 126.65 m, info = get_bas_lst rank = 9  
update(86): ETA = 76.850 m, counter = 3620 / 8192 , time = 126.98 m, info = get_bas_lst rank = 9  
update(86): ETA = 13.365 m, counter = 3640 / 8192 , time = 127.04 m, info = get_bas_lst rank = 9  
update(86): ETA = 11.545 m, counter = 3660 / 8192 , time = 127.09 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.50965 m, counter = 3680 / 8192 , time = 127.10 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.68098 m, counter = 3700 / 8192 , time = 127.10 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.53609 m, counter = 3720 / 8192 , time = 127.10 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.29174 m, counter = 3740 / 8192 , time = 127.10 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.47036 m, counter = 3760 / 8192 , time = 127.10 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.42053 m, counter = 3780 / 8192 , time = 127.11 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.56786 m, counter = 3800 / 8192 , time = 127.11 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.60173 m, counter = 3820 / 8192 , time = 127.11 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.71356 m, counter = 3840 / 8192 , time = 127.12 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.23544 m, counter = 3860 / 8192 , time = 127.12 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.34230 m, counter = 3880 / 8192 , time = 127.12 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.37456 m, counter = 3900 / 8192 , time = 127.12 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.53017 m, counter = 3920 / 8192 , time = 127.12 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.44690 m, counter = 3940 / 8192 , time = 127.12 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.65953 m, counter = 3960 / 8192 , time = 127.13 m, info = get_bas_lst rank = 9  
update(86): ETA = 222.84 m, counter = 3980 / 8192 , time = 128.19 m, info = get_bas_lst rank = 9  
update(86): ETA = 127.97 m, counter = 4000 / 8192 , time = 128.80 m, info = get_bas_lst rank = 9  
update(86): ETA = 75.945 m, counter = 4020 / 8192 , time = 129.16 m, info = get_bas_lst rank = 9  
update(86): ETA = 42.331 m, counter = 4040 / 8192 , time = 129.36 m, info = get_bas_lst rank = 9  
update(86): ETA = 21.381 m, counter = 4060 / 8192 , time = 129.47 m, info = get_bas_lst rank = 9  
update(86): ETA = 10.049 m, counter = 4080 / 8192 , time = 129.52 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.83437 m, counter = 4100 / 8192 , time = 129.52 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.24313 m, counter = 4120 / 8192 , time = 129.52 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.33822 m, counter = 4140 / 8192 , time = 129.52 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.19468 m, counter = 4160 / 8192 , time = 129.52 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.40333 m, counter = 4180 / 8192 , time = 129.53 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.23004 m, counter = 4200 / 8192 , time = 129.53 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.36001 m, counter = 4220 / 8192 , time = 129.53 m, info = get_bas_lst rank = 9  
update(86): ETA = 167.05 m, counter = 4240 / 8192 , time = 130.37 m, info = get_bas_lst rank = 9  
update(86): ETA = 56.417 m, counter = 4260 / 8192 , time = 130.66 m, info = get_bas_lst rank = 9  
update(86): ETA = 23.314 m, counter = 4280 / 8192 , time = 130.78 m, info = get_bas_lst rank = 9  
update(86): ETA = 11.799 m, counter = 4300 / 8192 , time = 130.84 m, info = get_bas_lst rank = 9  
update(86): ETA = 11.106 m, counter = 4320 / 8192 , time = 130.90 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.36361 m, counter = 4340 / 8192 , time = 130.90 m, info = get_bas_lst rank = 9  
update(86): ETA = 100.50 m, counter = 4360 / 8192 , time = 131.43 m, info = get_bas_lst rank = 9  
update(86): ETA = 48.297 m, counter = 4380 / 8192 , time = 131.68 m, info = get_bas_lst rank = 9  
update(86): ETA = 13.414 m, counter = 4400 / 8192 , time = 131.75 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.20728 m, counter = 4420 / 8192 , time = 131.75 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.32848 m, counter = 4440 / 8192 , time = 131.75 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.25555 m, counter = 4460 / 8192 , time = 131.75 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.35005 m, counter = 4480 / 8192 , time = 131.76 m, info = get_bas_lst rank = 9  
update(86): ETA = 138.59 m, counter = 4500 / 8192 , time = 132.51 m, info = get_bas_lst rank = 9  
update(86): ETA = 61.081 m, counter = 4520 / 8192 , time = 132.84 m, info = get_bas_lst rank = 9  
update(86): ETA = 21.758 m, counter = 4540 / 8192 , time = 132.96 m, info = get_bas_lst rank = 9  
update(86): ETA = 10.486 m, counter = 4560 / 8192 , time = 133.02 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.21162 m, counter = 4580 / 8192 , time = 133.02 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.31425 m, counter = 4600 / 8192 , time = 133.02 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.26617 m, counter = 4620 / 8192 , time = 133.02 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.16207 m, counter = 4640 / 8192 , time = 133.02 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.23017 m, counter = 4660 / 8192 , time = 133.02 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.22483 m, counter = 4680 / 8192 , time = 133.02 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.27628 m, counter = 4700 / 8192 , time = 133.03 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.30210 m, counter = 4720 / 8192 , time = 133.03 m, info = get_bas_lst rank = 9  
update(86): ETA = 71.179 m, counter = 4740 / 8192 , time = 133.44 m, info = get_bas_lst rank = 9  
update(86): ETA = 114.99 m, counter = 4760 / 8192 , time = 134.11 m, info = get_bas_lst rank = 9  
update(86): ETA = 31.798 m, counter = 4780 / 8192 , time = 134.30 m, info = get_bas_lst rank = 9  
update(86): ETA = 8.6718 m, counter = 4800 / 8192 , time = 134.35 m, info = get_bas_lst rank = 9  
update(86): ETA = 8.9353 m, counter = 4820 / 8192 , time = 134.40 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.24165 m, counter = 4840 / 8192 , time = 134.40 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.36939 m, counter = 4860 / 8192 , time = 134.40 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.23862 m, counter = 4880 / 8192 , time = 134.41 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.29292 m, counter = 4900 / 8192 , time = 134.41 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.35176 m, counter = 4920 / 8192 , time = 134.41 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.43409 m, counter = 4940 / 8192 , time = 134.41 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.43841 m, counter = 4960 / 8192 , time = 134.41 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.55195 m, counter = 4980 / 8192 , time = 134.42 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.40620 m, counter = 5000 / 8192 , time = 134.42 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.21002 m, counter = 5020 / 8192 , time = 134.42 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.34660 m, counter = 5040 / 8192 , time = 134.42 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.31673 m, counter = 5060 / 8192 , time = 134.43 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.42269 m, counter = 5080 / 8192 , time = 134.43 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.44681 m, counter = 5100 / 8192 , time = 134.43 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.52657 m, counter = 5120 / 8192 , time = 134.44 m, info = get_bas_lst rank = 9  
update(86): ETA = 197.01 m, counter = 5140 / 8192 , time = 135.73 m, info = get_bas_lst rank = 9  
update(86): ETA = 81.365 m, counter = 5160 / 8192 , time = 136.26 m, info = get_bas_lst rank = 9  
update(86): ETA = 44.900 m, counter = 5180 / 8192 , time = 136.56 m, info = get_bas_lst rank = 9  
update(86): ETA = 31.826 m, counter = 5200 / 8192 , time = 136.77 m, info = get_bas_lst rank = 9  
update(86): ETA = 7.9752 m, counter = 5220 / 8192 , time = 136.83 m, info = get_bas_lst rank = 9  
update(86): ETA = 7.6506 m, counter = 5240 / 8192 , time = 136.88 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.33407 m, counter = 5260 / 8192 , time = 136.88 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.21944 m, counter = 5280 / 8192 , time = 136.88 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.31106 m, counter = 5300 / 8192 , time = 136.89 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.32663 m, counter = 5320 / 8192 , time = 136.89 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.38261 m, counter = 5340 / 8192 , time = 136.89 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.42963 m, counter = 5360 / 8192 , time = 136.89 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.41613 m, counter = 5380 / 8192 , time = 136.90 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.16810 m, counter = 5400 / 8192 , time = 136.90 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.24775 m, counter = 5420 / 8192 , time = 136.90 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.15132 m, counter = 5440 / 8192 , time = 136.90 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.30715 m, counter = 5460 / 8192 , time = 136.90 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.17976 m, counter = 5480 / 8192 , time = 136.90 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.27641 m, counter = 5500 / 8192 , time = 136.91 m, info = get_bas_lst rank = 9  
update(86): ETA = 82.076 m, counter = 5520 / 8192 , time = 137.52 m, info = get_bas_lst rank = 9  
update(86): ETA = 31.655 m, counter = 5540 / 8192 , time = 137.76 m, info = get_bas_lst rank = 9  
update(86): ETA = 13.965 m, counter = 5560 / 8192 , time = 137.86 m, info = get_bas_lst rank = 9  
update(86): ETA = 7.0804 m, counter = 5580 / 8192 , time = 137.92 m, info = get_bas_lst rank = 9  
update(86): ETA = 7.1074 m, counter = 5600 / 8192 , time = 137.97 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.27350 m, counter = 5620 / 8192 , time = 137.98 m, info = get_bas_lst rank = 9  
update(86): ETA = 47.283 m, counter = 5640 / 8192 , time = 138.35 m, info = get_bas_lst rank = 9  
update(86): ETA = 26.477 m, counter = 5660 / 8192 , time = 138.56 m, info = get_bas_lst rank = 9  
update(86): ETA = 8.0552 m, counter = 5680 / 8192 , time = 138.62 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.15834 m, counter = 5700 / 8192 , time = 138.62 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.24756 m, counter = 5720 / 8192 , time = 138.62 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.19104 m, counter = 5740 / 8192 , time = 138.62 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.25630 m, counter = 5760 / 8192 , time = 138.63 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.12089 m, counter = 5780 / 8192 , time = 138.63 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.19456 m, counter = 5800 / 8192 , time = 138.63 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.15840 m, counter = 5820 / 8192 , time = 138.63 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.23474 m, counter = 5840 / 8192 , time = 138.63 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.15622 m, counter = 5860 / 8192 , time = 138.63 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.22854 m, counter = 5880 / 8192 , time = 138.64 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.17543 m, counter = 5900 / 8192 , time = 138.64 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.11812 m, counter = 5920 / 8192 , time = 138.64 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.16581 m, counter = 5940 / 8192 , time = 138.64 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.16497 m, counter = 5960 / 8192 , time = 138.64 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.19904 m, counter = 5980 / 8192 , time = 138.64 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.21648 m, counter = 6000 / 8192 , time = 138.65 m, info = get_bas_lst rank = 9  
update(86): ETA = 30.803 m, counter = 6020 / 8192 , time = 138.93 m, info = get_bas_lst rank = 9  
update(86): ETA = 58.819 m, counter = 6040 / 8192 , time = 139.48 m, info = get_bas_lst rank = 9  
update(86): ETA = 18.548 m, counter = 6060 / 8192 , time = 139.65 m, info = get_bas_lst rank = 9  
update(86): ETA = 5.3201 m, counter = 6080 / 8192 , time = 139.70 m, info = get_bas_lst rank = 9  
update(86): ETA = 5.5596 m, counter = 6100 / 8192 , time = 139.75 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.17020 m, counter = 6120 / 8192 , time = 139.75 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.25521 m, counter = 6140 / 8192 , time = 139.76 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.16400 m, counter = 6160 / 8192 , time = 139.76 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.18557 m, counter = 6180 / 8192 , time = 139.76 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.20963 m, counter = 6200 / 8192 , time = 139.76 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.25863 m, counter = 6220 / 8192 , time = 139.77 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.24960 m, counter = 6240 / 8192 , time = 139.77 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.32478 m, counter = 6260 / 8192 , time = 139.77 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.24880 m, counter = 6280 / 8192 , time = 139.77 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.13296 m, counter = 6300 / 8192 , time = 139.78 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.21250 m, counter = 6320 / 8192 , time = 139.78 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.18680 m, counter = 6340 / 8192 , time = 139.78 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.25289 m, counter = 6360 / 8192 , time = 139.78 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.26600 m, counter = 6380 / 8192 , time = 139.79 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.31800 m, counter = 6400 / 8192 , time = 139.79 m, info = get_bas_lst rank = 9  
update(86): ETA = 66.942 m, counter = 6420 / 8192 , time = 140.54 m, info = get_bas_lst rank = 9  
update(86): ETA = 20.573 m, counter = 6440 / 8192 , time = 140.78 m, info = get_bas_lst rank = 9  
update(86): ETA = 4.7683 m, counter = 6460 / 8192 , time = 140.83 m, info = get_bas_lst rank = 9  
update(86): ETA = 4.3885 m, counter = 6480 / 8192 , time = 140.89 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.19550 m, counter = 6500 / 8192 , time = 140.89 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.28488 m, counter = 6520 / 8192 , time = 140.89 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.19754 m, counter = 6540 / 8192 , time = 140.89 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.11987 m, counter = 6560 / 8192 , time = 140.90 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.17161 m, counter = 6580 / 8192 , time = 140.90 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.17866 m, counter = 6600 / 8192 , time = 140.90 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.21135 m, counter = 6620 / 8192 , time = 140.90 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.24048 m, counter = 6640 / 8192 , time = 140.91 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.23969 m, counter = 6660 / 8192 , time = 140.91 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.10109 m, counter = 6680 / 8192 , time = 140.91 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.13824 m, counter = 6700 / 8192 , time = 140.91 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.076172 m, counter = 6720 / 8192 , time = 140.91 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.15873 m, counter = 6740 / 8192 , time = 140.92 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.086446 m, counter = 6760 / 8192 , time = 140.92 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.13618 m, counter = 6780 / 8192 , time = 140.92 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.096733 m, counter = 6800 / 8192 , time = 140.92 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.087985 m, counter = 6820 / 8192 , time = 140.92 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.079927 m, counter = 6840 / 8192 , time = 140.92 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.10732 m, counter = 6860 / 8192 , time = 140.92 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.098828 m, counter = 6880 / 8192 , time = 140.93 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.12995 m, counter = 6900 / 8192 , time = 140.93 m, info = get_bas_lst rank = 9  
update(86): ETA = 23.412 m, counter = 6920 / 8192 , time = 141.30 m, info = get_bas_lst rank = 9  
update(86): ETA = 13.131 m, counter = 6940 / 8192 , time = 141.50 m, info = get_bas_lst rank = 9  
update(86): ETA = 3.9524 m, counter = 6960 / 8192 , time = 141.57 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.071047 m, counter = 6980 / 8192 , time = 141.57 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.11373 m, counter = 7000 / 8192 , time = 141.57 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.084938 m, counter = 7020 / 8192 , time = 141.57 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.11495 m, counter = 7040 / 8192 , time = 141.58 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.062809 m, counter = 7060 / 8192 , time = 141.58 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.086715 m, counter = 7080 / 8192 , time = 141.58 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.063754 m, counter = 7100 / 8192 , time = 141.58 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.10045 m, counter = 7120 / 8192 , time = 141.58 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.064440 m, counter = 7140 / 8192 , time = 141.58 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.096983 m, counter = 7160 / 8192 , time = 141.58 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.076967 m, counter = 7180 / 8192 , time = 141.59 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.081894 m, counter = 7200 / 8192 , time = 141.59 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.11575 m, counter = 7220 / 8192 , time = 141.59 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.12042 m, counter = 7240 / 8192 , time = 141.59 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.13923 m, counter = 7260 / 8192 , time = 141.60 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.15316 m, counter = 7280 / 8192 , time = 141.60 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.14408 m, counter = 7300 / 8192 , time = 141.60 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.056471 m, counter = 7320 / 8192 , time = 141.60 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.083668 m, counter = 7340 / 8192 , time = 141.61 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.048254 m, counter = 7360 / 8192 , time = 141.61 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.098812 m, counter = 7380 / 8192 , time = 141.61 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.054882 m, counter = 7400 / 8192 , time = 141.61 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.083420 m, counter = 7420 / 8192 , time = 141.61 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.053183 m, counter = 7440 / 8192 , time = 141.61 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.051705 m, counter = 7460 / 8192 , time = 141.62 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.048729 m, counter = 7480 / 8192 , time = 141.62 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.064320 m, counter = 7500 / 8192 , time = 141.62 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.057694 m, counter = 7520 / 8192 , time = 141.62 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.073808 m, counter = 7540 / 8192 , time = 141.62 m, info = get_bas_lst rank = 9  
update(86): ETA = 9.2871 m, counter = 7560 / 8192 , time = 141.92 m, info = get_bas_lst rank = 9  
update(86): ETA = 5.7714 m, counter = 7580 / 8192 , time = 142.10 m, info = get_bas_lst rank = 9  
update(86): ETA = 1.8073 m, counter = 7600 / 8192 , time = 142.17 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.039062 m, counter = 7620 / 8192 , time = 142.17 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.059293 m, counter = 7640 / 8192 , time = 142.17 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.043751 m, counter = 7660 / 8192 , time = 142.17 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.057216 m, counter = 7680 / 8192 , time = 142.17 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.025383 m, counter = 7700 / 8192 , time = 142.17 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.039950 m, counter = 7720 / 8192 , time = 142.18 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.030476 m, counter = 7740 / 8192 , time = 142.18 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.045686 m, counter = 7760 / 8192 , time = 142.18 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.029080 m, counter = 7780 / 8192 , time = 142.18 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.041237 m, counter = 7800 / 8192 , time = 142.18 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.031848 m, counter = 7820 / 8192 , time = 142.19 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.029330 m, counter = 7840 / 8192 , time = 142.19 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.039406 m, counter = 7860 / 8192 , time = 142.19 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.038578 m, counter = 7880 / 8192 , time = 142.19 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.042979 m, counter = 7900 / 8192 , time = 142.19 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.045645 m, counter = 7920 / 8192 , time = 142.20 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.042573 m, counter = 7940 / 8192 , time = 142.20 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.014742 m, counter = 7960 / 8192 , time = 142.20 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.019007 m, counter = 7980 / 8192 , time = 142.20 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.0098670 m, counter = 8000 / 8192 , time = 142.21 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.019495 m, counter = 8020 / 8192 , time = 142.21 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.0096110 m, counter = 8040 / 8192 , time = 142.21 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.013523 m, counter = 8060 / 8192 , time = 142.21 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.0081272 m, counter = 8080 / 8192 , time = 142.21 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.0070255 m, counter = 8100 / 8192 , time = 142.21 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.0052339 m, counter = 8120 / 8192 , time = 142.22 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.0051245 m, counter = 8140 / 8192 , time = 142.22 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.0029242 m, counter = 8160 / 8192 , time = 142.22 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.0014281 m, counter = 8180 / 8192 , time = 142.22 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.000045013 m, counter = 0 / 256 , time = 3.5167e-6 m, info = get_bas_lst rank = 9  
update(86): ETA = 127.83 m, counter = 20 / 256 , time = 10.833 m, info = get_bas_lst rank = 9  
update(86): ETA = 65.037 m, counter = 40 / 256 , time = 16.855 m, info = get_bas_lst rank = 9  
update(86): ETA = 33.037 m, counter = 60 / 256 , time = 20.226 m, info = get_bas_lst rank = 9  
update(86): ETA = 29.301 m, counter = 80 / 256 , time = 23.555 m, info = get_bas_lst rank = 9  
update(86): ETA = 23.022 m, counter = 100 / 256 , time = 26.507 m, info = get_bas_lst rank = 9  
update(86): ETA = 13.666 m, counter = 120 / 256 , time = 28.517 m, info = get_bas_lst rank = 9  
update(86): ETA = 11.857 m, counter = 140 / 256 , time = 30.561 m, info = get_bas_lst rank = 9  
update(86): ETA = 9.7564 m, counter = 160 / 256 , time = 32.594 m, info = get_bas_lst rank = 9  
update(86): ETA = 6.0338 m, counter = 180 / 256 , time = 34.182 m, info = get_bas_lst rank = 9  
update(86): ETA = 4.0642 m, counter = 200 / 256 , time = 35.633 m, info = get_bas_lst rank = 9  
update(86): ETA = 2.6049 m, counter = 220 / 256 , time = 37.080 m, info = get_bas_lst rank = 9  
update(86): ETA = 0.96445 m, counter = 240 / 256 , time = 38.286 m, info = get_bas_lst rank = 9  
get_inv_lst(666): rank = 9 
update(86): ETA = 0.000010403 m, counter = 0 / 77 , time = 1.3510e-7 m, info = A0  
get_inv_lst(680): Found type of involution:  A0 
update(86): ETA = 48.812 m, counter = 1 / 77 , time = 0.64227 m, info = A1  
get_inv_lst(680): Found type of involution:  A1 
update(86): ETA = 48.284 m, counter = 2 / 77 , time = 1.2861 m, info = 2A1  
get_inv_lst(680): Found type of involution:  2A1 
update(86): ETA = 47.364 m, counter = 3 / 77 , time = 1.9261 m, info = A2  
update(86): ETA = 0.019867 m, counter = 4 / 77 , time = 1.9264 m, info = 3A1  
get_inv_lst(680): Found type of involution:  3A1 
update(86): ETA = 46.030 m, counter = 5 / 77 , time = 2.5657 m, info = A1+A2  
update(86): ETA = 0.019213 m, counter = 6 / 77 , time = 2.5660 m, info = A3  
update(86): ETA = 0.016601 m, counter = 7 / 77 , time = 2.5662 m, info = 2A1+A2  
update(86): ETA = 0.015136 m, counter = 8 / 77 , time = 2.5664 m, info = 2A2  
update(86): ETA = 0.017908 m, counter = 9 / 77 , time = 2.5667 m, info = 4A1  
get_inv_lst(680): Found type of involution:  4A1 
update(86): ETA = 42.712 m, counter = 10 / 77 , time = 3.2042 m, info = 4A1  
get_inv_lst(680): Found type of involution:  4A1 
update(86): ETA = 42.045 m, counter = 11 / 77 , time = 3.8412 m, info = A1+A3  
update(86): ETA = 0.013598 m, counter = 12 / 77 , time = 3.8414 m, info = A4  
update(86): ETA = 0.017211 m, counter = 13 / 77 , time = 3.8417 m, info = D4  
get_inv_lst(680): Found type of involution:  D4 
get_inv_lst(695): 	Ambitious type: D4 == 4A1  inv>inv_prv:  True  ambitious types = ['D4', '4A1'] 
update(86): ETA = 352.19 m, counter = 14 / 77 , time = 9.4320 m, info = 2A1+A3  
update(86): ETA = 0.017714 m, counter = 15 / 77 , time = 9.4323 m, info = 2A1+A3  
update(86): ETA = 0.013318 m, counter = 16 / 77 , time = 9.4325 m, info = 3A1+A2  
update(86): ETA = 0.016607 m, counter = 17 / 77 , time = 9.4327 m, info = 5A1  
get_inv_lst(680): Found type of involution:  5A1 
update(86): ETA = 37.986 m, counter = 18 / 77 , time = 10.077 m, info = A1+2A2  
update(86): ETA = 0.018887 m, counter = 19 / 77 , time = 10.077 m, info = A1+A4  
update(86): ETA = 0.011882 m, counter = 20 / 77 , time = 10.077 m, info = A1+D4  
get_inv_lst(680): Found type of involution:  A1+D4 
get_inv_lst(695): 	Ambitious type: A1+D4 == 5A1  inv>inv_prv:  True  ambitious types = ['A1+D4', '5A1'] 
update(86): ETA = 305.12 m, counter = 21 / 77 , time = 15.526 m, info = A2+A3  
update(86): ETA = 0.015318 m, counter = 22 / 77 , time = 15.526 m, info = A5  
update(86): ETA = 0.014548 m, counter = 23 / 77 , time = 15.526 m, info = D5  
update(86): ETA = 0.012641 m, counter = 24 / 77 , time = 15.526 m, info = 2A1+2A2  
update(86): ETA = 0.012987 m, counter = 25 / 77 , time = 15.527 m, info = 2A1+A4  
update(86): ETA = 0.011439 m, counter = 26 / 77 , time = 15.527 m, info = 2A1+D4  
get_inv_lst(680): Found type of involution:  2A1+D4 
update(86): ETA = 32.010 m, counter = 27 / 77 , time = 16.167 m, info = 2A3  
get_inv_lst(680): Found type of involution:  2A3 
get_inv_lst(695): 	Ambitious type: 2A3 == 2A1+D4  inv>inv_prv:  True  ambitious types = ['2A3', '2A1+D4'] 
update(86): ETA = 276.31 m, counter = 28 / 77 , time = 21.806 m, info = 2A3  
update(86): ETA = 0.012739 m, counter = 29 / 77 , time = 21.806 m, info = 3A1+A3  
update(86): ETA = 0.0090742 m, counter = 30 / 77 , time = 21.807 m, info = 3A2  
update(86): ETA = 0.0088941 m, counter = 31 / 77 , time = 21.807 m, info = 4A1+A2  
update(86): ETA = 0.0091006 m, counter = 32 / 77 , time = 21.807 m, info = 6A1  
get_inv_lst(680): Found type of involution:  6A1 
get_inv_lst(695): 	Ambitious type: 6A1 == 2A3  inv>inv_prv:  True  ambitious types = ['2A3', '2A1+D4', '6A1', '2A3'] 
update(86): ETA = 335.78 m, counter = 33 / 77 , time = 29.438 m, info = A1+A2+A3  
update(86): ETA = 0.015817 m, counter = 34 / 77 , time = 29.439 m, info = A1+A5  
update(86): ETA = 0.0093612 m, counter = 35 / 77 , time = 29.439 m, info = A1+A5  
update(86): ETA = 0.0078664 m, counter = 36 / 77 , time = 29.439 m, info = A1+D5  
update(86): ETA = 0.0074900 m, counter = 37 / 77 , time = 29.439 m, info = A2+A4  
update(86): ETA = 0.0074517 m, counter = 38 / 77 , time = 29.439 m, info = A2+D4  
update(86): ETA = 0.0078400 m, counter = 39 / 77 , time = 29.440 m, info = A6  
update(86): ETA = 0.0081437 m, counter = 40 / 77 , time = 29.440 m, info = D6  
get_inv_lst(680): Found type of involution:  D6 
get_inv_lst(695): 	Ambitious type: D6 == 6A1  inv>inv_prv:  True  ambitious types = ['2A3', '2A1+D4', '6A1', '2A3', 'D6', '6A1'] 
update(86): ETA = 346.84 m, counter = 41 / 77 , time = 39.074 m, info = E6  
update(86): ETA = 0.0092189 m, counter = 42 / 77 , time = 39.075 m, info = 2A1+A2+A3  
update(86): ETA = 0.0058616 m, counter = 43 / 77 , time = 39.075 m, info = 2A1+A5  
update(86): ETA = 0.0053571 m, counter = 44 / 77 , time = 39.075 m, info = 2A1+D5  
update(86): ETA = 0.0051450 m, counter = 45 / 77 , time = 39.075 m, info = 3A1+D4  
get_inv_lst(680): Found type of involution:  3A1+D4 
update(86): ETA = 19.872 m, counter = 46 / 77 , time = 39.716 m, info = 4A1+A3  
update(86): ETA = 0.0062621 m, counter = 47 / 77 , time = 39.716 m, info = 7A1  
get_inv_lst(680): Found type of involution:  7A1 
get_inv_lst(695): 	Ambitious type: 7A1 == 3A1+D4  inv>inv_prv:  True  ambitious types = ['7A1', '3A1+D4'] 
update(86): ETA = 160.65 m, counter = 48 / 77 , time = 45.256 m, info = A1+2A3  
get_inv_lst(680): Found type of involution:  A1+2A3 
get_inv_lst(695): 	Ambitious type: A1+2A3 == 7A1  inv>inv_prv:  True  ambitious types = ['7A1', '3A1+D4', 'A1+2A3', '7A1'] 
update(86): ETA = 208.11 m, counter = 49 / 77 , time = 52.689 m, info = A1+3A2  
update(86): ETA = 0.0070934 m, counter = 50 / 77 , time = 52.689 m, info = A1+A2+A4  
update(86): ETA = 0.0042293 m, counter = 51 / 77 , time = 52.689 m, info = A1+A6  
update(86): ETA = 0.0040350 m, counter = 52 / 77 , time = 52.689 m, info = A1+D6  
get_inv_lst(680): Found type of involution:  A1+D6 
get_inv_lst(695): 	Ambitious type: A1+D6 == A1+2A3  inv>inv_prv:  True  ambitious types = ['7A1', '3A1+D4', 'A1+2A3', '7A1', 'A1+D6', 'A1+2A3'] 
update(86): ETA = 227.59 m, counter = 53 / 77 , time = 62.172 m, info = A1+E6  
update(86): ETA = 0.0059409 m, counter = 54 / 77 , time = 62.172 m, info = A2+A5  
get_inv_lst(680): Found type of involution:  A2+A5 
get_inv_lst(695): 	Ambitious type: A2+A5 == A1+D6  inv>inv_prv:  True  ambitious types = ['7A1', '3A1+D4', 'A1+2A3', '7A1', 'A1+D6', 'A1+2A3', 'A2+A5', 'A1+D6'] 
update(86): ETA = 252.05 m, counter = 55 / 77 , time = 73.629 m, info = A2+D5  
update(86): ETA = 0.0053774 m, counter = 56 / 77 , time = 73.629 m, info = A3+A4  
update(86): ETA = 0.0032647 m, counter = 57 / 77 , time = 73.630 m, info = A3+D4  
update(86): ETA = 0.0030992 m, counter = 58 / 77 , time = 73.630 m, info = A7  
get_inv_lst(680): Found type of involution:  A7 
get_inv_lst(695): 	Ambitious type: A7 == A2+A5  inv>inv_prv:  True  ambitious types = ['7A1', '3A1+D4', 'A1+2A3', '7A1', 'A1+D6', 'A1+2A3', 'A2+A5', 'A1+D6', 'A7', 'A2+A5'] 
update(86): ETA = 239.66 m, counter = 59 / 77 , time = 86.944 m, info = A7  
update(86): ETA = 0.0052955 m, counter = 60 / 77 , time = 86.944 m, info = D7  
update(86): ETA = 0.0025757 m, counter = 61 / 77 , time = 86.944 m, info = E7  
get_inv_lst(680): Found type of involution:  E7 
get_inv_lst(695): 	Ambitious type: E7 == A7  inv>inv_prv:  True  ambitious types = ['7A1', '3A1+D4', 'A1+2A3', '7A1', 'A1+D6', 'A1+2A3', 'A2+A5', 'A1+D6', 'A7', 'A2+A5', 'E7', 'A7'] 
update(86): ETA = 228.93 m, counter = 62 / 77 , time = 102.21 m, info = 2A1+2A3  
get_inv_lst(680): Found type of involution:  2A1+2A3 
update(86): ETA = 8.9666 m, counter = 63 / 77 , time = 102.85 m, info = 2A1+D6  
get_inv_lst(680): Found type of involution:  2A1+D6 
get_inv_lst(695): 	Ambitious type: 2A1+D6 == 2A1+2A3  inv>inv_prv:  True  ambitious types = ['2A1+D6', '2A1+2A3'] 
update(86): ETA = 72.071 m, counter = 64 / 77 , time = 108.39 m, info = 2A4  
get_inv_lst(680): Found type of involution:  2A4 
get_inv_lst(695): 	Ambitious type: 2A4 == 2A1+D6  inv>inv_prv:  True  ambitious types = ['2A1+D6', '2A1+2A3', '2A4', '2A1+D6'] 
update(86): ETA = 89.467 m, counter = 65 / 77 , time = 115.85 m, info = 2D4  
get_inv_lst(680): Found type of involution:  2D4 
get_inv_lst(695): 	Ambitious type: 2D4 == 2A4  inv>inv_prv:  True  ambitious types = ['2A1+D6', '2A1+2A3', '2A4', '2A1+D6', '2D4', '2A4'] 
update(86): ETA = 103.13 m, counter = 66 / 77 , time = 125.22 m, info = 4A1+D4  
get_inv_lst(680): Found type of involution:  4A1+D4 
get_inv_lst(695): 	Ambitious type: 4A1+D4 == 2D4  inv>inv_prv:  True  ambitious types = ['2A1+D6', '2A1+2A3', '2A4', '2A1+D6', '2D4', '2A4', '4A1+D4', '2D4'] 
update(86): ETA = 113.61 m, counter = 67 / 77 , time = 136.58 m, info = 4A2  
get_inv_lst(680): Found type of involution:  4A2 
get_inv_lst(695): 	Ambitious type: 4A2 == 4A1+D4  inv>inv_prv:  True  ambitious types = ['2A1+D6', '2A1+2A3', '2A4', '2A1+D6', '2D4', '2A4', '4A1+D4', '2D4', '4A2', '4A1+D4'] 
update(86): ETA = 120.66 m, counter = 68 / 77 , time = 149.99 m, info = 8A1  
get_inv_lst(680): Found type of involution:  8A1 
get_inv_lst(695): 	Ambitious type: 8A1 == 4A2  inv>inv_prv:  True  ambitious types = ['2A1+D6', '2A1+2A3', '2A4', '2A1+D6', '2D4', '2A4', '4A1+D4', '2D4', '4A2', '4A1+D4', '8A1', '4A2'] 
update(86): ETA = 121.81 m, counter = 69 / 77 , time = 165.22 m, info = A1+A2+A5  
get_inv_lst(680): Found type of involution:  A1+A2+A5 
get_inv_lst(695): 	Ambitious type: A1+A2+A5 == 8A1  inv>inv_prv:  True  ambitious types = ['2A1+D6', '2A1+2A3', '2A4', '2A1+D6', '2D4', '2A4', '4A1+D4', '2D4', '4A2', '4A1+D4', '8A1', '4A2', 'A1+A2+A5', '8A1'] 
update(86): ETA = 120.91 m, counter = 70 / 77 , time = 182.49 m, info = A1+A7  
get_inv_lst(680): Found type of involution:  A1+A7 
get_inv_lst(695): 	Ambitious type: A1+A7 == A1+A2+A5  inv>inv_prv:  True  ambitious types = ['2A1+D6', '2A1+2A3', '2A4', '2A1+D6', '2D4', '2A4', '4A1+D4', '2D4', '4A2', '4A1+D4', '8A1', '4A2', 'A1+A2+A5', '8A1', 'A1+A7', 'A1+A2+A5'] 
update(86): ETA = 115.25 m, counter = 71 / 77 , time = 201.70 m, info = A1+E7  
get_inv_lst(680): Found type of involution:  A1+E7 
get_inv_lst(695): 	Ambitious type: A1+E7 == A1+A7  inv>inv_prv:  True  ambitious types = ['2A1+D6', '2A1+2A3', '2A4', '2A1+D6', '2D4', '2A4', '4A1+D4', '2D4', '4A2', '4A1+D4', '8A1', '4A2', 'A1+A2+A5', '8A1', 'A1+A7', 'A1+A2+A5', 'A1+E7', 'A1+A7'] 
update(86): ETA = 105.39 m, counter = 72 / 77 , time = 222.77 m, info = A2+E6  
get_inv_lst(680): Found type of involution:  A2+E6 
get_inv_lst(695): 	Ambitious type: A2+E6 == A1+E7  inv>inv_prv:  True  ambitious types = ['2A1+D6', '2A1+2A3', '2A4', '2A1+D6', '2D4', '2A4', '4A1+D4', '2D4', '4A2', '4A1+D4', '8A1', '4A2', 'A1+A2+A5', '8A1', 'A1+A7', 'A1+A2+A5', 'A1+E7', 'A1+A7', 'A2+E6', 'A1+E7'] 
update(86): ETA = 92.513 m, counter = 73 / 77 , time = 245.90 m, info = A3+D5  
get_inv_lst(680): Found type of involution:  A3+D5 
get_inv_lst(695): 	Ambitious type: A3+D5 == A2+E6  inv>inv_prv:  True  ambitious types = ['2A1+D6', '2A1+2A3', '2A4', '2A1+D6', '2D4', '2A4', '4A1+D4', '2D4', '4A2', '4A1+D4', '8A1', '4A2', 'A1+A2+A5', '8A1', 'A1+A7', 'A1+A2+A5', 'A1+E7', 'A1+A7', 'A2+E6', 'A1+E7', 'A3+D5', 'A2+E6'] 
update(86): ETA = 74.935 m, counter = 74 / 77 , time = 270.88 m, info = A8  
get_inv_lst(680): Found type of involution:  A8 
get_inv_lst(695): 	Ambitious type: A8 == A3+D5  inv>inv_prv:  True  ambitious types = ['2A1+D6', '2A1+2A3', '2A4', '2A1+D6', '2D4', '2A4', '4A1+D4', '2D4', '4A2', '4A1+D4', '8A1', '4A2', 'A1+A2+A5', '8A1', 'A1+A7', 'A1+A2+A5', 'A1+E7', 'A1+A7', 'A2+E6', 'A1+E7', 'A3+D5', 'A2+E6', 'A8', 'A3+D5'] 
update(86): ETA = 53.668 m, counter = 75 / 77 , time = 297.71 m, info = D8  
get_inv_lst(680): Found type of involution:  D8 
get_inv_lst(695): 	Ambitious type: D8 == A8  inv>inv_prv:  True  ambitious types = ['2A1+D6', '2A1+2A3', '2A4', '2A1+D6', '2D4', '2A4', '4A1+D4', '2D4', '4A2', '4A1+D4', '8A1', '4A2', 'A1+A2+A5', '8A1', 'A1+A7', 'A1+A2+A5', 'A1+E7', 'A1+A7', 'A2+E6', 'A1+E7', 'A3+D5', 'A2+E6', 'A8', 'A3+D5', 'D8', 'A8'] 
update(86): ETA = 28.794 m, counter = 76 / 77 , time = 326.51 m, info = E8  
get_inv_lst(680): Found type of involution:  E8 
get_inv_lst(695): 	Ambitious type: E8 == D8  inv>inv_prv:  True  ambitious types = ['2A1+D6', '2A1+2A3', '2A4', '2A1+D6', '2D4', '2A4', '4A1+D4', '2D4', '4A2', '4A1+D4', '8A1', '4A2', 'A1+A2+A5', '8A1', 'A1+A7', 'A1+A2+A5', 'A1+E7', 'A1+A7', 'A2+E6', 'A1+E7', 'A3+D5', 'A2+E6', 'A8', 'A3+D5', 'D8', 'A8', 'E8', 'D8'] 
get_cls(1066): start looping through inv_lst:  10 ['A0', 'A1', '2A1', '3A1', '4A1', 'D4', 'A1+D4', 'D6', 'E7', 'E8'] 
get_cls(1070): looping through inv_lst: (9, 'A0', []) 
get_cls(1075): Since Mtype equals A0 we recover the classification from bas_lst. 
get_cls(1070): looping through inv_lst: (9, 'A1', [e1-e2]) 
get_part_roots(875): r_lst      = 120 [e1-e2, e2-e3, e1-e3, e3-e4, e2-e4, e1-e4, e4-e5, e3-e5, e2-e5, e1-e5, e5-e6, e4-e6, e3-e6, e2-e6, e1-e6, e6-e7, e5-e7, e4-e7, e3-e7, e2-e7, e1-e7, e7-e8, e6-e8, e5-e8, e4-e8, e3-e8, e2-e8, e1-e8, e0-e1-e2-e3, e0-e1-e2-e4, e0-e1-e3-e4, e0-e2-e3-e4, e0-e1-e2-e5, e0-e1-e3-e5, e0-e2-e3-e5, e0-e1-e4-e5, e0-e2-e4-e5, e0-e3-e4-e5, e0-e1-e2-e6, e0-e1-e3-e6, e0-e2-e3-e6, e0-e1-e4-e6, e0-e2-e4-e6, e0-e3-e4-e6, e0-e1-e5-e6, e0-e2-e5-e6, e0-e3-e5-e6, e0-e4-e5-e6, e0-e1-e2-e7, e0-e1-e3-e7, e0-e2-e3-e7, e0-e1-e4-e7, e0-e2-e4-e7, e0-e3-e4-e7, e0-e1-e5-e7, e0-e2-e5-e7, e0-e3-e5-e7, e0-e4-e5-e7, e0-e1-e6-e7, e0-e2-e6-e7, e0-e3-e6-e7, e0-e4-e6-e7, e0-e5-e6-e7, e0-e1-e2-e8, e0-e1-e3-e8, e0-e2-e3-e8, e0-e1-e4-e8, e0-e2-e4-e8, e0-e3-e4-e8, e0-e1-e5-e8, e0-e2-e5-e8, e0-e3-e5-e8, e0-e4-e5-e8, e0-e1-e6-e8, e0-e2-e6-e8, e0-e3-e6-e8, e0-e4-e6-e8, e0-e5-e6-e8, e0-e1-e7-e8, e0-e2-e7-e8, e0-e3-e7-e8, e0-e4-e7-e8, e0-e5-e7-e8, e0-e6-e7-e8, 2e0-e1-e2-e3-e4-e5-e6, 2e0-e1-e2-e3-e4-e5-e7, 2e0-e1-e2-e3-e4-e6-e7, 2e0-e1-e2-e3-e5-e6-e7, 2e0-e1-e2-e4-e5-e6-e7, 2e0-e1-e3-e4-e5-e6-e7, 2e0-e2-e3-e4-e5-e6-e7, 2e0-e1-e2-e3-e4-e5-e8, 2e0-e1-e2-e3-e4-e6-e8, 2e0-e1-e2-e3-e5-e6-e8, 2e0-e1-e2-e4-e5-e6-e8, 2e0-e1-e3-e4-e5-e6-e8, 2e0-e2-e3-e4-e5-e6-e8, 2e0-e1-e2-e3-e4-e7-e8, 2e0-e1-e2-e3-e5-e7-e8, 2e0-e1-e2-e4-e5-e7-e8, 2e0-e1-e3-e4-e5-e7-e8, 2e0-e2-e3-e4-e5-e7-e8, 2e0-e1-e2-e3-e6-e7-e8, 2e0-e1-e2-e4-e6-e7-e8, 2e0-e1-e3-e4-e6-e7-e8, 2e0-e2-e3-e4-e6-e7-e8, 2e0-e1-e2-e5-e6-e7-e8, 2e0-e1-e3-e5-e6-e7-e8, 2e0-e2-e3-e5-e6-e7-e8, 2e0-e1-e4-e5-e6-e7-e8, 2e0-e2-e4-e5-e6-e7-e8, 2e0-e3-e4-e5-e6-e7-e8, 3e0-2e1-e2-e3-e4-e5-e6-e7-e8, 3e0-e1-2e2-e3-e4-e5-e6-e7-e8, 3e0-e1-e2-2e3-e4-e5-e6-e7-e8, 3e0-e1-e2-e3-2e4-e5-e6-e7-e8, 3e0-e1-e2-e3-e4-2e5-e6-e7-e8, 3e0-e1-e2-e3-e4-e5-2e6-e7-e8, 3e0-e1-e2-e3-e4-e5-e6-2e7-e8, 3e0-e1-e2-e3-e4-e5-e6-e7-2e8] 
get_part_roots(876): s_lst      = 63 [e3-e4, e4-e5, e3-e5, e5-e6, e4-e6, e3-e6, e6-e7, e5-e7, e4-e7, e3-e7, e7-e8, e6-e8, e5-e8, e4-e8, e3-e8, e0-e1-e2-e3, e0-e1-e2-e4, e0-e1-e2-e5, e0-e3-e4-e5, e0-e1-e2-e6, e0-e3-e4-e6, e0-e3-e5-e6, e0-e4-e5-e6, e0-e1-e2-e7, e0-e3-e4-e7, e0-e3-e5-e7, e0-e4-e5-e7, e0-e3-e6-e7, e0-e4-e6-e7, e0-e5-e6-e7, e0-e1-e2-e8, e0-e3-e4-e8, e0-e3-e5-e8, e0-e4-e5-e8, e0-e3-e6-e8, e0-e4-e6-e8, e0-e5-e6-e8, e0-e3-e7-e8, e0-e4-e7-e8, e0-e5-e7-e8, e0-e6-e7-e8, 2e0-e1-e2-e3-e4-e5-e6, 2e0-e1-e2-e3-e4-e5-e7, 2e0-e1-e2-e3-e4-e6-e7, 2e0-e1-e2-e3-e5-e6-e7, 2e0-e1-e2-e4-e5-e6-e7, 2e0-e1-e2-e3-e4-e5-e8, 2e0-e1-e2-e3-e4-e6-e8, 2e0-e1-e2-e3-e5-e6-e8, 2e0-e1-e2-e4-e5-e6-e8, 2e0-e1-e2-e3-e4-e7-e8, 2e0-e1-e2-e3-e5-e7-e8, 2e0-e1-e2-e4-e5-e7-e8, 2e0-e1-e2-e3-e6-e7-e8, 2e0-e1-e2-e4-e6-e7-e8, 2e0-e1-e2-e5-e6-e7-e8, 2e0-e3-e4-e5-e6-e7-e8, 3e0-e1-e2-2e3-e4-e5-e6-e7-e8, 3e0-e1-e2-e3-2e4-e5-e6-e7-e8, 3e0-e1-e2-e3-e4-2e5-e6-e7-e8, 3e0-e1-e2-e3-e4-e5-2e6-e7-e8, 3e0-e1-e2-e3-e4-e5-e6-2e7-e8, 3e0-e1-e2-e3-e4-e5-e6-e7-2e8] 
get_part_roots(877): tq1_lst    = 56 [e2-e3, e1-e3, e2-e4, e1-e4, e2-e5, e1-e5, e2-e6, e1-e6, e2-e7, e1-e7, e2-e8, e1-e8, e0-e1-e3-e4, e0-e2-e3-e4, e0-e1-e3-e5, e0-e2-e3-e5, e0-e1-e4-e5, e0-e2-e4-e5, e0-e1-e3-e6, e0-e2-e3-e6, e0-e1-e4-e6, e0-e2-e4-e6, e0-e1-e5-e6, e0-e2-e5-e6, e0-e1-e3-e7, e0-e2-e3-e7, e0-e1-e4-e7, e0-e2-e4-e7, e0-e1-e5-e7, e0-e2-e5-e7, e0-e1-e6-e7, e0-e2-e6-e7, e0-e1-e3-e8, e0-e2-e3-e8, e0-e1-e4-e8, e0-e2-e4-e8, e0-e1-e5-e8, e0-e2-e5-e8, e0-e1-e6-e8, e0-e2-e6-e8, e0-e1-e7-e8, e0-e2-e7-e8, 2e0-e1-e3-e4-e5-e6-e7, 2e0-e2-e3-e4-e5-e6-e7, 2e0-e1-e3-e4-e5-e6-e8, 2e0-e2-e3-e4-e5-e6-e8, 2e0-e1-e3-e4-e5-e7-e8, 2e0-e2-e3-e4-e5-e7-e8, 2e0-e1-e3-e4-e6-e7-e8, 2e0-e2-e3-e4-e6-e7-e8, 2e0-e1-e3-e5-e6-e7-e8, 2e0-e2-e3-e5-e6-e7-e8, 2e0-e1-e4-e5-e6-e7-e8, 2e0-e2-e4-e5-e6-e7-e8, 3e0-2e1-e2-e3-e4-e5-e6-e7-e8, 3e0-e1-2e2-e3-e4-e5-e6-e7-e8] 
get_part_roots(878): tq_lst     = 0 [] 
get_part_roots(879): q_lst      = 0 [] 
get_part_roots(880):        M --> 0 [] 
get_part_roots(881): inv.Md_lst = A1 [e1-e2] , rank = 9 
import_cls(1015): importing:  (9, 'A1', 'A0') [e1-e2] == [e1-e2] 
import_cls(1015): importing:  (9, 'A1', '{A1}') [e1-e2] == [e1-e2] 
import_cls(1015): importing:  (9, 'A1', '2{A1}') [e1-e2] == [e1-e2] 
import_cls(1015): importing:  (9, 'A1', '2{A1}') [e1-e2] == [e1-e2] 
import_cls(1015): importing:  (9, 'A1', '{A2}') [e1-e2] == [e1-e2] 
import_cls(1015): importing:  (9, 'A1', '3{A1}') [e1-e2] == [e1-e2] 
import_cls(1015): importing:  (9, 'A1', '3{A1}') [e1-e2] == [e1-e2] 
import_cls(1015): importing:  (9, 'A1', '3{A1}') [e1-e2] == [e1-e2] 
import_cls(1015): importing:  (9, 'A1', '{A1}+{A2}') [e1-e2] == [e1-e2] 
import_cls(1015): importing:  (9, 'A1', '{A3}') [e1-e2] == [e1-e2] 
import_cls(1015): importing:  (9, 'A1', '{A3}') [e1-e2] == [e1-e2] 
import_cls(1015): importing:  (9, 'A1', '2{A1}+{A2}') [e1-e2] == [e1-e2] 
import_cls(1015): importing:  (9, 'A1', '2{A2}') [e1-e2] == [e1-e2] 
import_cls(1015): importing:  (9, 'A1', '4{A1}') [e1-e2] == [e1-e2] 
import_cls(1015): importing:  (9, 'A1', '4{A1}') [e1-e2] == [e1-e2] 
import_cls(1015): importing:  (9, 'A1', '{A1}+{A3}') [e1-e2] == [e1-e2] 
import_cls(1015): importing:  (9, 'A1', '{A1}+{A3}') [e1-e2] == [e1-e2] 
import_cls(1015): importing:  (9, 'A1', '{A1}+{A3}') [e1-e2] == [e1-e2] 
import_cls(1015): importing:  (9, 'A1', '{A4}') [e1-e2] == [e1-e2] 
import_cls(1015): importing:  (9, 'A1', '{D4}') [e1-e2] == [e1-e2] 
import_cls(1015): importing:  (9, 'A1', '2{A1}+{A3}') [e1-e2] == [e1-e2] 
import_cls(1015): importing:  (9, 'A1', '2{A1}+{A3}') [e1-e2] == [e1-e2] 
import_cls(1015): importing:  (9, 'A1', '5{A1}') [e1-e2] == [e1-e2] 
import_cls(1015): importing:  (9, 'A1', '{A1}+{D4}') [e1-e2] == [e1-e2] 
import_cls(1015): importing:  (9, 'A1', '{A2}+{A3}') [e1-e2] == [e1-e2] 
import_cls(1015): importing:  (9, 'A1', '{A5}') [e1-e2] == [e1-e2] 
import_cls(1015): importing:  (9, 'A1', '{A5}') [e1-e2] == [e1-e2] 
import_cls(1015): importing:  (9, 'A1', '{D5}') [e1-e2] == [e1-e2] 
import_cls(1015): importing:  (9, 'A1', '2{A1}+{D4}') [e1-e2] == [e1-e2] 
import_cls(1015): importing:  (9, 'A1', '2{A3}') [e1-e2] == [e1-e2] 
import_cls(1015): importing:  (9, 'A1', '6{A1}') [e1-e2] == [e1-e2] 
import_cls(1015): importing:  (9, 'A1', '{D6}') [e1-e2] == [e1-e2] 
get_cls(1086): looping through inv_lst continued after recursive call: (9, 'A1', [e1-e2]) 
get_cls(1094): bas1_lst = 32 [('A1', 'A0'), ('A1', 'A1'), ('A1', '2A1'), ('A1', '2A1'), ('A1', 'A2'), ('A1', '3A1'), ('A1', '3A1'), ('A1', '3A1'), ('A1', 'A1+A2'), ('A1', 'A3'), ('A1', 'A3'), ('A1', '2A1+A2'), ('A1', '2A2'), ('A1', '4A1'), ('A1', '4A1'), ('A1', 'A1+A3'), ('A1', 'A1+A3'), ('A1', 'A1+A3'), ('A1', 'A4'), ('A1', 'D4'), ('A1', '2A1+A3'), ('A1', '2A1+A3'), ('A1', '5A1'), ('A1', 'A1+D4'), ('A1', 'A2+A3'), ('A1', 'A5'), ('A1', 'A5'), ('A1', 'D5'), ('A1', '2A1+D4'), ('A1', '2A3'), ('A1', '6A1'), ('A1', 'D6')] 
get_cls(1095): s_lst    = 33 [e7-e8, e6-e8, e5-e8, e4-e8, e3-e8, e0-e1-e2-e8, e0-e3-e4-e8, e0-e3-e5-e8, e0-e4-e5-e8, e0-e3-e6-e8, e0-e4-e6-e8, e0-e5-e6-e8, e0-e3-e7-e8, e0-e4-e7-e8, e0-e5-e7-e8, e0-e6-e7-e8, 2e0-e1-e2-e3-e4-e5-e8, 2e0-e1-e2-e3-e4-e6-e8, 2e0-e1-e2-e3-e5-e6-e8, 2e0-e1-e2-e4-e5-e6-e8, 2e0-e1-e2-e3-e4-e7-e8, 2e0-e1-e2-e3-e5-e7-e8, 2e0-e1-e2-e4-e5-e7-e8, 2e0-e1-e2-e3-e6-e7-e8, 2e0-e1-e2-e4-e6-e7-e8, 2e0-e1-e2-e5-e6-e7-e8, 2e0-e3-e4-e5-e6-e7-e8, 3e0-e1-e2-2e3-e4-e5-e6-e7-e8, 3e0-e1-e2-e3-2e4-e5-e6-e7-e8, 3e0-e1-e2-e3-e4-2e5-e6-e7-e8, 3e0-e1-e2-e3-e4-e5-2e6-e7-e8, 3e0-e1-e2-e3-e4-e5-e6-2e7-e8, 3e0-e1-e2-e3-e4-e5-e6-e7-2e8] 
get_cls(1096): q_lst    = 0 [] 
update(86): ETA = 0.00015513 m, counter = 0 / 77 , time = 2.0146e-6 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1', 'A0')  
update(86): ETA = 0.084336 m, counter = 1 / 77 , time = 0.0011117 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1', '{A1}')  
update(86): ETA = 0.32783 m, counter = 2 / 77 , time = 0.0054827 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1', '2{A1}')  
update(86): ETA = 52.064 m, counter = 3 / 77 , time = 0.70905 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1', '{A2}')  
update(86): ETA = 0.81147 m, counter = 4 / 77 , time = 0.72017 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1', '3{A1}')  
update(86): ETA = 924.32 m, counter = 5 / 77 , time = 13.558 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1', '{A1}+{A2}')  
update(86): ETA = 1.5200 m, counter = 6 / 77 , time = 13.579 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1', '{A3}')  
update(86): ETA = 1.5008 m, counter = 7 / 77 , time = 13.601 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1', '2{A1}+{A2}')  
update(86): ETA = 1.4810 m, counter = 8 / 77 , time = 13.622 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1', '2{A2}')  
update(86): ETA = 1.4463 m, counter = 9 / 77 , time = 13.644 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1', '4{A1}')  
update(86): ETA = 414.76 m, counter = 10 / 77 , time = 19.834 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1', '4{A1}')  
update(86): ETA = 0.019456 m, counter = 11 / 77 , time = 19.834 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1', '{A1}+{A3}')  
update(86): ETA = 1.3944 m, counter = 12 / 77 , time = 19.856 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1', '{A4}')  
update(86): ETA = 1.3731 m, counter = 13 / 77 , time = 19.877 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1', '{D4}')  
update(86): ETA = 1.3526 m, counter = 14 / 77 , time = 19.899 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1', '2{A1}+{A3}')  
update(86): ETA = 1.3303 m, counter = 15 / 77 , time = 19.920 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1', '2{A1}+{A3}')  
update(86): ETA = 0.020075 m, counter = 16 / 77 , time = 19.920 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1', '3{A1}+{A2}')  
update(86): ETA = 1.2814 m, counter = 17 / 77 , time = 19.942 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1', '5{A1}')  
update(86): ETA = 256.18 m, counter = 18 / 77 , time = 24.284 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1', '{A1}+2{A2}')  
update(86): ETA = 1.2439 m, counter = 19 / 77 , time = 24.305 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1', '{A1}+{A4}')  
update(86): ETA = 1.2251 m, counter = 20 / 77 , time = 24.327 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1', '{A1}+{D4}')  
update(86): ETA = 1.2014 m, counter = 21 / 77 , time = 24.348 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1', '{A2}+{A3}')  
update(86): ETA = 1.1958 m, counter = 22 / 77 , time = 24.370 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1', '{A5}')  
update(86): ETA = 1.1818 m, counter = 23 / 77 , time = 24.392 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1', '{D5}')  
update(86): ETA = 1.1551 m, counter = 24 / 77 , time = 24.414 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1', '2{A1}+2{A2}')  
update(86): ETA = 0.027877 m, counter = 25 / 77 , time = 24.414 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1', '2{A1}+{A4}')  
update(86): ETA = 0.027973 m, counter = 26 / 77 , time = 24.415 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1', '2{A1}+{D4}')  
update(86): ETA = 100.33 m, counter = 27 / 77 , time = 26.421 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1', '2{A3}')  
update(86): ETA = 1.0673 m, counter = 28 / 77 , time = 26.443 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1', '2{A3}')  
update(86): ETA = 0.023075 m, counter = 29 / 77 , time = 26.444 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1', '3{A1}+{A3}')  
update(86): ETA = 1.0214 m, counter = 30 / 77 , time = 26.465 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1', '3{A2}')  
update(86): ETA = 0.99935 m, counter = 31 / 77 , time = 26.487 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1', '4{A1}+{A2}')  
update(86): ETA = 0.018004 m, counter = 32 / 77 , time = 26.488 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1', '6{A1}')  
update(86): ETA = 193.57 m, counter = 33 / 77 , time = 30.887 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1', '{A1}+{A2}+{A3}')  
update(86): ETA = 0.93852 m, counter = 34 / 77 , time = 30.909 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1', '{A1}+{A5}')  
update(86): ETA = 0.91918 m, counter = 35 / 77 , time = 30.931 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1', '{A1}+{A5}')  
update(86): ETA = 0.024599 m, counter = 36 / 77 , time = 30.931 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1', '{A1}+{D5}')  
update(86): ETA = 0.87498 m, counter = 37 / 77 , time = 30.953 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1', '{A2}+{A4}')  
update(86): ETA = 0.85030 m, counter = 38 / 77 , time = 30.975 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1', '{A2}+{D4}')  
update(86): ETA = 0.026079 m, counter = 39 / 77 , time = 30.975 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1', '{A6}')  
update(86): ETA = 0.81097 m, counter = 40 / 77 , time = 30.997 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1', '{D6}')  
update(86): ETA = 0.79013 m, counter = 41 / 77 , time = 31.019 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1', '{E6}')  
update(86): ETA = 0.76388 m, counter = 42 / 77 , time = 31.041 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1', '2{A1}+{A2}+{A3}')  
update(86): ETA = 0.024193 m, counter = 43 / 77 , time = 31.042 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1', '2{A1}+{A5}')  
update(86): ETA = 0.023567 m, counter = 44 / 77 , time = 31.043 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1', '2{A1}+{D5}')  
update(86): ETA = 0.020554 m, counter = 45 / 77 , time = 31.043 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1', '3{A1}+{D4}')  
update(86): ETA = 0.67921 m, counter = 46 / 77 , time = 31.065 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1', '4{A1}+{A3}')  
update(86): ETA = 0.015129 m, counter = 47 / 77 , time = 31.066 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1', '7{A1}')  
update(86): ETA = 127.37 m, counter = 48 / 77 , time = 35.458 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1', '{A1}+2{A3}')  
update(86): ETA = 0.60991 m, counter = 49 / 77 , time = 35.479 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1', '{A1}+3{A2}')  
update(86): ETA = 0.018113 m, counter = 50 / 77 , time = 35.480 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1', '{A1}+{A2}+{A4}')  
update(86): ETA = 0.020576 m, counter = 51 / 77 , time = 35.481 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1', '{A1}+{A6}')  
update(86): ETA = 0.019898 m, counter = 52 / 77 , time = 35.482 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1', '{A1}+{D6}')  
update(86): ETA = 4.9853 m, counter = 53 / 77 , time = 35.689 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1', '{A1}+{E6}')  
update(86): ETA = 0.017248 m, counter = 54 / 77 , time = 35.690 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1', '{A2}+{A5}')  
update(86): ETA = 0.48279 m, counter = 55 / 77 , time = 35.712 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1', '{A2}+{D5}')  
update(86): ETA = 0.015076 m, counter = 56 / 77 , time = 35.713 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1', '{A3}+{A4}')  
update(86): ETA = 0.014441 m, counter = 57 / 77 , time = 35.714 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1', '{A3}+{D4}')  
update(86): ETA = 0.016876 m, counter = 58 / 77 , time = 35.714 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1', '{A7}')  
update(86): ETA = 0.39926 m, counter = 59 / 77 , time = 35.737 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1', '{A7}')  
update(86): ETA = 0.015010 m, counter = 60 / 77 , time = 35.738 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1', '{D7}')  
update(86): ETA = 0.014311 m, counter = 61 / 77 , time = 35.738 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1', '{E7}')  
update(86): ETA = 0.33059 m, counter = 62 / 77 , time = 35.760 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1', '2{A1}+2{A3}')  
update(86): ETA = 0.012909 m, counter = 63 / 77 , time = 35.761 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1', '2{A1}+{D6}')  
update(86): ETA = 0.011603 m, counter = 64 / 77 , time = 35.762 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1', '2{A4}')  
update(86): ETA = 0.010798 m, counter = 65 / 77 , time = 35.763 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1', '2{D4}')  
update(86): ETA = 0.0087136 m, counter = 66 / 77 , time = 35.764 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1', '4{A1}+{D4}')  
update(86): ETA = 0.0074767 m, counter = 67 / 77 , time = 35.765 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1', '4{A2}')  
update(86): ETA = 0.0056393 m, counter = 68 / 77 , time = 35.765 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1', '8{A1}')  
update(86): ETA = 0.0068195 m, counter = 69 / 77 , time = 35.766 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1', '{A1}+{A2}+{A5}')  
update(86): ETA = 0.0069621 m, counter = 70 / 77 , time = 35.767 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1', '{A1}+{A7}')  
update(86): ETA = 0.0060103 m, counter = 71 / 77 , time = 35.768 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1', '{A1}+{E7}')  
update(86): ETA = 0.0047017 m, counter = 72 / 77 , time = 35.769 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1', '{A2}+{E6}')  
update(86): ETA = 0.0036265 m, counter = 73 / 77 , time = 35.770 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1', '{A3}+{D5}')  
update(86): ETA = 0.0032930 m, counter = 74 / 77 , time = 35.771 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1', '{A8}')  
update(86): ETA = 0.0021993 m, counter = 75 / 77 , time = 35.772 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1', '{D8}')  
update(86): ETA = 0.0011062 m, counter = 76 / 77 , time = 35.773 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1', '{E8}')  
get_cls(1130): Setting Dynkin types of 891 items...please wait... 
update(86): ETA = 0.00010645 m, counter = 0 / 891 , time = 0.000010633 m, info = 9 A1 A0  
update(86): ETA = 0.026027 m, counter = 89 / 891 , time = 0.0028990 m, info = 9 A1 2A1  
update(86): ETA = 0.027948 m, counter = 178 / 891 , time = 0.0063875 m, info = 9 A1 2A1  
update(86): ETA = 0.024455 m, counter = 267 / 891 , time = 0.0098755 m, info = 9 A1 2A1  
update(86): ETA = 0.034360 m, counter = 356 / 891 , time = 0.015592 m, info = 9 A1 3A1  
update(86): ETA = 0.031165 m, counter = 445 / 891 , time = 0.021811 m, info = 9 A1 3A1  
update(86): ETA = 0.024854 m, counter = 534 / 891 , time = 0.028007 m, info = 9 A1 3A1  
update(86): ETA = 0.018757 m, counter = 623 / 891 , time = 0.034236 m, info = 9 A1 3A1  
update(86): ETA = 0.012459 m, counter = 712 / 891 , time = 0.040430 m, info = 9 A1 3A1  
update(86): ETA = 0.0076300 m, counter = 801 / 891 , time = 0.047976 m, info = 9 A1 4A1  
update(86): ETA = 0.00011076 m, counter = 890 / 891 , time = 0.057833 m, info = 9 A1 A0  
get_cls(1145): inv      = A1 , rank = 9 
get_cls(1146): bas1_lst = 32 [('2A1', 2), ('2A1+A2', 1), ('2A1+A3', 2), ('2A1+D4', 1), ('2A2', 1), ('2A3', 1), ('3A1', 3), ('4A1', 2), ('5A1', 1), ('6A1', 1), ('A0', 1), ('A1', 1), ('A1+A2', 1), ('A1+A3', 3), ('A1+D4', 1), ('A2', 1), ('A2+A3', 1), ('A3', 2), ('A4', 1), ('A5', 2), ('D4', 1), ('D5', 1), ('D6', 1)] 
get_cls(1147): bas2_lst = 890 [('2A1', 240), ('3A1', 480), ('4A1', 120), ('A0', 1), ('A1', 33), ('A2', 16)] 
get_cls(1148): bas3_lst = 1 [('A0', 1)] 
update(86): ETA = 2.3444e-6 m, counter = 0 / 28480 , time = 2.3444e-7 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', 'A0', 'A0')  
get_cls(1168): 	 appended:  (9, 'A1', 'A0') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A0', 'A0') 
get_cls(1168): 	 appended:  (9, 'A1', '{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A1', 'A0') 
get_cls(1168): 	 appended:  (9, 'A1', '2{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A0', '2A1', 'A0') 
get_cls(1168): 	 appended:  (9, 'A1', '{A2}') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A2', 'A0') 
get_cls(1168): 	 appended:  (9, 'A1', '3{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A0', '3A1', 'A0') 
get_cls(1168): 	 appended:  (9, 'A1', '4{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A0', '4A1', 'A0') 
get_cls(1168): 	 appended:  (9, 'A1', '{A1}+{A2}') , ( bas1.type, bas2.type, bas3.type ) = ('A1', '2A1', 'A0') 
get_cls(1168): 	 appended:  (9, 'A1', '{A3}') , ( bas1.type, bas2.type, bas3.type ) = ('A1', '2A1', 'A0') 
get_cls(1168): 	 appended:  (9, 'A1', '3{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A1', '2A1', 'A0') 
get_cls(1168): 	 appended:  (9, 'A1', '2{A1}+{A2}') , ( bas1.type, bas2.type, bas3.type ) = ('A1', '3A1', 'A0') 
get_cls(1168): 	 appended:  (9, 'A1', '4{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A1', '3A1', 'A0') 
get_cls(1168): 	 appended:  (9, 'A1', '5{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A1', '4A1', 'A0') 
get_cls(1168): 	 appended:  (9, 'A1', '{A1}+{A3}') , ( bas1.type, bas2.type, bas3.type ) = ('2A1', '2A1', 'A0') 
get_cls(1168): 	 appended:  (9, 'A1', '2{A2}') , ( bas1.type, bas2.type, bas3.type ) = ('2A1', '2A1', 'A0') 
get_cls(1168): 	 appended:  (9, 'A1', '2{A1}+{A3}') , ( bas1.type, bas2.type, bas3.type ) = ('2A1', '3A1', 'A0') 
get_cls(1168): 	 appended:  (9, 'A1', '{A1}+2{A2}') , ( bas1.type, bas2.type, bas3.type ) = ('2A1', '3A1', 'A0') 
get_cls(1168): 	 appended:  (9, 'A1', '3{A1}+{A2}') , ( bas1.type, bas2.type, bas3.type ) = ('2A1', '3A1', 'A0') 
get_cls(1168): 	 appended:  (9, 'A1', '6{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('2A1', '4A1', 'A0') 
get_cls(1168): 	 appended:  (9, 'A1', '{A1}+{A3}') , ( bas1.type, bas2.type, bas3.type ) = ('2A1', '2A1', 'A0') 
update(86): ETA = 2444.1 m, counter = 2848 / 28480 , time = 271.57 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('2A1', '2A1', 'A0')  
get_cls(1168): 	 appended:  (9, 'A1', '{A4}') , ( bas1.type, bas2.type, bas3.type ) = ('A2', '2A1', 'A0') 
get_cls(1168): 	 appended:  (9, 'A1', '2{A1}+{A3}') , ( bas1.type, bas2.type, bas3.type ) = ('A2', '3A1', 'A0') 
get_cls(1168): 	 appended:  (9, 'A1', '3{A1}+{A3}') , ( bas1.type, bas2.type, bas3.type ) = ('3A1', '3A1', 'A0') 
get_cls(1168): 	 appended:  (9, 'A1', '7{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('3A1', '4A1', 'A0') 
get_cls(1168): 	 appended:  (9, 'A1', '{D4}') , ( bas1.type, bas2.type, bas3.type ) = ('3A1', 'A1', 'A0') 
update(86): ETA = 154.36 m, counter = 5696 / 28480 , time = 290.86 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('3A1', '3A1', 'A0')  
get_cls(1168): 	 appended:  (9, 'A1', '3{A2}') , ( bas1.type, bas2.type, bas3.type ) = ('3A1', '3A1', 'A0') 
get_cls(1168): 	 appended:  (9, 'A1', '{A2}+{A3}') , ( bas1.type, bas2.type, bas3.type ) = ('3A1', '2A1', 'A0') 
get_cls(1168): 	 appended:  (9, 'A1', '{A1}+{A4}') , ( bas1.type, bas2.type, bas3.type ) = ('A1+A2', '2A1', 'A0') 
get_cls(1168): 	 appended:  (9, 'A1', '{A1}+{A2}+{A3}') , ( bas1.type, bas2.type, bas3.type ) = ('A1+A2', '3A1', 'A0') 
get_cls(1168): 	 appended:  (9, 'A1', '{A1}+{D4}') , ( bas1.type, bas2.type, bas3.type ) = ('A3', '2A1', 'A0') 
get_cls(1168): 	 appended:  (9, 'A1', '{A5}') , ( bas1.type, bas2.type, bas3.type ) = ('A3', '2A1', 'A0') 
get_cls(1168): 	 appended:  (9, 'A1', '2{A1}+{D4}') , ( bas1.type, bas2.type, bas3.type ) = ('A3', '3A1', 'A0') 
update(86): ETA = 62.818 m, counter = 8544 / 28480 , time = 299.84 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A3', '3A1', 'A0')  
get_cls(1168): 	 appended:  (9, 'A1', '{A5}') , ( bas1.type, bas2.type, bas3.type ) = ('A3', '2A1', 'A0') 
get_cls(1168): 	 appended:  (9, 'A1', '{A2}+{A4}') , ( bas1.type, bas2.type, bas3.type ) = ('2A1+A2', '2A1', 'A0') 
get_cls(1168): 	 appended:  (9, 'A1', '{A1}+{A5}') , ( bas1.type, bas2.type, bas3.type ) = ('2A2', '2A1', 'A0') 
get_cls(1168): 	 appended:  (9, 'A1', '2{A3}') , ( bas1.type, bas2.type, bas3.type ) = ('2A2', '2A1', 'A0') 
get_cls(1168): 	 appended:  (9, 'A1', '{A1}+2{A3}') , ( bas1.type, bas2.type, bas3.type ) = ('2A2', '3A1', 'A0') 
update(86): ETA = 21.727 m, counter = 11392 / 28480 , time = 303.46 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('2A2', '3A1', 'A0')  
get_cls(1168): 	 appended:  (9, 'A1', '{A1}+{A5}') , ( bas1.type, bas2.type, bas3.type ) = ('A1+A3', '2A1', 'A0') 
get_cls(1168): 	 appended:  (9, 'A1', '3{A1}+{D4}') , ( bas1.type, bas2.type, bas3.type ) = ('A1+A3', '3A1', 'A0') 
update(86): ETA = 19.419 m, counter = 14240 / 28480 , time = 307.34 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A1+A3', 'A0', 'A0')  
get_cls(1168): 	 appended:  (9, 'A1', '{D5}') , ( bas1.type, bas2.type, bas3.type ) = ('A1+A3', 'A1', 'A0') 
get_cls(1168): 	 appended:  (9, 'A1', '{A1}+{D5}') , ( bas1.type, bas2.type, bas3.type ) = ('A4', '2A1', 'A0') 
get_cls(1168): 	 appended:  (9, 'A1', '{A6}') , ( bas1.type, bas2.type, bas3.type ) = ('A4', '2A1', 'A0') 
update(86): ETA = 10.966 m, counter = 17088 / 28480 , time = 310.08 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('D4', '2A1', 'A0')  
get_cls(1168): 	 appended:  (9, 'A1', '{A2}+{A5}') , ( bas1.type, bas2.type, bas3.type ) = ('2A1+A3', '2A1', 'A0') 
update(86): ETA = 4.9763 m, counter = 19936 / 28480 , time = 311.74 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('5A1', '3A1', 'A0')  
get_cls(1168): 	 appended:  (9, 'A1', '{D6}') , ( bas1.type, bas2.type, bas3.type ) = ('A1+D4', 'A1', 'A0') 
get_cls(1168): 	 appended:  (9, 'A1', '{A1}+{D6}') , ( bas1.type, bas2.type, bas3.type ) = ('A5', '2A1', 'A0') 
update(86): ETA = 2.3970 m, counter = 22784 / 28480 , time = 312.94 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A5', '3A1', 'A0')  
get_cls(1168): 	 appended:  (9, 'A1', '{E6}') , ( bas1.type, bas2.type, bas3.type ) = ('A5', 'A1', 'A0') 
get_cls(1168): 	 appended:  (9, 'A1', '{A7}') , ( bas1.type, bas2.type, bas3.type ) = ('A5', '2A1', 'A0') 
update(86): ETA = 0.82153 m, counter = 25632 / 28480 , time = 313.76 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('2A1+D4', '3A1', 'A0')  
get_cls(1168): 	 appended:  (9, 'A1', '{E7}') , ( bas1.type, bas2.type, bas3.type ) = ('D6', 'A1', 'A0') 
get_cls(1070): looping through inv_lst: (9, '2A1', [e1-e2, e3-e4]) 
get_part_roots(875): r_lst      = 120 [e1-e2, e2-e3, e1-e3, e3-e4, e2-e4, e1-e4, e4-e5, e3-e5, e2-e5, e1-e5, e5-e6, e4-e6, e3-e6, e2-e6, e1-e6, e6-e7, e5-e7, e4-e7, e3-e7, e2-e7, e1-e7, e7-e8, e6-e8, e5-e8, e4-e8, e3-e8, e2-e8, e1-e8, e0-e1-e2-e3, e0-e1-e2-e4, e0-e1-e3-e4, e0-e2-e3-e4, e0-e1-e2-e5, e0-e1-e3-e5, e0-e2-e3-e5, e0-e1-e4-e5, e0-e2-e4-e5, e0-e3-e4-e5, e0-e1-e2-e6, e0-e1-e3-e6, e0-e2-e3-e6, e0-e1-e4-e6, e0-e2-e4-e6, e0-e3-e4-e6, e0-e1-e5-e6, e0-e2-e5-e6, e0-e3-e5-e6, e0-e4-e5-e6, e0-e1-e2-e7, e0-e1-e3-e7, e0-e2-e3-e7, e0-e1-e4-e7, e0-e2-e4-e7, e0-e3-e4-e7, e0-e1-e5-e7, e0-e2-e5-e7, e0-e3-e5-e7, e0-e4-e5-e7, e0-e1-e6-e7, e0-e2-e6-e7, e0-e3-e6-e7, e0-e4-e6-e7, e0-e5-e6-e7, e0-e1-e2-e8, e0-e1-e3-e8, e0-e2-e3-e8, e0-e1-e4-e8, e0-e2-e4-e8, e0-e3-e4-e8, e0-e1-e5-e8, e0-e2-e5-e8, e0-e3-e5-e8, e0-e4-e5-e8, e0-e1-e6-e8, e0-e2-e6-e8, e0-e3-e6-e8, e0-e4-e6-e8, e0-e5-e6-e8, e0-e1-e7-e8, e0-e2-e7-e8, e0-e3-e7-e8, e0-e4-e7-e8, e0-e5-e7-e8, e0-e6-e7-e8, 2e0-e1-e2-e3-e4-e5-e6, 2e0-e1-e2-e3-e4-e5-e7, 2e0-e1-e2-e3-e4-e6-e7, 2e0-e1-e2-e3-e5-e6-e7, 2e0-e1-e2-e4-e5-e6-e7, 2e0-e1-e3-e4-e5-e6-e7, 2e0-e2-e3-e4-e5-e6-e7, 2e0-e1-e2-e3-e4-e5-e8, 2e0-e1-e2-e3-e4-e6-e8, 2e0-e1-e2-e3-e5-e6-e8, 2e0-e1-e2-e4-e5-e6-e8, 2e0-e1-e3-e4-e5-e6-e8, 2e0-e2-e3-e4-e5-e6-e8, 2e0-e1-e2-e3-e4-e7-e8, 2e0-e1-e2-e3-e5-e7-e8, 2e0-e1-e2-e4-e5-e7-e8, 2e0-e1-e3-e4-e5-e7-e8, 2e0-e2-e3-e4-e5-e7-e8, 2e0-e1-e2-e3-e6-e7-e8, 2e0-e1-e2-e4-e6-e7-e8, 2e0-e1-e3-e4-e6-e7-e8, 2e0-e2-e3-e4-e6-e7-e8, 2e0-e1-e2-e5-e6-e7-e8, 2e0-e1-e3-e5-e6-e7-e8, 2e0-e2-e3-e5-e6-e7-e8, 2e0-e1-e4-e5-e6-e7-e8, 2e0-e2-e4-e5-e6-e7-e8, 2e0-e3-e4-e5-e6-e7-e8, 3e0-2e1-e2-e3-e4-e5-e6-e7-e8, 3e0-e1-2e2-e3-e4-e5-e6-e7-e8, 3e0-e1-e2-2e3-e4-e5-e6-e7-e8, 3e0-e1-e2-e3-2e4-e5-e6-e7-e8, 3e0-e1-e2-e3-e4-2e5-e6-e7-e8, 3e0-e1-e2-e3-e4-e5-2e6-e7-e8, 3e0-e1-e2-e3-e4-e5-e6-2e7-e8, 3e0-e1-e2-e3-e4-e5-e6-e7-2e8] 
get_part_roots(876): s_lst      = 30 [e5-e6, e6-e7, e5-e7, e7-e8, e6-e8, e5-e8, e0-e1-e2-e5, e0-e3-e4-e5, e0-e1-e2-e6, e0-e3-e4-e6, e0-e1-e2-e7, e0-e3-e4-e7, e0-e5-e6-e7, e0-e1-e2-e8, e0-e3-e4-e8, e0-e5-e6-e8, e0-e5-e7-e8, e0-e6-e7-e8, 2e0-e1-e2-e3-e4-e5-e6, 2e0-e1-e2-e3-e4-e5-e7, 2e0-e1-e2-e3-e4-e6-e7, 2e0-e1-e2-e3-e4-e5-e8, 2e0-e1-e2-e3-e4-e6-e8, 2e0-e1-e2-e3-e4-e7-e8, 2e0-e1-e2-e5-e6-e7-e8, 2e0-e3-e4-e5-e6-e7-e8, 3e0-e1-e2-e3-e4-2e5-e6-e7-e8, 3e0-e1-e2-e3-e4-e5-2e6-e7-e8, 3e0-e1-e2-e3-e4-e5-e6-2e7-e8, 3e0-e1-e2-e3-e4-e5-e6-e7-2e8] 
get_part_roots(877): tq1_lst    = 88 [e2-e3, e1-e3, e2-e4, e1-e4, e4-e5, e3-e5, e2-e5, e1-e5, e4-e6, e3-e6, e2-e6, e1-e6, e4-e7, e3-e7, e2-e7, e1-e7, e4-e8, e3-e8, e2-e8, e1-e8, e0-e1-e2-e3, e0-e1-e2-e4, e0-e1-e3-e4, e0-e2-e3-e4, e0-e1-e3-e5, e0-e2-e3-e5, e0-e1-e4-e5, e0-e2-e4-e5, e0-e1-e3-e6, e0-e2-e3-e6, e0-e1-e4-e6, e0-e2-e4-e6, e0-e1-e5-e6, e0-e2-e5-e6, e0-e3-e5-e6, e0-e4-e5-e6, e0-e1-e3-e7, e0-e2-e3-e7, e0-e1-e4-e7, e0-e2-e4-e7, e0-e1-e5-e7, e0-e2-e5-e7, e0-e3-e5-e7, e0-e4-e5-e7, e0-e1-e6-e7, e0-e2-e6-e7, e0-e3-e6-e7, e0-e4-e6-e7, e0-e1-e3-e8, e0-e2-e3-e8, e0-e1-e4-e8, e0-e2-e4-e8, e0-e1-e5-e8, e0-e2-e5-e8, e0-e3-e5-e8, e0-e4-e5-e8, e0-e1-e6-e8, e0-e2-e6-e8, e0-e3-e6-e8, e0-e4-e6-e8, e0-e1-e7-e8, e0-e2-e7-e8, e0-e3-e7-e8, e0-e4-e7-e8, 2e0-e1-e2-e3-e5-e6-e7, 2e0-e1-e2-e4-e5-e6-e7, 2e0-e1-e3-e4-e5-e6-e7, 2e0-e2-e3-e4-e5-e6-e7, 2e0-e1-e2-e3-e5-e6-e8, 2e0-e1-e2-e4-e5-e6-e8, 2e0-e1-e3-e4-e5-e6-e8, 2e0-e2-e3-e4-e5-e6-e8, 2e0-e1-e2-e3-e5-e7-e8, 2e0-e1-e2-e4-e5-e7-e8, 2e0-e1-e3-e4-e5-e7-e8, 2e0-e2-e3-e4-e5-e7-e8, 2e0-e1-e2-e3-e6-e7-e8, 2e0-e1-e2-e4-e6-e7-e8, 2e0-e1-e3-e4-e6-e7-e8, 2e0-e2-e3-e4-e6-e7-e8, 2e0-e1-e3-e5-e6-e7-e8, 2e0-e2-e3-e5-e6-e7-e8, 2e0-e1-e4-e5-e6-e7-e8, 2e0-e2-e4-e5-e6-e7-e8, 3e0-2e1-e2-e3-e4-e5-e6-e7-e8, 3e0-e1-2e2-e3-e4-e5-e6-e7-e8, 3e0-e1-e2-2e3-e4-e5-e6-e7-e8, 3e0-e1-e2-e3-2e4-e5-e6-e7-e8] 
get_part_roots(878): tq_lst     = 24 [e2-e3, e1-e3, e2-e4, e1-e4, e0-e1-e3-e5, e0-e2-e3-e5, e0-e1-e4-e5, e0-e2-e4-e5, e0-e1-e3-e6, e0-e2-e3-e6, e0-e1-e4-e6, e0-e2-e4-e6, e0-e1-e3-e7, e0-e2-e3-e7, e0-e1-e4-e7, e0-e2-e4-e7, e0-e1-e3-e8, e0-e2-e3-e8, e0-e1-e4-e8, e0-e2-e4-e8, 2e0-e1-e3-e5-e6-e7-e8, 2e0-e2-e3-e5-e6-e7-e8, 2e0-e1-e4-e5-e6-e7-e8, 2e0-e2-e4-e5-e6-e7-e8] 
get_part_roots(879): q_lst      = 12 [e2-e3, e1-e3, e0-e1-e3-e5, e0-e2-e3-e5, e0-e1-e3-e6, e0-e2-e3-e6, e0-e1-e3-e7, e0-e2-e3-e7, e0-e1-e3-e8, e0-e2-e3-e8, 2e0-e1-e3-e5-e6-e7-e8, 2e0-e2-e3-e5-e6-e7-e8] 
get_part_roots(880):        M --> 12 [e1-e4, e2-e4, e0-e2-e4-e5, e0-e1-e4-e5, e0-e2-e4-e6, e0-e1-e4-e6, e0-e2-e4-e7, e0-e1-e4-e7, e0-e2-e4-e8, e0-e1-e4-e8, 2e0-e2-e4-e5-e6-e7-e8, 2e0-e1-e4-e5-e6-e7-e8] 
get_part_roots(881): inv.Md_lst = 2A1 [e1-e2, e3-e4] , rank = 9 
import_cls(1015): importing:  (9, '2A1', 'A0') [e1-e2, e3-e4] == [e1-e2, e3-e4] 
import_cls(1015): importing:  (9, '2A1', '{A1}') [e1-e2, e3-e4] == [e1-e2, e3-e4] 
import_cls(1015): importing:  (9, '2A1', '{A1}') [e1-e2, e3-e4] == [e1-e2, e3-e4] 
import_cls(1015): importing:  (9, '2A1', '2A1') [e1-e2, e3-e4] == [e1-e2, e3-e4] 
import_cls(1015): importing:  (9, '2A1', '2{A1}') [e1-e2, e3-e4] == [e1-e2, e3-e4] 
import_cls(1015): importing:  (9, '2A1', '2{A1}') [e1-e2, e3-e4] == [e1-e2, e3-e4] 
import_cls(1015): importing:  (9, '2A1', '2{A1}') [e1-e2, e3-e4] == [e1-e2, e3-e4] 
import_cls(1015): importing:  (9, '2A1', '{A2}') [e1-e2, e3-e4] == [e1-e2, e3-e4] 
import_cls(1015): importing:  (9, '2A1', '2A1+{A1}') [e1-e2, e3-e4] == [e1-e2, e3-e4] 
import_cls(1015): importing:  (9, '2A1', '2A1+{A1}') [e1-e2, e3-e4] == [e1-e2, e3-e4] 
import_cls(1015): importing:  (9, '2A1', '3{A1}') [e1-e2, e3-e4] == [e1-e2, e3-e4] 
import_cls(1015): importing:  (9, '2A1', '3{A1}') [e1-e2, e3-e4] == [e1-e2, e3-e4] 
import_cls(1015): importing:  (9, '2A1', '3{A1}') [e1-e2, e3-e4] == [e1-e2, e3-e4] 
import_cls(1015): importing:  (9, '2A1', '{A1}+{A2}') [e1-e2, e3-e4] == [e1-e2, e3-e4] 
import_cls(1015): importing:  (9, '2A1', '[A3]') [e1-e2, e3-e4] == [e1-e2, e3-e4] 
import_cls(1015): importing:  (9, '2A1', '{A3}') [e1-e2, e3-e4] == [e1-e2, e3-e4] 
import_cls(1015): importing:  (9, '2A1', '{A3}') [e1-e2, e3-e4] == [e1-e2, e3-e4] 
import_cls(1015): importing:  (9, '2A1', '2A1+{A2}') [e1-e2, e3-e4] == [e1-e2, e3-e4] 
import_cls(1015): importing:  (9, '2A1', '4A1') [e1-e2, e3-e4] == [e1-e2, e3-e4] 
import_cls(1015): importing:  (9, '2A1', '2{A1}+2A1') [e1-e2, e3-e4] == [e1-e2, e3-e4] 
import_cls(1015): importing:  (9, '2A1', '2A1+2{A1}') [e1-e2, e3-e4] == [e1-e2, e3-e4] 
import_cls(1015): importing:  (9, '2A1', '4{A1}') [e1-e2, e3-e4] == [e1-e2, e3-e4] 
import_cls(1015): importing:  (9, '2A1', '4{A1}') [e1-e2, e3-e4] == [e1-e2, e3-e4] 
import_cls(1015): importing:  (9, '2A1', '{A1}+[A3]') [e1-e2, e3-e4] == [e1-e2, e3-e4] 
import_cls(1015): importing:  (9, '2A1', '{A1}+[A3]') [e1-e2, e3-e4] == [e1-e2, e3-e4] 
import_cls(1015): importing:  (9, '2A1', '{A1}+{A3}') [e1-e2, e3-e4] == [e1-e2, e3-e4] 
import_cls(1015): importing:  (9, '2A1', '{A1}+{A3}') [e1-e2, e3-e4] == [e1-e2, e3-e4] 
import_cls(1015): importing:  (9, '2A1', '[D4]') [e1-e2, e3-e4] == [e1-e2, e3-e4] 
import_cls(1015): importing:  (9, '2A1', '{D4}') [e1-e2, e3-e4] == [e1-e2, e3-e4] 
import_cls(1015): importing:  (9, '2A1', '2A1+[A3]') [e1-e2, e3-e4] == [e1-e2, e3-e4] 
import_cls(1015): importing:  (9, '2A1', '2{A1}+[A3]') [e1-e2, e3-e4] == [e1-e2, e3-e4] 
import_cls(1015): importing:  (9, '2A1', '2A1+{A3}') [e1-e2, e3-e4] == [e1-e2, e3-e4] 
import_cls(1015): importing:  (9, '2A1', '2{A1}+[A3]') [e1-e2, e3-e4] == [e1-e2, e3-e4] 
import_cls(1015): importing:  (9, '2A1', '2A1+{A1}+{A2}') [e1-e2, e3-e4] == [e1-e2, e3-e4] 
import_cls(1015): importing:  (9, '2A1', '4A1+{A1}') [e1-e2, e3-e4] == [e1-e2, e3-e4] 
import_cls(1015): importing:  (9, '2A1', '4A1+{A1}') [e1-e2, e3-e4] == [e1-e2, e3-e4] 
import_cls(1015): importing:  (9, '2A1', '3{A1}+2A1') [e1-e2, e3-e4] == [e1-e2, e3-e4] 
import_cls(1015): importing:  (9, '2A1', '5{A1}') [e1-e2, e3-e4] == [e1-e2, e3-e4] 
import_cls(1015): importing:  (9, '2A1', '{A1}+[D4]') [e1-e2, e3-e4] == [e1-e2, e3-e4] 
import_cls(1015): importing:  (9, '2A1', '{A1}+{D4}') [e1-e2, e3-e4] == [e1-e2, e3-e4] 
import_cls(1015): importing:  (9, '2A1', '[D5]') [e1-e2, e3-e4] == [e1-e2, e3-e4] 
import_cls(1015): importing:  (9, '2A1', '2A1+[D4]') [e1-e2, e3-e4] == [e1-e2, e3-e4] 
import_cls(1015): importing:  (9, '2A1', '2[A3]') [e1-e2, e3-e4] == [e1-e2, e3-e4] 
import_cls(1015): importing:  (9, '2A1', '2A1+{A1}+[A3]') [e1-e2, e3-e4] == [e1-e2, e3-e4] 
import_cls(1015): importing:  (9, '2A1', '3{A1}+[A3]') [e1-e2, e3-e4] == [e1-e2, e3-e4] 
import_cls(1015): importing:  (9, '2A1', '2A1+{A1}+{A3}') [e1-e2, e3-e4] == [e1-e2, e3-e4] 
import_cls(1015): importing:  (9, '2A1', '2{A1}+4A1') [e1-e2, e3-e4] == [e1-e2, e3-e4] 
import_cls(1015): importing:  (9, '2A1', '4A1+2{A1}') [e1-e2, e3-e4] == [e1-e2, e3-e4] 
import_cls(1015): importing:  (9, '2A1', '{A1}+[D5]') [e1-e2, e3-e4] == [e1-e2, e3-e4] 
import_cls(1015): importing:  (9, '2A1', '2A1+{A1}+[D4]') [e1-e2, e3-e4] == [e1-e2, e3-e4] 
import_cls(1015): importing:  (9, '2A1', '3{A1}+4A1') [e1-e2, e3-e4] == [e1-e2, e3-e4] 
import_cls(1015): importing:  (9, '2A1', '{A1}+2[A3]') [e1-e2, e3-e4] == [e1-e2, e3-e4] 
get_cls(1086): looping through inv_lst continued after recursive call: (9, '2A1', [e1-e2, e3-e4]) 
get_cls(1094): bas1_lst = 52 [('2A1', 'A0'), ('2A1', 'A1'), ('2A1', 'A1'), ('2A1', '2A1'), ('2A1', '2A1'), ('2A1', '2A1'), ('2A1', '2A1'), ('2A1', 'A2'), ('2A1', '3A1'), ('2A1', '3A1'), ('2A1', '3A1'), ('2A1', '3A1'), ('2A1', '3A1'), ('2A1', 'A1+A2'), ('2A1', 'A3'), ('2A1', 'A3'), ('2A1', 'A3'), ('2A1', '2A1+A2'), ('2A1', '4A1'), ('2A1', '4A1'), ('2A1', '4A1'), ('2A1', '4A1'), ('2A1', '4A1'), ('2A1', 'A1+A3'), ('2A1', 'A1+A3'), ('2A1', 'A1+A3'), ('2A1', 'A1+A3'), ('2A1', 'D4'), ('2A1', 'D4'), ('2A1', '2A1+A3'), ('2A1', '2A1+A3'), ('2A1', '2A1+A3'), ('2A1', '2A1+A3'), ('2A1', '3A1+A2'), ('2A1', '5A1'), ('2A1', '5A1'), ('2A1', '5A1'), ('2A1', '5A1'), ('2A1', 'A1+D4'), ('2A1', 'A1+D4'), ('2A1', 'D5'), ('2A1', '2A1+D4'), ('2A1', '2A3'), ('2A1', '3A1+A3'), ('2A1', '3A1+A3'), ('2A1', '3A1+A3'), ('2A1', '6A1'), ('2A1', '6A1'), ('2A1', 'A1+D5'), ('2A1', '3A1+D4'), ('2A1', '7A1'), ('2A1', 'A1+2A3')] 
get_cls(1095): s_lst    = 17 [e7-e8, e6-e8, e5-e8, e0-e1-e2-e8, e0-e3-e4-e8, e0-e5-e6-e8, e0-e5-e7-e8, e0-e6-e7-e8, 2e0-e1-e2-e3-e4-e5-e8, 2e0-e1-e2-e3-e4-e6-e8, 2e0-e1-e2-e3-e4-e7-e8, 2e0-e1-e2-e5-e6-e7-e8, 2e0-e3-e4-e5-e6-e7-e8, 3e0-e1-e2-e3-e4-2e5-e6-e7-e8, 3e0-e1-e2-e3-e4-e5-2e6-e7-e8, 3e0-e1-e2-e3-e4-e5-e6-2e7-e8, 3e0-e1-e2-e3-e4-e5-e6-e7-2e8] 
get_cls(1096): q_lst    = 4 [e0-e1-e3-e8, e0-e2-e3-e8, 2e0-e1-e3-e5-e6-e7-e8, 2e0-e2-e3-e5-e6-e7-e8] 
update(86): ETA = 0.00050944 m, counter = 0 / 77 , time = 6.6161e-6 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '2A1', 'A0')  
update(86): ETA = 0.083412 m, counter = 1 / 77 , time = 0.0011041 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '2A1', '{A1}')  
update(86): ETA = 0.16587 m, counter = 2 / 77 , time = 0.0033158 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '2A1', '2{A1}')  
update(86): ETA = 3.0331 m, counter = 3 / 77 , time = 0.044303 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '2A1', '{A2}')  
update(86): ETA = 0.28692 m, counter = 4 / 77 , time = 0.048234 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '2A1', '3{A1}')  
update(86): ETA = 11.095 m, counter = 5 / 77 , time = 0.20233 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '2A1', '{A1}+{A2}')  
update(86): ETA = 0.47589 m, counter = 6 / 77 , time = 0.20903 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '2A1', '{A3}')  
update(86): ETA = 0.47048 m, counter = 7 / 77 , time = 0.21575 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '2A1', '2{A1}+{A2}')  
update(86): ETA = 0.46295 m, counter = 8 / 77 , time = 0.22246 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '2A1', '2{A2}')  
update(86): ETA = 0.45280 m, counter = 9 / 77 , time = 0.22912 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '2A1', '4{A1}')  
update(86): ETA = 11.029 m, counter = 10 / 77 , time = 0.39374 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '2A1', '4{A1}')  
update(86): ETA = 0.019159 m, counter = 11 / 77 , time = 0.39403 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '2A1', '{A1}+{A3}')  
update(86): ETA = 0.44060 m, counter = 12 / 77 , time = 0.40080 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '2A1', '{A4}')  
update(86): ETA = 0.43347 m, counter = 13 / 77 , time = 0.40758 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '2A1', '{D4}')  
update(86): ETA = 0.42771 m, counter = 14 / 77 , time = 0.41437 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '2A1', '2{A1}+{A3}')  
update(86): ETA = 0.41425 m, counter = 15 / 77 , time = 0.42105 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '2A1', '2{A1}+{A3}')  
update(86): ETA = 0.019884 m, counter = 16 / 77 , time = 0.42137 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '2A1', '3{A1}+{A2}')  
update(86): ETA = 0.018066 m, counter = 17 / 77 , time = 0.42167 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '2A1', '5{A1}')  
update(86): ETA = 14.376 m, counter = 18 / 77 , time = 0.66533 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '2A1', '{A1}+2{A2}')  
update(86): ETA = 0.025812 m, counter = 19 / 77 , time = 0.66577 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '2A1', '{A1}+{A4}')  
update(86): ETA = 0.024836 m, counter = 20 / 77 , time = 0.66621 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '2A1', '{A1}+{D4}')  
update(86): ETA = 0.37604 m, counter = 21 / 77 , time = 0.67292 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '2A1', '{A2}+{A3}')  
update(86): ETA = 0.37479 m, counter = 22 / 77 , time = 0.67974 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '2A1', '{A5}')  
update(86): ETA = 0.36934 m, counter = 23 / 77 , time = 0.68658 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '2A1', '{D5}')  
update(86): ETA = 0.35963 m, counter = 24 / 77 , time = 0.69336 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '2A1', '2{A1}+2{A2}')  
update(86): ETA = 0.027324 m, counter = 25 / 77 , time = 0.69389 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '2A1', '2{A1}+{A4}')  
update(86): ETA = 0.026971 m, counter = 26 / 77 , time = 0.69442 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '2A1', '2{A1}+{D4}')  
update(86): ETA = 6.0089 m, counter = 27 / 77 , time = 0.81460 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '2A1', '2{A3}')  
update(86): ETA = 0.33774 m, counter = 28 / 77 , time = 0.82149 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '2A1', '2{A3}')  
update(86): ETA = 0.022163 m, counter = 29 / 77 , time = 0.82195 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '2A1', '3{A1}+{A3}')  
update(86): ETA = 0.022989 m, counter = 30 / 77 , time = 0.82244 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '2A1', '3{A2}')  
update(86): ETA = 0.019541 m, counter = 31 / 77 , time = 0.82287 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '2A1', '4{A1}+{A2}')  
update(86): ETA = 0.017690 m, counter = 32 / 77 , time = 0.82326 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '2A1', '6{A1}')  
update(86): ETA = 10.782 m, counter = 33 / 77 , time = 1.0683 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '2A1', '{A1}+{A2}+{A3}')  
update(86): ETA = 0.025541 m, counter = 34 / 77 , time = 1.0689 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '2A1', '{A1}+{A5}')  
update(86): ETA = 0.024950 m, counter = 35 / 77 , time = 1.0695 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '2A1', '{A1}+{A5}')  
update(86): ETA = 0.024616 m, counter = 36 / 77 , time = 1.0701 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '2A1', '{A1}+{D5}')  
update(86): ETA = 0.022332 m, counter = 37 / 77 , time = 1.0706 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '2A1', '{A2}+{A4}')  
update(86): ETA = 0.021867 m, counter = 38 / 77 , time = 1.0712 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '2A1', '{A2}+{D4}')  
update(86): ETA = 0.025542 m, counter = 39 / 77 , time = 1.0719 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '2A1', '{A6}')  
update(86): ETA = 0.025025 m, counter = 40 / 77 , time = 1.0726 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '2A1', '{D6}')  
update(86): ETA = 0.25337 m, counter = 41 / 77 , time = 1.0796 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '2A1', '{E6}')  
update(86): ETA = 0.021394 m, counter = 42 / 77 , time = 1.0802 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '2A1', '2{A1}+{A2}+{A3}')  
update(86): ETA = 0.023757 m, counter = 43 / 77 , time = 1.0809 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '2A1', '2{A1}+{A5}')  
update(86): ETA = 0.023132 m, counter = 44 / 77 , time = 1.0816 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '2A1', '2{A1}+{D5}')  
update(86): ETA = 0.020179 m, counter = 45 / 77 , time = 1.0822 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '2A1', '3{A1}+{D4}')  
update(86): ETA = 0.018039 m, counter = 46 / 77 , time = 1.0828 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '2A1', '4{A1}+{A3}')  
update(86): ETA = 0.014861 m, counter = 47 / 77 , time = 1.0833 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '2A1', '7{A1}')  
update(86): ETA = 0.018792 m, counter = 48 / 77 , time = 1.0840 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '2A1', '{A1}+2{A3}')  
update(86): ETA = 0.016630 m, counter = 49 / 77 , time = 1.0846 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '2A1', '{A1}+3{A2}')  
update(86): ETA = 0.017823 m, counter = 50 / 77 , time = 1.0852 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '2A1', '{A1}+{A2}+{A4}')  
update(86): ETA = 0.020214 m, counter = 51 / 77 , time = 1.0860 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '2A1', '{A1}+{A6}')  
update(86): ETA = 0.019775 m, counter = 52 / 77 , time = 1.0868 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '2A1', '{A1}+{D6}')  
update(86): ETA = 0.018827 m, counter = 53 / 77 , time = 1.0876 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '2A1', '{A1}+{E6}')  
update(86): ETA = 0.016716 m, counter = 54 / 77 , time = 1.0883 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '2A1', '{A2}+{A5}')  
update(86): ETA = 0.016061 m, counter = 55 / 77 , time = 1.0890 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '2A1', '{A2}+{D5}')  
update(86): ETA = 0.014777 m, counter = 56 / 77 , time = 1.0897 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '2A1', '{A3}+{A4}')  
update(86): ETA = 0.014110 m, counter = 57 / 77 , time = 1.0904 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '2A1', '{A3}+{D4}')  
update(86): ETA = 0.016667 m, counter = 58 / 77 , time = 1.0913 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '2A1', '{A7}')  
update(86): ETA = 0.015646 m, counter = 59 / 77 , time = 1.0922 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '2A1', '{A7}')  
update(86): ETA = 0.014736 m, counter = 60 / 77 , time = 1.0930 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '2A1', '{D7}')  
update(86): ETA = 0.013981 m, counter = 61 / 77 , time = 1.0939 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '2A1', '{E7}')  
update(86): ETA = 0.011448 m, counter = 62 / 77 , time = 1.0947 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '2A1', '2{A1}+2{A3}')  
update(86): ETA = 0.012644 m, counter = 63 / 77 , time = 1.0956 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '2A1', '2{A1}+{D6}')  
update(86): ETA = 0.011377 m, counter = 64 / 77 , time = 1.0965 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '2A1', '2{A4}')  
update(86): ETA = 0.010573 m, counter = 65 / 77 , time = 1.0973 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '2A1', '2{D4}')  
update(86): ETA = 0.0082062 m, counter = 66 / 77 , time = 1.0981 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '2A1', '4{A1}+{D4}')  
update(86): ETA = 0.0073923 m, counter = 67 / 77 , time = 1.0988 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '2A1', '4{A2}')  
update(86): ETA = 0.0055929 m, counter = 68 / 77 , time = 1.0994 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '2A1', '8{A1}')  
update(86): ETA = 0.0067517 m, counter = 69 / 77 , time = 1.1003 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '2A1', '{A1}+{A2}+{A5}')  
update(86): ETA = 0.0069151 m, counter = 70 / 77 , time = 1.1013 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '2A1', '{A1}+{A7}')  
update(86): ETA = 0.0059433 m, counter = 71 / 77 , time = 1.1023 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '2A1', '{A1}+{E7}')  
update(86): ETA = 0.0047175 m, counter = 72 / 77 , time = 1.1032 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '2A1', '{A2}+{E6}')  
update(86): ETA = 0.0035728 m, counter = 73 / 77 , time = 1.1041 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '2A1', '{A3}+{D5}')  
update(86): ETA = 0.0032764 m, counter = 74 / 77 , time = 1.1052 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '2A1', '{A8}')  
update(86): ETA = 0.0021903 m, counter = 75 / 77 , time = 1.1063 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '2A1', '{D8}')  
update(86): ETA = 0.0011047 m, counter = 76 / 77 , time = 1.1074 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '2A1', '{E8}')  
get_cls(1130): Setting Dynkin types of 149 items...please wait... 
update(86): ETA = 0.00030881 m, counter = 0 / 149 , time = 0.000029016 m, info = 9 2A1 A0  
update(86): ETA = 0.0053934 m, counter = 14 / 149 , time = 0.00058833 m, info = 9 2A1 A1  
update(86): ETA = 0.0065611 m, counter = 28 / 149 , time = 0.0013475 m, info = 9 2A1 2A1  
update(86): ETA = 0.0062236 m, counter = 42 / 149 , time = 0.0021618 m, info = 9 2A1 2A1  
update(86): ETA = 0.0054091 m, counter = 56 / 149 , time = 0.0029760 m, info = 9 2A1 2A1  
update(86): ETA = 0.0045895 m, counter = 70 / 149 , time = 0.0037894 m, info = 9 2A1 2A1  
update(86): ETA = 0.0046989 m, counter = 84 / 149 , time = 0.0048014 m, info = 9 2A1 3A1  
update(86): ETA = 0.0045186 m, counter = 98 / 149 , time = 0.0060418 m, info = 9 2A1 3A1  
update(86): ETA = 0.0032657 m, counter = 112 / 149 , time = 0.0072775 m, info = 9 2A1 3A1  
update(86): ETA = 0.0020435 m, counter = 126 / 149 , time = 0.0085214 m, info = 9 2A1 3A1  
update(86): ETA = 0.0010956 m, counter = 140 / 149 , time = 0.010226 m, info = 9 2A1 4A1  
get_cls(1145): inv      = 2A1 , rank = 9 
get_cls(1146): bas1_lst = 52 [('2A1', 4), ('2A1+A2', 1), ('2A1+A3', 4), ('2A1+D4', 1), ('2A3', 1), ('3A1', 5), ('3A1+A2', 1), ('3A1+A3', 3), ('3A1+D4', 1), ('4A1', 5), ('5A1', 4), ('6A1', 2), ('7A1', 1), ('A0', 1), ('A1', 2), ('A1+2A3', 1), ('A1+A2', 1), ('A1+A3', 4), ('A1+D4', 2), ('A1+D5', 1), ('A2', 1), ('A3', 3), ('D4', 2), ('D5', 1)] 
get_cls(1147): bas2_lst = 142 [('2A1', 56), ('3A1', 48), ('4A1', 12), ('A0', 1), ('A1', 17), ('A2', 8)] 
get_cls(1148): bas3_lst = 7 [('2A1', 4), ('4A1', 2), ('A0', 1)] 
update(86): ETA = 3.4973e-6 m, counter = 0 / 51688 , time = 3.4968e-7 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', 'A0', 'A0')  
get_cls(1168): 	 appended:  (9, '2A1', 'A0') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A0', 'A0') 
get_cls(1168): 	 appended:  (9, '2A1', '2A1') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A0', '2A1') 
get_cls(1168): 	 appended:  (9, '2A1', '4A1') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A0', '4A1') 
get_cls(1168): 	 appended:  (9, '2A1', '{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A1', 'A0') 
get_cls(1168): 	 appended:  (9, '2A1', '2A1+{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A1', '2A1') 
get_cls(1168): 	 appended:  (9, '2A1', '2{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A0', '2A1', 'A0') 
get_cls(1168): 	 appended:  (9, '2A1', '2A1+2{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A0', '2A1', '2A1') 
get_cls(1168): 	 appended:  (9, '2A1', '2{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A0', '2A1', 'A0') 
get_cls(1168): 	 appended:  (9, '2A1', '{A2}') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A2', 'A0') 
get_cls(1168): 	 appended:  (9, '2A1', '3{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A0', '3A1', 'A0') 
get_cls(1168): 	 appended:  (9, '2A1', '4{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A0', '4A1', 'A0') 
get_cls(1168): 	 appended:  (9, '2A1', '4A1+{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A1', 'A0', '4A1') 
get_cls(1168): 	 appended:  (9, '2A1', '2A1+{A2}') , ( bas1.type, bas2.type, bas3.type ) = ('A1', 'A1', '2A1') 
get_cls(1168): 	 appended:  (9, '2A1', '2A1+2{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A1', 'A1', '2A1') 
get_cls(1168): 	 appended:  (9, '2A1', '2A1+3{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A1', '2A1', '2A1') 
get_cls(1168): 	 appended:  (9, '2A1', '{A1}+{A2}') , ( bas1.type, bas2.type, bas3.type ) = ('A1', '2A1', 'A0') 
get_cls(1168): 	 appended:  (9, '2A1', '{A3}') , ( bas1.type, bas2.type, bas3.type ) = ('A1', '2A1', 'A0') 
get_cls(1168): 	 appended:  (9, '2A1', '3{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A1', '2A1', 'A0') 
get_cls(1168): 	 appended:  (9, '2A1', '2{A1}+{A2}') , ( bas1.type, bas2.type, bas3.type ) = ('A1', '3A1', 'A0') 
get_cls(1168): 	 appended:  (9, '2A1', '4{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A1', '3A1', 'A0') 
get_cls(1168): 	 appended:  (9, '2A1', '5{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A1', '4A1', 'A0') 
get_cls(1168): 	 appended:  (9, '2A1', '[A3]') , ( bas1.type, bas2.type, bas3.type ) = ('A1', 'A0', '2A1') 
get_cls(1168): 	 appended:  (9, '2A1', '{A3}') , ( bas1.type, bas2.type, bas3.type ) = ('A1', '2A1', 'A0') 
get_cls(1168): 	 appended:  (9, '2A1', '2A1+[A3]') , ( bas1.type, bas2.type, bas3.type ) = ('2A1', 'A1', '2A1') 
get_cls(1168): 	 appended:  (9, '2A1', '4A1+2{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('2A1', '2A1', '2A1') 
get_cls(1168): 	 appended:  (9, '2A1', '{A1}+[A3]') , ( bas1.type, bas2.type, bas3.type ) = ('2A1', '2A1', 'A0') 
get_cls(1168): 	 appended:  (9, '2A1', '2{A1}+[A3]') , ( bas1.type, bas2.type, bas3.type ) = ('2A1', '3A1', 'A0') 
get_cls(1168): 	 appended:  (9, '2A1', '4{A1}+2A1') , ( bas1.type, bas2.type, bas3.type ) = ('2A1', '4A1', 'A0') 
get_cls(1168): 	 appended:  (9, '2A1', '2A1+{A3}') , ( bas1.type, bas2.type, bas3.type ) = ('2A1', 'A1', '2A1') 
get_cls(1168): 	 appended:  (9, '2A1', '{A1}+{A3}') , ( bas1.type, bas2.type, bas3.type ) = ('2A1', '2A1', 'A0') 
get_cls(1168): 	 appended:  (9, '2A1', '2{A1}+{A3}') , ( bas1.type, bas2.type, bas3.type ) = ('2A1', '3A1', 'A0') 
get_cls(1168): 	 appended:  (9, '2A1', '6{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('2A1', '4A1', 'A0') 
get_cls(1168): 	 appended:  (9, '2A1', '4A1+2{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('2A1', 'A0', '4A1') 
get_cls(1168): 	 appended:  (9, '2A1', '2A1+{A1}+{A2}') , ( bas1.type, bas2.type, bas3.type ) = ('2A1', 'A1', '2A1') 
get_cls(1168): 	 appended:  (9, '2A1', '2{A2}') , ( bas1.type, bas2.type, bas3.type ) = ('2A1', '2A1', 'A0') 
update(86): ETA = 868.53 m, counter = 5168 / 51688 , time = 96.486 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('2A1', '2A1', '2A1')  
get_cls(1168): 	 appended:  (9, '2A1', '{A1}+{A3}') , ( bas1.type, bas2.type, bas3.type ) = ('2A1', '2A1', 'A0') 
get_cls(1168): 	 appended:  (9, '2A1', '4A1+{A2}') , ( bas1.type, bas2.type, bas3.type ) = ('A2', 'A0', '4A1') 
get_cls(1168): 	 appended:  (9, '2A1', '2A1+{A3}') , ( bas1.type, bas2.type, bas3.type ) = ('A2', 'A1', '2A1') 
get_cls(1168): 	 appended:  (9, '2A1', '2A1+2{A1}+{A2}') , ( bas1.type, bas2.type, bas3.type ) = ('A2', '2A1', '2A1') 
get_cls(1168): 	 appended:  (9, '2A1', '{A4}') , ( bas1.type, bas2.type, bas3.type ) = ('A2', '2A1', 'A0') 
get_cls(1168): 	 appended:  (9, '2A1', '2{A1}+{A3}') , ( bas1.type, bas2.type, bas3.type ) = ('A2', '3A1', 'A0') 
get_cls(1168): 	 appended:  (9, '2A1', '2A1+{A1}+[A3]') , ( bas1.type, bas2.type, bas3.type ) = ('3A1', 'A1', '2A1') 
get_cls(1168): 	 appended:  (9, '2A1', '4A1+3{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('3A1', '2A1', '2A1') 
get_cls(1168): 	 appended:  (9, '2A1', '{A2}+[A3]') , ( bas1.type, bas2.type, bas3.type ) = ('3A1', '2A1', 'A0') 
get_cls(1168): 	 appended:  (9, '2A1', '2{A1}+[A3]') , ( bas1.type, bas2.type, bas3.type ) = ('3A1', '2A1', 'A0') 
get_cls(1168): 	 appended:  (9, '2A1', '3{A1}+[A3]') , ( bas1.type, bas2.type, bas3.type ) = ('3A1', '3A1', 'A0') 
get_cls(1168): 	 appended:  (9, '2A1', '[D4]') , ( bas1.type, bas2.type, bas3.type ) = ('3A1', 'A1', 'A0') 
get_cls(1168): 	 appended:  (9, '2A1', '2A1+{A1}+{A3}') , ( bas1.type, bas2.type, bas3.type ) = ('3A1', 'A1', '2A1') 
get_cls(1168): 	 appended:  (9, '2A1', '{A2}+{A3}') , ( bas1.type, bas2.type, bas3.type ) = ('3A1', '2A1', 'A0') 
update(86): ETA = 124.47 m, counter = 10336 / 51688 , time = 112.04 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('3A1', '2A1', '2A1')  
get_cls(1168): 	 appended:  (9, '2A1', '{D4}') , ( bas1.type, bas2.type, bas3.type ) = ('3A1', 'A1', 'A0') 
get_cls(1168): 	 appended:  (9, '2A1', '2A1+[D4]') , ( bas1.type, bas2.type, bas3.type ) = ('A3', 'A1', '2A1') 
get_cls(1168): 	 appended:  (9, '2A1', '2A1+2{A1}+[A3]') , ( bas1.type, bas2.type, bas3.type ) = ('A3', '2A1', '2A1') 
get_cls(1168): 	 appended:  (9, '2A1', '{A1}+[D4]') , ( bas1.type, bas2.type, bas3.type ) = ('A3', '2A1', 'A0') 
get_cls(1168): 	 appended:  (9, '2A1', '2{A1}+[D4]') , ( bas1.type, bas2.type, bas3.type ) = ('A3', '3A1', 'A0') 
get_cls(1168): 	 appended:  (9, '2A1', '4{A1}+[A3]') , ( bas1.type, bas2.type, bas3.type ) = ('A3', '4A1', 'A0') 
get_cls(1168): 	 appended:  (9, '2A1', '4A1+{A3}') , ( bas1.type, bas2.type, bas3.type ) = ('A3', 'A0', '4A1') 
get_cls(1168): 	 appended:  (9, '2A1', '2A1+{D4}') , ( bas1.type, bas2.type, bas3.type ) = ('A3', 'A1', '2A1') 
get_cls(1168): 	 appended:  (9, '2A1', '2A1+2{A1}+{A3}') , ( bas1.type, bas2.type, bas3.type ) = ('A3', '2A1', '2A1') 
get_cls(1168): 	 appended:  (9, '2A1', '{A1}+{D4}') , ( bas1.type, bas2.type, bas3.type ) = ('A3', '2A1', 'A0') 
update(86): ETA = 66.040 m, counter = 15504 / 51688 , time = 121.47 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A3', '3A1', '4A1')  
get_cls(1168): 	 appended:  (9, '2A1', '2{A1}+{D4}') , ( bas1.type, bas2.type, bas3.type ) = ('A3', '3A1', 'A0') 
get_cls(1168): 	 appended:  (9, '2A1', '4A1+{A3}') , ( bas1.type, bas2.type, bas3.type ) = ('A3', 'A0', '4A1') 
get_cls(1168): 	 appended:  (9, '2A1', '2A1+{A4}') , ( bas1.type, bas2.type, bas3.type ) = ('A3', 'A1', '2A1') 
get_cls(1168): 	 appended:  (9, '2A1', '{A5}') , ( bas1.type, bas2.type, bas3.type ) = ('A3', '2A1', 'A0') 
get_cls(1168): 	 appended:  (9, '2A1', '2A1+{A2}+[A3]') , ( bas1.type, bas2.type, bas3.type ) = ('2A1+A2', 'A1', '2A1') 
get_cls(1168): 	 appended:  (9, '2A1', '[A3]+{A3}') , ( bas1.type, bas2.type, bas3.type ) = ('2A1+A2', '2A1', 'A0') 
get_cls(1168): 	 appended:  (9, '2A1', '2[A3]') , ( bas1.type, bas2.type, bas3.type ) = ('4A1', '2A1', 'A0') 
get_cls(1168): 	 appended:  (9, '2A1', '4{A1}+4A1') , ( bas1.type, bas2.type, bas3.type ) = ('4A1', '4A1', 'A0') 
get_cls(1168): 	 appended:  (9, '2A1', '{A3}+[A3]') , ( bas1.type, bas2.type, bas3.type ) = ('4A1', '2A1', 'A0') 
update(86): ETA = 64.074 m, counter = 20672 / 51688 , time = 132.15 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('4A1', '3A1', '2A1')  
get_cls(1168): 	 appended:  (9, '2A1', '2{A3}') , ( bas1.type, bas2.type, bas3.type ) = ('4A1', '2A1', 'A0') 
get_cls(1168): 	 appended:  (9, '2A1', '2A1+{A1}+[D4]') , ( bas1.type, bas2.type, bas3.type ) = ('A1+A3', 'A1', '2A1') 
get_cls(1168): 	 appended:  (9, '2A1', '{A2}+[D4]') , ( bas1.type, bas2.type, bas3.type ) = ('A1+A3', '2A1', 'A0') 
get_cls(1168): 	 appended:  (9, '2A1', '[D5]') , ( bas1.type, bas2.type, bas3.type ) = ('A1+A3', 'A1', 'A0') 
get_cls(1168): 	 appended:  (9, '2A1', '{D5}') , ( bas1.type, bas2.type, bas3.type ) = ('A1+A3', 'A1', 'A0') 
update(86): ETA = 22.366 m, counter = 25840 / 51688 , time = 136.62 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A1+A3', '4A1', '2A1')  
get_cls(1168): 	 appended:  (9, '2A1', '2A1+[D5]') , ( bas1.type, bas2.type, bas3.type ) = ('D4', 'A1', '2A1') 
get_cls(1168): 	 appended:  (9, '2A1', '2A1+2{A1}+[D4]') , ( bas1.type, bas2.type, bas3.type ) = ('D4', '2A1', '2A1') 
get_cls(1168): 	 appended:  (9, '2A1', '{A1}+[D5]') , ( bas1.type, bas2.type, bas3.type ) = ('D4', '2A1', 'A0') 
get_cls(1168): 	 appended:  (9, '2A1', '2{A1}+[D5]') , ( bas1.type, bas2.type, bas3.type ) = ('D4', '3A1', 'A0') 
get_cls(1168): 	 appended:  (9, '2A1', '4A1+{D4}') , ( bas1.type, bas2.type, bas3.type ) = ('D4', 'A0', '4A1') 
get_cls(1168): 	 appended:  (9, '2A1', '2A1+{D5}') , ( bas1.type, bas2.type, bas3.type ) = ('D4', 'A1', '2A1') 
get_cls(1168): 	 appended:  (9, '2A1', '[A3]+[D4]') , ( bas1.type, bas2.type, bas3.type ) = ('2A1+A3', '2A1', 'A0') 
get_cls(1168): 	 appended:  (9, '2A1', '{A1}+2[A3]') , ( bas1.type, bas2.type, bas3.type ) = ('2A1+A3', '2A1', 'A0') 
get_cls(1168): 	 appended:  (9, '2A1', '2{A1}+2[A3]') , ( bas1.type, bas2.type, bas3.type ) = ('2A1+A3', '3A1', 'A0') 
get_cls(1168): 	 appended:  (9, '2A1', '2A1+{A3}+[A3]') , ( bas1.type, bas2.type, bas3.type ) = ('2A1+A3', 'A1', '2A1') 
get_cls(1168): 	 appended:  (9, '2A1', '{A3}+[D4]') , ( bas1.type, bas2.type, bas3.type ) = ('2A1+A3', '2A1', 'A0') 
update(86): ETA = 20.808 m, counter = 31008 / 51688 , time = 141.82 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('2A1+A3', '2A1', '4A1')  
get_cls(1168): 	 appended:  (9, '2A1', '[A3]+{D4}') , ( bas1.type, bas2.type, bas3.type ) = ('2A1+A3', '2A1', 'A0') 
update(86): ETA = 10.933 m, counter = 36176 / 51688 , time = 145.47 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('5A1', '2A1', 'A0')  
get_cls(1168): 	 appended:  (9, '2A1', '[D6]') , ( bas1.type, bas2.type, bas3.type ) = ('A1+D4', 'A1', 'A0') 
get_cls(1168): 	 appended:  (9, '2A1', '{D6}') , ( bas1.type, bas2.type, bas3.type ) = ('A1+D4', 'A1', 'A0') 
get_cls(1168): 	 appended:  (9, '2A1', '2A1+[D6]') , ( bas1.type, bas2.type, bas3.type ) = ('D5', 'A1', '2A1') 
get_cls(1168): 	 appended:  (9, '2A1', '[A3]+[D5]') , ( bas1.type, bas2.type, bas3.type ) = ('2A1+D4', '2A1', 'A0') 
update(86): ETA = 3.6743 m, counter = 41344 / 51688 , time = 147.30 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('2A1+D4', '3A1', '2A1')  
get_cls(1168): 	 appended:  (9, '2A1', '2[D4]') , ( bas1.type, bas2.type, bas3.type ) = ('2A3', '2A1', 'A0') 
update(86): ETA = 2.1299 m, counter = 46512 / 51688 , time = 149.43 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('6A1', '3A1', '2A1')  
get_cls(1168): 	 appended:  (9, '2A1', '[D7]') , ( bas1.type, bas2.type, bas3.type ) = ('A1+D5', 'A1', 'A0') 
update(86): ETA = 0.0019298 m, counter = 51680 / 51688 , time = 150.67 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A1+2A3', '4A1', '4A1')  
get_cls(1070): looping through inv_lst: (9, '3A1', [e1-e2, e3-e4, e5-e6]) 
get_part_roots(875): r_lst      = 120 [e1-e2, e2-e3, e1-e3, e3-e4, e2-e4, e1-e4, e4-e5, e3-e5, e2-e5, e1-e5, e5-e6, e4-e6, e3-e6, e2-e6, e1-e6, e6-e7, e5-e7, e4-e7, e3-e7, e2-e7, e1-e7, e7-e8, e6-e8, e5-e8, e4-e8, e3-e8, e2-e8, e1-e8, e0-e1-e2-e3, e0-e1-e2-e4, e0-e1-e3-e4, e0-e2-e3-e4, e0-e1-e2-e5, e0-e1-e3-e5, e0-e2-e3-e5, e0-e1-e4-e5, e0-e2-e4-e5, e0-e3-e4-e5, e0-e1-e2-e6, e0-e1-e3-e6, e0-e2-e3-e6, e0-e1-e4-e6, e0-e2-e4-e6, e0-e3-e4-e6, e0-e1-e5-e6, e0-e2-e5-e6, e0-e3-e5-e6, e0-e4-e5-e6, e0-e1-e2-e7, e0-e1-e3-e7, e0-e2-e3-e7, e0-e1-e4-e7, e0-e2-e4-e7, e0-e3-e4-e7, e0-e1-e5-e7, e0-e2-e5-e7, e0-e3-e5-e7, e0-e4-e5-e7, e0-e1-e6-e7, e0-e2-e6-e7, e0-e3-e6-e7, e0-e4-e6-e7, e0-e5-e6-e7, e0-e1-e2-e8, e0-e1-e3-e8, e0-e2-e3-e8, e0-e1-e4-e8, e0-e2-e4-e8, e0-e3-e4-e8, e0-e1-e5-e8, e0-e2-e5-e8, e0-e3-e5-e8, e0-e4-e5-e8, e0-e1-e6-e8, e0-e2-e6-e8, e0-e3-e6-e8, e0-e4-e6-e8, e0-e5-e6-e8, e0-e1-e7-e8, e0-e2-e7-e8, e0-e3-e7-e8, e0-e4-e7-e8, e0-e5-e7-e8, e0-e6-e7-e8, 2e0-e1-e2-e3-e4-e5-e6, 2e0-e1-e2-e3-e4-e5-e7, 2e0-e1-e2-e3-e4-e6-e7, 2e0-e1-e2-e3-e5-e6-e7, 2e0-e1-e2-e4-e5-e6-e7, 2e0-e1-e3-e4-e5-e6-e7, 2e0-e2-e3-e4-e5-e6-e7, 2e0-e1-e2-e3-e4-e5-e8, 2e0-e1-e2-e3-e4-e6-e8, 2e0-e1-e2-e3-e5-e6-e8, 2e0-e1-e2-e4-e5-e6-e8, 2e0-e1-e3-e4-e5-e6-e8, 2e0-e2-e3-e4-e5-e6-e8, 2e0-e1-e2-e3-e4-e7-e8, 2e0-e1-e2-e3-e5-e7-e8, 2e0-e1-e2-e4-e5-e7-e8, 2e0-e1-e3-e4-e5-e7-e8, 2e0-e2-e3-e4-e5-e7-e8, 2e0-e1-e2-e3-e6-e7-e8, 2e0-e1-e2-e4-e6-e7-e8, 2e0-e1-e3-e4-e6-e7-e8, 2e0-e2-e3-e4-e6-e7-e8, 2e0-e1-e2-e5-e6-e7-e8, 2e0-e1-e3-e5-e6-e7-e8, 2e0-e2-e3-e5-e6-e7-e8, 2e0-e1-e4-e5-e6-e7-e8, 2e0-e2-e4-e5-e6-e7-e8, 2e0-e3-e4-e5-e6-e7-e8, 3e0-2e1-e2-e3-e4-e5-e6-e7-e8, 3e0-e1-2e2-e3-e4-e5-e6-e7-e8, 3e0-e1-e2-2e3-e4-e5-e6-e7-e8, 3e0-e1-e2-e3-2e4-e5-e6-e7-e8, 3e0-e1-e2-e3-e4-2e5-e6-e7-e8, 3e0-e1-e2-e3-e4-e5-2e6-e7-e8, 3e0-e1-e2-e3-e4-e5-e6-2e7-e8, 3e0-e1-e2-e3-e4-e5-e6-e7-2e8] 
get_part_roots(876): s_lst      = 13 [e7-e8, e0-e1-e2-e7, e0-e3-e4-e7, e0-e5-e6-e7, e0-e1-e2-e8, e0-e3-e4-e8, e0-e5-e6-e8, 2e0-e1-e2-e3-e4-e5-e6, 2e0-e1-e2-e3-e4-e7-e8, 2e0-e1-e2-e5-e6-e7-e8, 2e0-e3-e4-e5-e6-e7-e8, 3e0-e1-e2-e3-e4-e5-e6-2e7-e8, 3e0-e1-e2-e3-e4-e5-e6-e7-2e8] 
get_part_roots(877): tq1_lst    = 104 [e2-e3, e1-e3, e2-e4, e1-e4, e4-e5, e3-e5, e2-e5, e1-e5, e4-e6, e3-e6, e2-e6, e1-e6, e6-e7, e5-e7, e4-e7, e3-e7, e2-e7, e1-e7, e6-e8, e5-e8, e4-e8, e3-e8, e2-e8, e1-e8, e0-e1-e2-e3, e0-e1-e2-e4, e0-e1-e3-e4, e0-e2-e3-e4, e0-e1-e2-e5, e0-e1-e3-e5, e0-e2-e3-e5, e0-e1-e4-e5, e0-e2-e4-e5, e0-e3-e4-e5, e0-e1-e2-e6, e0-e1-e3-e6, e0-e2-e3-e6, e0-e1-e4-e6, e0-e2-e4-e6, e0-e3-e4-e6, e0-e1-e5-e6, e0-e2-e5-e6, e0-e3-e5-e6, e0-e4-e5-e6, e0-e1-e3-e7, e0-e2-e3-e7, e0-e1-e4-e7, e0-e2-e4-e7, e0-e1-e5-e7, e0-e2-e5-e7, e0-e3-e5-e7, e0-e4-e5-e7, e0-e1-e6-e7, e0-e2-e6-e7, e0-e3-e6-e7, e0-e4-e6-e7, e0-e1-e3-e8, e0-e2-e3-e8, e0-e1-e4-e8, e0-e2-e4-e8, e0-e1-e5-e8, e0-e2-e5-e8, e0-e3-e5-e8, e0-e4-e5-e8, e0-e1-e6-e8, e0-e2-e6-e8, e0-e3-e6-e8, e0-e4-e6-e8, e0-e1-e7-e8, e0-e2-e7-e8, e0-e3-e7-e8, e0-e4-e7-e8, e0-e5-e7-e8, e0-e6-e7-e8, 2e0-e1-e2-e3-e4-e5-e7, 2e0-e1-e2-e3-e4-e6-e7, 2e0-e1-e2-e3-e5-e6-e7, 2e0-e1-e2-e4-e5-e6-e7, 2e0-e1-e3-e4-e5-e6-e7, 2e0-e2-e3-e4-e5-e6-e7, 2e0-e1-e2-e3-e4-e5-e8, 2e0-e1-e2-e3-e4-e6-e8, 2e0-e1-e2-e3-e5-e6-e8, 2e0-e1-e2-e4-e5-e6-e8, 2e0-e1-e3-e4-e5-e6-e8, 2e0-e2-e3-e4-e5-e6-e8, 2e0-e1-e2-e3-e5-e7-e8, 2e0-e1-e2-e4-e5-e7-e8, 2e0-e1-e3-e4-e5-e7-e8, 2e0-e2-e3-e4-e5-e7-e8, 2e0-e1-e2-e3-e6-e7-e8, 2e0-e1-e2-e4-e6-e7-e8, 2e0-e1-e3-e4-e6-e7-e8, 2e0-e2-e3-e4-e6-e7-e8, 2e0-e1-e3-e5-e6-e7-e8, 2e0-e2-e3-e5-e6-e7-e8, 2e0-e1-e4-e5-e6-e7-e8, 2e0-e2-e4-e5-e6-e7-e8, 3e0-2e1-e2-e3-e4-e5-e6-e7-e8, 3e0-e1-2e2-e3-e4-e5-e6-e7-e8, 3e0-e1-e2-2e3-e4-e5-e6-e7-e8, 3e0-e1-e2-e3-2e4-e5-e6-e7-e8, 3e0-e1-e2-e3-e4-2e5-e6-e7-e8, 3e0-e1-e2-e3-e4-e5-2e6-e7-e8] 
get_part_roots(878): tq_lst     = 56 [e2-e3, e1-e3, e2-e4, e1-e4, e4-e5, e3-e5, e2-e5, e1-e5, e4-e6, e3-e6, e2-e6, e1-e6, e0-e1-e3-e5, e0-e2-e3-e5, e0-e1-e4-e5, e0-e2-e4-e5, e0-e1-e3-e6, e0-e2-e3-e6, e0-e1-e4-e6, e0-e2-e4-e6, e0-e1-e3-e7, e0-e2-e3-e7, e0-e1-e4-e7, e0-e2-e4-e7, e0-e1-e5-e7, e0-e2-e5-e7, e0-e3-e5-e7, e0-e4-e5-e7, e0-e1-e6-e7, e0-e2-e6-e7, e0-e3-e6-e7, e0-e4-e6-e7, e0-e1-e3-e8, e0-e2-e3-e8, e0-e1-e4-e8, e0-e2-e4-e8, e0-e1-e5-e8, e0-e2-e5-e8, e0-e3-e5-e8, e0-e4-e5-e8, e0-e1-e6-e8, e0-e2-e6-e8, e0-e3-e6-e8, e0-e4-e6-e8, 2e0-e1-e2-e3-e5-e7-e8, 2e0-e1-e2-e4-e5-e7-e8, 2e0-e1-e3-e4-e5-e7-e8, 2e0-e2-e3-e4-e5-e7-e8, 2e0-e1-e2-e3-e6-e7-e8, 2e0-e1-e2-e4-e6-e7-e8, 2e0-e1-e3-e4-e6-e7-e8, 2e0-e2-e3-e4-e6-e7-e8, 2e0-e1-e3-e5-e6-e7-e8, 2e0-e2-e3-e5-e6-e7-e8, 2e0-e1-e4-e5-e6-e7-e8, 2e0-e2-e4-e5-e6-e7-e8] 
get_part_roots(879): q_lst      = 28 [e2-e3, e1-e3, e4-e5, e3-e5, e2-e5, e1-e5, e0-e1-e3-e5, e0-e2-e3-e5, e0-e1-e4-e5, e0-e2-e4-e5, e0-e1-e3-e7, e0-e2-e3-e7, e0-e1-e5-e7, e0-e2-e5-e7, e0-e3-e5-e7, e0-e4-e5-e7, e0-e1-e3-e8, e0-e2-e3-e8, e0-e1-e5-e8, e0-e2-e5-e8, e0-e3-e5-e8, e0-e4-e5-e8, 2e0-e1-e2-e3-e5-e7-e8, 2e0-e1-e2-e4-e5-e7-e8, 2e0-e1-e3-e4-e5-e7-e8, 2e0-e2-e3-e4-e5-e7-e8, 2e0-e1-e3-e5-e6-e7-e8, 2e0-e2-e3-e5-e6-e7-e8] 
get_part_roots(880):        M --> 28 [e1-e4, e2-e4, e3-e6, e4-e6, e1-e6, e2-e6, e0-e2-e4-e6, e0-e1-e4-e6, e0-e2-e3-e6, e0-e1-e3-e6, e0-e2-e4-e7, e0-e1-e4-e7, e0-e2-e6-e7, e0-e1-e6-e7, e0-e4-e6-e7, e0-e3-e6-e7, e0-e2-e4-e8, e0-e1-e4-e8, e0-e2-e6-e8, e0-e1-e6-e8, e0-e4-e6-e8, e0-e3-e6-e8, 2e0-e1-e2-e4-e6-e7-e8, 2e0-e1-e2-e3-e6-e7-e8, 2e0-e2-e3-e4-e6-e7-e8, 2e0-e1-e3-e4-e6-e7-e8, 2e0-e2-e4-e5-e6-e7-e8, 2e0-e1-e4-e5-e6-e7-e8] 
get_part_roots(881): inv.Md_lst = 3A1 [e1-e2, e3-e4, e5-e6] , rank = 9 
import_cls(1015): importing:  (9, '3A1', 'A0') [e1-e2, e3-e4, e5-e6] == [e1-e2, e3-e4, e5-e6] 
import_cls(1015): importing:  (9, '3A1', '{A1}') [e1-e2, e3-e4, e5-e6] == [e1-e2, e3-e4, e5-e6] 
import_cls(1015): importing:  (9, '3A1', '{A1}') [e1-e2, e3-e4, e5-e6] == [e1-e2, e3-e4, e5-e6] 
import_cls(1015): importing:  (9, '3A1', '2A1') [e1-e2, e3-e4, e5-e6] == [e1-e2, e3-e4, e5-e6] 
import_cls(1015): importing:  (9, '3A1', '2{A1}') [e1-e2, e3-e4, e5-e6] == [e1-e2, e3-e4, e5-e6] 
import_cls(1015): importing:  (9, '3A1', '2{A1}') [e1-e2, e3-e4, e5-e6] == [e1-e2, e3-e4, e5-e6] 
import_cls(1015): importing:  (9, '3A1', '[A2]') [e1-e2, e3-e4, e5-e6] == [e1-e2, e3-e4, e5-e6] 
import_cls(1015): importing:  (9, '3A1', '2A1+{A1}') [e1-e2, e3-e4, e5-e6] == [e1-e2, e3-e4, e5-e6] 
import_cls(1015): importing:  (9, '3A1', '2A1+{A1}') [e1-e2, e3-e4, e5-e6] == [e1-e2, e3-e4, e5-e6] 
import_cls(1015): importing:  (9, '3A1', '3{A1}') [e1-e2, e3-e4, e5-e6] == [e1-e2, e3-e4, e5-e6] 
import_cls(1015): importing:  (9, '3A1', '3{A1}') [e1-e2, e3-e4, e5-e6] == [e1-e2, e3-e4, e5-e6] 
import_cls(1015): importing:  (9, '3A1', '{A1}+[A2]') [e1-e2, e3-e4, e5-e6] == [e1-e2, e3-e4, e5-e6] 
import_cls(1015): importing:  (9, '3A1', '[A3]') [e1-e2, e3-e4, e5-e6] == [e1-e2, e3-e4, e5-e6] 
import_cls(1015): importing:  (9, '3A1', '2A1+[A2]') [e1-e2, e3-e4, e5-e6] == [e1-e2, e3-e4, e5-e6] 
import_cls(1015): importing:  (9, '3A1', '2{A1}+[A2]') [e1-e2, e3-e4, e5-e6] == [e1-e2, e3-e4, e5-e6] 
import_cls(1015): importing:  (9, '3A1', '2A2') [e1-e2, e3-e4, e5-e6] == [e1-e2, e3-e4, e5-e6] 
import_cls(1015): importing:  (9, '3A1', '4A1') [e1-e2, e3-e4, e5-e6] == [e1-e2, e3-e4, e5-e6] 
import_cls(1015): importing:  (9, '3A1', '2A1+2{A1}') [e1-e2, e3-e4, e5-e6] == [e1-e2, e3-e4, e5-e6] 
import_cls(1015): importing:  (9, '3A1', '4{A1}') [e1-e2, e3-e4, e5-e6] == [e1-e2, e3-e4, e5-e6] 
import_cls(1015): importing:  (9, '3A1', '{A1}+[A3]') [e1-e2, e3-e4, e5-e6] == [e1-e2, e3-e4, e5-e6] 
import_cls(1015): importing:  (9, '3A1', '{A1}+[A3]') [e1-e2, e3-e4, e5-e6] == [e1-e2, e3-e4, e5-e6] 
import_cls(1015): importing:  (9, '3A1', '2{A1}+[A3]') [e1-e2, e3-e4, e5-e6] == [e1-e2, e3-e4, e5-e6] 
import_cls(1015): importing:  (9, '3A1', '2A1+{A1}+[A2]') [e1-e2, e3-e4, e5-e6] == [e1-e2, e3-e4, e5-e6] 
import_cls(1015): importing:  (9, '3A1', '3{A1}+[A2]') [e1-e2, e3-e4, e5-e6] == [e1-e2, e3-e4, e5-e6] 
import_cls(1015): importing:  (9, '3A1', '4A1+{A1}') [e1-e2, e3-e4, e5-e6] == [e1-e2, e3-e4, e5-e6] 
import_cls(1015): importing:  (9, '3A1', '4A1+{A1}') [e1-e2, e3-e4, e5-e6] == [e1-e2, e3-e4, e5-e6] 
import_cls(1015): importing:  (9, '3A1', '{A1}+2A2') [e1-e2, e3-e4, e5-e6] == [e1-e2, e3-e4, e5-e6] 
import_cls(1015): importing:  (9, '3A1', '[A2]+[A3]') [e1-e2, e3-e4, e5-e6] == [e1-e2, e3-e4, e5-e6] 
import_cls(1015): importing:  (9, '3A1', '[A5]') [e1-e2, e3-e4, e5-e6] == [e1-e2, e3-e4, e5-e6] 
import_cls(1015): importing:  (9, '3A1', '2A3') [e1-e2, e3-e4, e5-e6] == [e1-e2, e3-e4, e5-e6] 
import_cls(1015): importing:  (9, '3A1', '[A2]+2A2') [e1-e2, e3-e4, e5-e6] == [e1-e2, e3-e4, e5-e6] 
import_cls(1015): importing:  (9, '3A1', '4A1+2{A1}') [e1-e2, e3-e4, e5-e6] == [e1-e2, e3-e4, e5-e6] 
import_cls(1015): importing:  (9, '3A1', '{A1}+[A2]+[A3]') [e1-e2, e3-e4, e5-e6] == [e1-e2, e3-e4, e5-e6] 
import_cls(1015): importing:  (9, '3A1', '{A1}+[A5]') [e1-e2, e3-e4, e5-e6] == [e1-e2, e3-e4, e5-e6] 
import_cls(1015): importing:  (9, '3A1', '{A1}+2A3') [e1-e2, e3-e4, e5-e6] == [e1-e2, e3-e4, e5-e6] 
import_cls(1015): importing:  (9, '3A1', '[A2]+[A5]') [e1-e2, e3-e4, e5-e6] == [e1-e2, e3-e4, e5-e6] 
get_cls(1086): looping through inv_lst continued after recursive call: (9, '3A1', [e1-e2, e3-e4, e5-e6]) 
get_cls(1094): bas1_lst = 36 [('3A1', 'A0'), ('3A1', 'A1'), ('3A1', 'A1'), ('3A1', '2A1'), ('3A1', '2A1'), ('3A1', '2A1'), ('3A1', 'A2'), ('3A1', '3A1'), ('3A1', '3A1'), ('3A1', '3A1'), ('3A1', '3A1'), ('3A1', 'A1+A2'), ('3A1', 'A3'), ('3A1', '2A1+A2'), ('3A1', '2A1+A2'), ('3A1', '2A2'), ('3A1', '4A1'), ('3A1', '4A1'), ('3A1', '4A1'), ('3A1', 'A1+A3'), ('3A1', 'A1+A3'), ('3A1', '2A1+A3'), ('3A1', '3A1+A2'), ('3A1', '3A1+A2'), ('3A1', '5A1'), ('3A1', '5A1'), ('3A1', 'A1+2A2'), ('3A1', 'A2+A3'), ('3A1', 'A5'), ('3A1', '2A3'), ('3A1', '3A2'), ('3A1', '6A1'), ('3A1', 'A1+A2+A3'), ('3A1', 'A1+A5'), ('3A1', 'A1+2A3'), ('3A1', 'A2+A5')] 
get_cls(1095): s_lst    = 9 [e7-e8, e0-e1-e2-e8, e0-e3-e4-e8, e0-e5-e6-e8, 2e0-e1-e2-e3-e4-e7-e8, 2e0-e1-e2-e5-e6-e7-e8, 2e0-e3-e4-e5-e6-e7-e8, 3e0-e1-e2-e3-e4-e5-e6-2e7-e8, 3e0-e1-e2-e3-e4-e5-e6-e7-2e8] 
get_cls(1096): q_lst    = 12 [e0-e1-e3-e8, e0-e2-e3-e8, e0-e1-e5-e8, e0-e2-e5-e8, e0-e3-e5-e8, e0-e4-e5-e8, 2e0-e1-e2-e3-e5-e7-e8, 2e0-e1-e2-e4-e5-e7-e8, 2e0-e1-e3-e4-e5-e7-e8, 2e0-e2-e3-e4-e5-e7-e8, 2e0-e1-e3-e5-e6-e7-e8, 2e0-e2-e3-e5-e6-e7-e8] 
update(86): ETA = 0.00026069 m, counter = 0 / 77 , time = 3.3855e-6 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '3A1', 'A0')  
update(86): ETA = 0.083625 m, counter = 1 / 77 , time = 0.0011037 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '3A1', '{A1}')  
update(86): ETA = 0.17768 m, counter = 2 / 77 , time = 0.0034728 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '3A1', '2{A1}')  
update(86): ETA = 0.86880 m, counter = 3 / 77 , time = 0.015213 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '3A1', '{A2}')  
update(86): ETA = 0.20945 m, counter = 4 / 77 , time = 0.018082 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '3A1', '3{A1}')  
update(86): ETA = 1.2603 m, counter = 5 / 77 , time = 0.035586 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '3A1', '{A1}+{A2}')  
update(86): ETA = 0.26300 m, counter = 6 / 77 , time = 0.039290 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '3A1', '{A3}')  
update(86): ETA = 0.26172 m, counter = 7 / 77 , time = 0.043029 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '3A1', '2{A1}+{A2}')  
update(86): ETA = 0.085212 m, counter = 8 / 77 , time = 0.044264 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '3A1', '2{A2}')  
update(86): ETA = 0.078899 m, counter = 9 / 77 , time = 0.045424 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '3A1', '4{A1}')  
update(86): ETA = 1.9200 m, counter = 10 / 77 , time = 0.074080 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '3A1', '4{A1}')  
update(86): ETA = 0.019229 m, counter = 11 / 77 , time = 0.074372 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '3A1', '{A1}+{A3}')  
update(86): ETA = 0.24983 m, counter = 12 / 77 , time = 0.078215 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '3A1', '{A4}')  
update(86): ETA = 0.082872 m, counter = 13 / 77 , time = 0.079510 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '3A1', '{D4}')  
update(86): ETA = 0.24360 m, counter = 14 / 77 , time = 0.083377 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '3A1', '2{A1}+{A3}')  
update(86): ETA = 0.023577 m, counter = 15 / 77 , time = 0.083757 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '3A1', '2{A1}+{A3}')  
update(86): ETA = 0.020031 m, counter = 16 / 77 , time = 0.084085 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '3A1', '3{A1}+{A2}')  
update(86): ETA = 0.018118 m, counter = 17 / 77 , time = 0.084387 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '3A1', '5{A1}')  
update(86): ETA = 1.4778 m, counter = 18 / 77 , time = 0.10943 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '3A1', '{A1}+2{A2}')  
update(86): ETA = 0.025227 m, counter = 19 / 77 , time = 0.10987 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '3A1', '{A1}+{A4}')  
update(86): ETA = 0.025049 m, counter = 20 / 77 , time = 0.11031 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '3A1', '{A1}+{D4}')  
update(86): ETA = 0.16672 m, counter = 21 / 77 , time = 0.11329 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '3A1', '{A2}+{A3}')  
update(86): ETA = 0.027676 m, counter = 22 / 77 , time = 0.11379 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '3A1', '{A5}')  
update(86): ETA = 0.027331 m, counter = 23 / 77 , time = 0.11430 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '3A1', '{D5}')  
update(86): ETA = 0.024883 m, counter = 24 / 77 , time = 0.11476 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '3A1', '2{A1}+2{A2}')  
update(86): ETA = 0.027374 m, counter = 25 / 77 , time = 0.11529 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '3A1', '2{A1}+{A4}')  
update(86): ETA = 0.027085 m, counter = 26 / 77 , time = 0.11582 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '3A1', '2{A1}+{D4}')  
update(86): ETA = 0.027483 m, counter = 27 / 77 , time = 0.11637 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '3A1', '2{A3}')  
update(86): ETA = 0.026801 m, counter = 28 / 77 , time = 0.11692 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '3A1', '2{A3}')  
update(86): ETA = 0.022255 m, counter = 29 / 77 , time = 0.11738 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '3A1', '3{A1}+{A3}')  
update(86): ETA = 0.023100 m, counter = 30 / 77 , time = 0.11787 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '3A1', '3{A2}')  
update(86): ETA = 0.019615 m, counter = 31 / 77 , time = 0.11830 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '3A1', '4{A1}+{A2}')  
update(86): ETA = 0.017791 m, counter = 32 / 77 , time = 0.11870 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '3A1', '6{A1}')  
update(86): ETA = 0.022640 m, counter = 33 / 77 , time = 0.11921 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '3A1', '{A1}+{A2}+{A3}')  
update(86): ETA = 0.025640 m, counter = 34 / 77 , time = 0.11981 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '3A1', '{A1}+{A5}')  
update(86): ETA = 0.024972 m, counter = 35 / 77 , time = 0.12040 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '3A1', '{A1}+{A5}')  
update(86): ETA = 0.024256 m, counter = 36 / 77 , time = 0.12099 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '3A1', '{A1}+{D5}')  
update(86): ETA = 0.022387 m, counter = 37 / 77 , time = 0.12155 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '3A1', '{A2}+{A4}')  
update(86): ETA = 0.021936 m, counter = 38 / 77 , time = 0.12211 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '3A1', '{A2}+{D4}')  
update(86): ETA = 0.025661 m, counter = 39 / 77 , time = 0.12279 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '3A1', '{A6}')  
update(86): ETA = 0.026040 m, counter = 40 / 77 , time = 0.12349 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '3A1', '{D6}')  
update(86): ETA = 0.024728 m, counter = 41 / 77 , time = 0.12418 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '3A1', '{E6}')  
update(86): ETA = 0.021264 m, counter = 42 / 77 , time = 0.12479 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '3A1', '2{A1}+{A2}+{A3}')  
update(86): ETA = 0.023819 m, counter = 43 / 77 , time = 0.12549 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '3A1', '2{A1}+{A5}')  
update(86): ETA = 0.023274 m, counter = 44 / 77 , time = 0.12619 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '3A1', '2{A1}+{D5}')  
update(86): ETA = 0.020308 m, counter = 45 / 77 , time = 0.12683 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '3A1', '3{A1}+{D4}')  
update(86): ETA = 0.018169 m, counter = 46 / 77 , time = 0.12741 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '3A1', '4{A1}+{A3}')  
update(86): ETA = 0.014995 m, counter = 47 / 77 , time = 0.12791 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '3A1', '7{A1}')  
update(86): ETA = 0.018977 m, counter = 48 / 77 , time = 0.12857 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '3A1', '{A1}+2{A3}')  
update(86): ETA = 0.016688 m, counter = 49 / 77 , time = 0.12916 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '3A1', '{A1}+3{A2}')  
update(86): ETA = 0.017926 m, counter = 50 / 77 , time = 0.12983 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '3A1', '{A1}+{A2}+{A4}')  
update(86): ETA = 0.020293 m, counter = 51 / 77 , time = 0.13061 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '3A1', '{A1}+{A6}')  
update(86): ETA = 0.019822 m, counter = 52 / 77 , time = 0.13140 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '3A1', '{A1}+{D6}')  
update(86): ETA = 0.019133 m, counter = 53 / 77 , time = 0.13220 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '3A1', '{A1}+{E6}')  
update(86): ETA = 0.016851 m, counter = 54 / 77 , time = 0.13293 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '3A1', '{A2}+{A5}')  
update(86): ETA = 0.016207 m, counter = 55 / 77 , time = 0.13367 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '3A1', '{A2}+{D5}')  
update(86): ETA = 0.014906 m, counter = 56 / 77 , time = 0.13438 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '3A1', '{A3}+{A4}')  
update(86): ETA = 0.014229 m, counter = 57 / 77 , time = 0.13509 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '3A1', '{A3}+{D4}')  
update(86): ETA = 0.016790 m, counter = 58 / 77 , time = 0.13597 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '3A1', '{A7}')  
update(86): ETA = 0.015734 m, counter = 59 / 77 , time = 0.13685 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '3A1', '{A7}')  
update(86): ETA = 0.014828 m, counter = 60 / 77 , time = 0.13772 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '3A1', '{D7}')  
update(86): ETA = 0.014098 m, counter = 61 / 77 , time = 0.13860 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '3A1', '{E7}')  
update(86): ETA = 0.011579 m, counter = 62 / 77 , time = 0.13937 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '3A1', '2{A1}+2{A3}')  
update(86): ETA = 0.012743 m, counter = 63 / 77 , time = 0.14028 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '3A1', '2{A1}+{D6}')  
update(86): ETA = 0.011455 m, counter = 64 / 77 , time = 0.14116 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '3A1', '2{A4}')  
update(86): ETA = 0.010646 m, counter = 65 / 77 , time = 0.14205 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '3A1', '2{D4}')  
update(86): ETA = 0.0082427 m, counter = 66 / 77 , time = 0.14280 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '3A1', '4{A1}+{D4}')  
update(86): ETA = 0.0074643 m, counter = 67 / 77 , time = 0.14355 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '3A1', '4{A2}')  
update(86): ETA = 0.0056258 m, counter = 68 / 77 , time = 0.14417 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '3A1', '8{A1}')  
update(86): ETA = 0.0068048 m, counter = 69 / 77 , time = 0.14502 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '3A1', '{A1}+{A2}+{A5}')  
update(86): ETA = 0.0069316 m, counter = 70 / 77 , time = 0.14601 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '3A1', '{A1}+{A7}')  
update(86): ETA = 0.0059905 m, counter = 71 / 77 , time = 0.14701 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '3A1', '{A1}+{E7}')  
update(86): ETA = 0.0046894 m, counter = 72 / 77 , time = 0.14795 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '3A1', '{A2}+{E6}')  
update(86): ETA = 0.0036293 m, counter = 73 / 77 , time = 0.14886 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '3A1', '{A3}+{D5}')  
update(86): ETA = 0.0032817 m, counter = 74 / 77 , time = 0.14995 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '3A1', '{A8}')  
update(86): ETA = 0.0021959 m, counter = 75 / 77 , time = 0.15105 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '3A1', '{D8}')  
update(86): ETA = 0.0011049 m, counter = 76 / 77 , time = 0.15215 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '3A1', '{E8}')  
get_cls(1130): Setting Dynkin types of 55 items...please wait... 
update(86): ETA = 0.00075972 m, counter = 0 / 55 , time = 0.000069066 m, info = 9 3A1 A0  
update(86): ETA = 0.0036095 m, counter = 5 / 55 , time = 0.00043002 m, info = 9 3A1 A1  
update(86): ETA = 0.0034147 m, counter = 10 / 55 , time = 0.00080943 m, info = 9 3A1 2A1  
update(86): ETA = 0.0036220 m, counter = 15 / 55 , time = 0.0012622 m, info = 9 3A1 2A1  
update(86): ETA = 0.0031657 m, counter = 20 / 55 , time = 0.0017144 m, info = 9 3A1 2A1  
update(86): ETA = 0.0030124 m, counter = 25 / 55 , time = 0.0022165 m, info = 9 3A1 A2  
update(86): ETA = 0.0030221 m, counter = 30 / 55 , time = 0.0028209 m, info = 9 3A1 3A1  
update(86): ETA = 0.0027651 m, counter = 35 / 55 , time = 0.0035122 m, info = 9 3A1 4A1  
update(86): ETA = 0.0012704 m, counter = 40 / 55 , time = 0.0039356 m, info = 9 3A1 2A1  
update(86): ETA = 0.00092460 m, counter = 45 / 55 , time = 0.0043980 m, info = 9 3A1 2A1  
update(86): ETA = 0.00059858 m, counter = 50 / 55 , time = 0.0049965 m, info = 9 3A1 4A1  
get_cls(1145): inv      = 3A1 , rank = 9 
get_cls(1146): bas1_lst = 36 [('2A1', 3), ('2A1+A2', 2), ('2A1+A3', 1), ('2A2', 1), ('2A3', 1), ('3A1', 4), ('3A1+A2', 2), ('3A2', 1), ('4A1', 3), ('5A1', 2), ('6A1', 1), ('A0', 1), ('A1', 2), ('A1+2A2', 1), ('A1+2A3', 1), ('A1+A2', 1), ('A1+A2+A3', 1), ('A1+A3', 2), ('A1+A5', 1), ('A2', 1), ('A2+A3', 1), ('A2+A5', 1), ('A3', 1), ('A5', 1)] 
get_cls(1147): bas2_lst = 36 [('2A1', 12), ('3A1', 8), ('4A1', 2), ('A0', 1), ('A1', 9), ('A2', 4)] 
get_cls(1148): bas3_lst = 19 [('2A1', 12), ('4A1', 6), ('A0', 1)] 
update(86): ETA = 3.8153e-6 m, counter = 0 / 24624 , time = 3.8147e-7 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', 'A0', 'A0')  
get_cls(1168): 	 appended:  (9, '3A1', 'A0') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A0', 'A0') 
get_cls(1168): 	 appended:  (9, '3A1', '2A1') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A0', '2A1') 
get_cls(1168): 	 appended:  (9, '3A1', '4A1') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A0', '4A1') 
get_cls(1168): 	 appended:  (9, '3A1', '{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A1', 'A0') 
get_cls(1168): 	 appended:  (9, '3A1', '2A1+{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A1', '2A1') 
get_cls(1168): 	 appended:  (9, '3A1', '2{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A0', '2A1', 'A0') 
get_cls(1168): 	 appended:  (9, '3A1', '2A1+2{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A0', '2A1', '2A1') 
get_cls(1168): 	 appended:  (9, '3A1', '{A2}') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A2', 'A0') 
get_cls(1168): 	 appended:  (9, '3A1', '3{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A0', '3A1', 'A0') 
get_cls(1168): 	 appended:  (9, '3A1', '4{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A0', '4A1', 'A0') 
get_cls(1168): 	 appended:  (9, '3A1', '{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A1', 'A0', 'A0') 
get_cls(1168): 	 appended:  (9, '3A1', '2A1+{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A1', 'A0', '2A1') 
get_cls(1168): 	 appended:  (9, '3A1', '4A1+{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A1', 'A0', '4A1') 
get_cls(1168): 	 appended:  (9, '3A1', '2{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A1', 'A1', 'A0') 
get_cls(1168): 	 appended:  (9, '3A1', '2A1+2{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A1', 'A1', '2A1') 
get_cls(1168): 	 appended:  (9, '3A1', '3{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A1', '2A1', 'A0') 
get_cls(1168): 	 appended:  (9, '3A1', '2A1+3{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A1', '2A1', '2A1') 
get_cls(1168): 	 appended:  (9, '3A1', '{A1}+{A2}') , ( bas1.type, bas2.type, bas3.type ) = ('A1', 'A2', 'A0') 
get_cls(1168): 	 appended:  (9, '3A1', '4{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A1', '3A1', 'A0') 
get_cls(1168): 	 appended:  (9, '3A1', '5{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A1', '4A1', 'A0') 
get_cls(1168): 	 appended:  (9, '3A1', '[A3]') , ( bas1.type, bas2.type, bas3.type ) = ('A1', 'A0', '2A1') 
get_cls(1168): 	 appended:  (9, '3A1', '4A1+{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A1', 'A0', '4A1') 
get_cls(1168): 	 appended:  (9, '3A1', '2A1+{A2}') , ( bas1.type, bas2.type, bas3.type ) = ('A1', 'A1', '2A1') 
get_cls(1168): 	 appended:  (9, '3A1', '{A3}') , ( bas1.type, bas2.type, bas3.type ) = ('A1', '2A1', 'A0') 
get_cls(1168): 	 appended:  (9, '3A1', '2A2') , ( bas1.type, bas2.type, bas3.type ) = ('2A1', 'A0', '2A1') 
get_cls(1168): 	 appended:  (9, '3A1', '2A1+[A3]') , ( bas1.type, bas2.type, bas3.type ) = ('2A1', 'A1', '2A1') 
get_cls(1168): 	 appended:  (9, '3A1', '{A1}+2A2') , ( bas1.type, bas2.type, bas3.type ) = ('2A1', 'A1', '2A1') 
get_cls(1168): 	 appended:  (9, '3A1', '{A1}+[A3]') , ( bas1.type, bas2.type, bas3.type ) = ('2A1', '2A1', 'A0') 
get_cls(1168): 	 appended:  (9, '3A1', '4A1+2{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('2A1', '2A1', '2A1') 
update(86): ETA = 501.28 m, counter = 2462 / 24624 , time = 55.687 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('2A1', '2A1', '2A1')  
get_cls(1168): 	 appended:  (9, '3A1', '2{A1}+[A3]') , ( bas1.type, bas2.type, bas3.type ) = ('2A1', '3A1', 'A0') 
get_cls(1168): 	 appended:  (9, '3A1', '{A1}+[A3]') , ( bas1.type, bas2.type, bas3.type ) = ('2A1', 'A0', '2A1') 
get_cls(1168): 	 appended:  (9, '3A1', '4A1+2{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('2A1', 'A0', '4A1') 
get_cls(1168): 	 appended:  (9, '3A1', '2A1+{A1}+{A2}') , ( bas1.type, bas2.type, bas3.type ) = ('2A1', 'A1', '2A1') 
get_cls(1168): 	 appended:  (9, '3A1', '{A1}+{A3}') , ( bas1.type, bas2.type, bas3.type ) = ('2A1', '2A1', 'A0') 
get_cls(1168): 	 appended:  (9, '3A1', '2A1+{A3}') , ( bas1.type, bas2.type, bas3.type ) = ('2A1', 'A1', '2A1') 
get_cls(1168): 	 appended:  (9, '3A1', '[A2]') , ( bas1.type, bas2.type, bas3.type ) = ('A2', 'A0', 'A0') 
get_cls(1168): 	 appended:  (9, '3A1', '2A1+[A2]') , ( bas1.type, bas2.type, bas3.type ) = ('A2', 'A0', '2A1') 
get_cls(1168): 	 appended:  (9, '3A1', '{A1}+[A2]') , ( bas1.type, bas2.type, bas3.type ) = ('A2', 'A1', 'A0') 
get_cls(1168): 	 appended:  (9, '3A1', '2A1+{A1}+[A2]') , ( bas1.type, bas2.type, bas3.type ) = ('A2', 'A1', '2A1') 
get_cls(1168): 	 appended:  (9, '3A1', '2{A1}+[A2]') , ( bas1.type, bas2.type, bas3.type ) = ('A2', '2A1', 'A0') 
get_cls(1168): 	 appended:  (9, '3A1', '2A1+2{A1}+[A2]') , ( bas1.type, bas2.type, bas3.type ) = ('A2', '2A1', '2A1') 
get_cls(1168): 	 appended:  (9, '3A1', '{A2}+[A2]') , ( bas1.type, bas2.type, bas3.type ) = ('A2', 'A2', 'A0') 
get_cls(1168): 	 appended:  (9, '3A1', '3{A1}+[A2]') , ( bas1.type, bas2.type, bas3.type ) = ('A2', '3A1', 'A0') 
get_cls(1168): 	 appended:  (9, '3A1', '4{A1}+[A2]') , ( bas1.type, bas2.type, bas3.type ) = ('A2', '4A1', 'A0') 
get_cls(1168): 	 appended:  (9, '3A1', '{A1}+2A2') , ( bas1.type, bas2.type, bas3.type ) = ('3A1', 'A0', '2A1') 
get_cls(1168): 	 appended:  (9, '3A1', '2A1+{A1}+[A3]') , ( bas1.type, bas2.type, bas3.type ) = ('3A1', 'A1', '2A1') 
get_cls(1168): 	 appended:  (9, '3A1', '2{A1}+2A2') , ( bas1.type, bas2.type, bas3.type ) = ('3A1', 'A1', '2A1') 
update(86): ETA = 121.51 m, counter = 4924 / 24624 , time = 70.873 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('3A1', 'A1', '2A1')  
get_cls(1168): 	 appended:  (9, '3A1', '2{A1}+[A3]') , ( bas1.type, bas2.type, bas3.type ) = ('3A1', '2A1', 'A0') 
get_cls(1168): 	 appended:  (9, '3A1', '4A1+3{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('3A1', '2A1', '2A1') 
get_cls(1168): 	 appended:  (9, '3A1', '3{A1}+[A3]') , ( bas1.type, bas2.type, bas3.type ) = ('3A1', '3A1', 'A0') 
get_cls(1168): 	 appended:  (9, '3A1', '[D4]') , ( bas1.type, bas2.type, bas3.type ) = ('3A1', 'A1', 'A0') 
get_cls(1168): 	 appended:  (9, '3A1', '2A2+{A2}') , ( bas1.type, bas2.type, bas3.type ) = ('3A1', 'A1', '2A1') 
get_cls(1168): 	 appended:  (9, '3A1', '2A1+{A1}+{A3}') , ( bas1.type, bas2.type, bas3.type ) = ('3A1', 'A1', '2A1') 
get_cls(1168): 	 appended:  (9, '3A1', '{D4}') , ( bas1.type, bas2.type, bas3.type ) = ('3A1', 'A1', 'A0') 
update(86): ETA = 32.299 m, counter = 7386 / 24624 , time = 75.486 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('3A1', '3A1', '4A1')  
get_cls(1168): 	 appended:  (9, '3A1', '[A2]+[A3]') , ( bas1.type, bas2.type, bas3.type ) = ('A1+A2', 'A0', '2A1') 
get_cls(1168): 	 appended:  (9, '3A1', '2A1+{A2}+[A2]') , ( bas1.type, bas2.type, bas3.type ) = ('A1+A2', 'A1', '2A1') 
get_cls(1168): 	 appended:  (9, '3A1', '[A2]+{A3}') , ( bas1.type, bas2.type, bas3.type ) = ('A1+A2', '2A1', 'A0') 
get_cls(1168): 	 appended:  (9, '3A1', '[A5]') , ( bas1.type, bas2.type, bas3.type ) = ('A3', 'A0', '2A1') 
get_cls(1168): 	 appended:  (9, '3A1', '2A1+[D4]') , ( bas1.type, bas2.type, bas3.type ) = ('A3', 'A1', '2A1') 
get_cls(1168): 	 appended:  (9, '3A1', '2A2+[A2]') , ( bas1.type, bas2.type, bas3.type ) = ('2A1+A2', 'A0', '2A1') 
get_cls(1168): 	 appended:  (9, '3A1', '{A1}+2A2+[A2]') , ( bas1.type, bas2.type, bas3.type ) = ('2A1+A2', 'A1', '2A1') 
get_cls(1168): 	 appended:  (9, '3A1', '{A1}+[A2]+[A3]') , ( bas1.type, bas2.type, bas3.type ) = ('2A1+A2', '2A1', 'A0') 
get_cls(1168): 	 appended:  (9, '3A1', '2{A1}+[A2]+[A3]') , ( bas1.type, bas2.type, bas3.type ) = ('2A1+A2', '3A1', 'A0') 
get_cls(1168): 	 appended:  (9, '3A1', '2A1+[A2]+{A3}') , ( bas1.type, bas2.type, bas3.type ) = ('2A1+A2', 'A1', '2A1') 
update(86): ETA = 26.736 m, counter = 9848 / 24624 , time = 79.941 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('2A1+A2', '2A1', '2A1')  
get_cls(1168): 	 appended:  (9, '3A1', '2A3') , ( bas1.type, bas2.type, bas3.type ) = ('2A2', 'A0', '2A1') 
get_cls(1168): 	 appended:  (9, '3A1', '{A1}+2A3') , ( bas1.type, bas2.type, bas3.type ) = ('2A2', 'A1', '2A1') 
get_cls(1168): 	 appended:  (9, '3A1', '{A1}+[A5]') , ( bas1.type, bas2.type, bas3.type ) = ('2A2', '2A1', 'A0') 
get_cls(1168): 	 appended:  (9, '3A1', '2[A3]') , ( bas1.type, bas2.type, bas3.type ) = ('4A1', '2A1', 'A0') 
get_cls(1168): 	 appended:  (9, '3A1', '{A1}+[D4]') , ( bas1.type, bas2.type, bas3.type ) = ('4A1', 'A1', 'A0') 
get_cls(1168): 	 appended:  (9, '3A1', '{A1}+2A2+{A2}') , ( bas1.type, bas2.type, bas3.type ) = ('4A1', 'A1', '2A1') 
update(86): ETA = 12.727 m, counter = 12310 / 24624 , time = 82.486 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('4A1', '4A1', '4A1')  
get_cls(1168): 	 appended:  (9, '3A1', '{A1}+{D4}') , ( bas1.type, bas2.type, bas3.type ) = ('4A1', 'A1', 'A0') 
get_cls(1168): 	 appended:  (9, '3A1', '{A1}+[A5]') , ( bas1.type, bas2.type, bas3.type ) = ('A1+A3', 'A0', '2A1') 
get_cls(1168): 	 appended:  (9, '3A1', '2A1+{A1}+[D4]') , ( bas1.type, bas2.type, bas3.type ) = ('A1+A3', 'A1', '2A1') 
get_cls(1168): 	 appended:  (9, '3A1', '[D5]') , ( bas1.type, bas2.type, bas3.type ) = ('A1+A3', 'A1', 'A0') 
get_cls(1168): 	 appended:  (9, '3A1', '{A1}+2[A3]') , ( bas1.type, bas2.type, bas3.type ) = ('2A1+A3', 'A0', '2A1') 
get_cls(1168): 	 appended:  (9, '3A1', '2{A1}+[A5]') , ( bas1.type, bas2.type, bas3.type ) = ('2A1+A3', 'A0', '2A1') 
get_cls(1168): 	 appended:  (9, '3A1', '{A1}+[D5]') , ( bas1.type, bas2.type, bas3.type ) = ('2A1+A3', 'A1', 'A0') 
update(86): ETA = 8.0267 m, counter = 14772 / 24624 , time = 84.492 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('2A1+A3', '2A1', '2A1')  
get_cls(1168): 	 appended:  (9, '3A1', '[A2]+[D4]') , ( bas1.type, bas2.type, bas3.type ) = ('3A1+A2', 'A1', 'A0') 
get_cls(1168): 	 appended:  (9, '3A1', '2A2+{A2}+[A2]') , ( bas1.type, bas2.type, bas3.type ) = ('3A1+A2', 'A1', '2A1') 
get_cls(1168): 	 appended:  (9, '3A1', '[A2]+{D4}') , ( bas1.type, bas2.type, bas3.type ) = ('3A1+A2', 'A1', 'A0') 
get_cls(1168): 	 appended:  (9, '3A1', '{A1}+2A3') , ( bas1.type, bas2.type, bas3.type ) = ('5A1', 'A0', '2A1') 
update(86): ETA = 5.6655 m, counter = 17234 / 24624 , time = 86.379 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('5A1', 'A1', '2A1')  
get_cls(1168): 	 appended:  (9, '3A1', '2{A1}+2A3') , ( bas1.type, bas2.type, bas3.type ) = ('A1+2A2', 'A1', '2A1') 
get_cls(1168): 	 appended:  (9, '3A1', '[A2]+[A5]') , ( bas1.type, bas2.type, bas3.type ) = ('A2+A3', 'A0', '2A1') 
get_cls(1168): 	 appended:  (9, '3A1', '[A7]') , ( bas1.type, bas2.type, bas3.type ) = ('A5', 'A0', '2A1') 
get_cls(1168): 	 appended:  (9, '3A1', '[E6]') , ( bas1.type, bas2.type, bas3.type ) = ('A5', 'A1', 'A0') 
update(86): ETA = 2.6354 m, counter = 19696 / 24624 , time = 87.696 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A5', '3A1', '2A1')  
get_cls(1168): 	 appended:  (9, '3A1', '{A1}+[A2]+[A5]') , ( bas1.type, bas2.type, bas3.type ) = ('3A2', '2A1', 'A0') 
get_cls(1168): 	 appended:  (9, '3A1', '[A2]+[D5]') , ( bas1.type, bas2.type, bas3.type ) = ('A1+A2+A3', 'A1', 'A0') 
update(86): ETA = 1.2558 m, counter = 22158 / 24624 , time = 88.949 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A1+A2+A3', '2A1', '2A1')  
get_cls(1168): 	 appended:  (9, '3A1', '{A1}+[A7]') , ( bas1.type, bas2.type, bas3.type ) = ('A1+A5', 'A0', '2A1') 
get_cls(1168): 	 appended:  (9, '3A1', '{A1}+[E6]') , ( bas1.type, bas2.type, bas3.type ) = ('A1+A5', 'A1', 'A0') 
get_cls(1168): 	 appended:  (9, '3A1', '[A2]+[E6]') , ( bas1.type, bas2.type, bas3.type ) = ('A2+A5', 'A1', 'A0') 
update(86): ETA = 0.00092386 m, counter = 24620 / 24624 , time = 89.518 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A2+A5', '4A1', '4A1')  
get_cls(1070): looping through inv_lst: (9, '4A1', [e1-e2, e3-e4, e5-e6, e7-e8]) 
get_part_roots(875): r_lst      = 120 [e1-e2, e2-e3, e1-e3, e3-e4, e2-e4, e1-e4, e4-e5, e3-e5, e2-e5, e1-e5, e5-e6, e4-e6, e3-e6, e2-e6, e1-e6, e6-e7, e5-e7, e4-e7, e3-e7, e2-e7, e1-e7, e7-e8, e6-e8, e5-e8, e4-e8, e3-e8, e2-e8, e1-e8, e0-e1-e2-e3, e0-e1-e2-e4, e0-e1-e3-e4, e0-e2-e3-e4, e0-e1-e2-e5, e0-e1-e3-e5, e0-e2-e3-e5, e0-e1-e4-e5, e0-e2-e4-e5, e0-e3-e4-e5, e0-e1-e2-e6, e0-e1-e3-e6, e0-e2-e3-e6, e0-e1-e4-e6, e0-e2-e4-e6, e0-e3-e4-e6, e0-e1-e5-e6, e0-e2-e5-e6, e0-e3-e5-e6, e0-e4-e5-e6, e0-e1-e2-e7, e0-e1-e3-e7, e0-e2-e3-e7, e0-e1-e4-e7, e0-e2-e4-e7, e0-e3-e4-e7, e0-e1-e5-e7, e0-e2-e5-e7, e0-e3-e5-e7, e0-e4-e5-e7, e0-e1-e6-e7, e0-e2-e6-e7, e0-e3-e6-e7, e0-e4-e6-e7, e0-e5-e6-e7, e0-e1-e2-e8, e0-e1-e3-e8, e0-e2-e3-e8, e0-e1-e4-e8, e0-e2-e4-e8, e0-e3-e4-e8, e0-e1-e5-e8, e0-e2-e5-e8, e0-e3-e5-e8, e0-e4-e5-e8, e0-e1-e6-e8, e0-e2-e6-e8, e0-e3-e6-e8, e0-e4-e6-e8, e0-e5-e6-e8, e0-e1-e7-e8, e0-e2-e7-e8, e0-e3-e7-e8, e0-e4-e7-e8, e0-e5-e7-e8, e0-e6-e7-e8, 2e0-e1-e2-e3-e4-e5-e6, 2e0-e1-e2-e3-e4-e5-e7, 2e0-e1-e2-e3-e4-e6-e7, 2e0-e1-e2-e3-e5-e6-e7, 2e0-e1-e2-e4-e5-e6-e7, 2e0-e1-e3-e4-e5-e6-e7, 2e0-e2-e3-e4-e5-e6-e7, 2e0-e1-e2-e3-e4-e5-e8, 2e0-e1-e2-e3-e4-e6-e8, 2e0-e1-e2-e3-e5-e6-e8, 2e0-e1-e2-e4-e5-e6-e8, 2e0-e1-e3-e4-e5-e6-e8, 2e0-e2-e3-e4-e5-e6-e8, 2e0-e1-e2-e3-e4-e7-e8, 2e0-e1-e2-e3-e5-e7-e8, 2e0-e1-e2-e4-e5-e7-e8, 2e0-e1-e3-e4-e5-e7-e8, 2e0-e2-e3-e4-e5-e7-e8, 2e0-e1-e2-e3-e6-e7-e8, 2e0-e1-e2-e4-e6-e7-e8, 2e0-e1-e3-e4-e6-e7-e8, 2e0-e2-e3-e4-e6-e7-e8, 2e0-e1-e2-e5-e6-e7-e8, 2e0-e1-e3-e5-e6-e7-e8, 2e0-e2-e3-e5-e6-e7-e8, 2e0-e1-e4-e5-e6-e7-e8, 2e0-e2-e4-e5-e6-e7-e8, 2e0-e3-e4-e5-e6-e7-e8, 3e0-2e1-e2-e3-e4-e5-e6-e7-e8, 3e0-e1-2e2-e3-e4-e5-e6-e7-e8, 3e0-e1-e2-2e3-e4-e5-e6-e7-e8, 3e0-e1-e2-e3-2e4-e5-e6-e7-e8, 3e0-e1-e2-e3-e4-2e5-e6-e7-e8, 3e0-e1-e2-e3-e4-e5-2e6-e7-e8, 3e0-e1-e2-e3-e4-e5-e6-2e7-e8, 3e0-e1-e2-e3-e4-e5-e6-e7-2e8] 
get_part_roots(876): s_lst      = 4 [2e0-e1-e2-e3-e4-e5-e6, 2e0-e1-e2-e3-e4-e7-e8, 2e0-e1-e2-e5-e6-e7-e8, 2e0-e3-e4-e5-e6-e7-e8] 
get_part_roots(877): tq1_lst    = 112 [e2-e3, e1-e3, e2-e4, e1-e4, e4-e5, e3-e5, e2-e5, e1-e5, e4-e6, e3-e6, e2-e6, e1-e6, e6-e7, e5-e7, e4-e7, e3-e7, e2-e7, e1-e7, e6-e8, e5-e8, e4-e8, e3-e8, e2-e8, e1-e8, e0-e1-e2-e3, e0-e1-e2-e4, e0-e1-e3-e4, e0-e2-e3-e4, e0-e1-e2-e5, e0-e1-e3-e5, e0-e2-e3-e5, e0-e1-e4-e5, e0-e2-e4-e5, e0-e3-e4-e5, e0-e1-e2-e6, e0-e1-e3-e6, e0-e2-e3-e6, e0-e1-e4-e6, e0-e2-e4-e6, e0-e3-e4-e6, e0-e1-e5-e6, e0-e2-e5-e6, e0-e3-e5-e6, e0-e4-e5-e6, e0-e1-e2-e7, e0-e1-e3-e7, e0-e2-e3-e7, e0-e1-e4-e7, e0-e2-e4-e7, e0-e3-e4-e7, e0-e1-e5-e7, e0-e2-e5-e7, e0-e3-e5-e7, e0-e4-e5-e7, e0-e1-e6-e7, e0-e2-e6-e7, e0-e3-e6-e7, e0-e4-e6-e7, e0-e5-e6-e7, e0-e1-e2-e8, e0-e1-e3-e8, e0-e2-e3-e8, e0-e1-e4-e8, e0-e2-e4-e8, e0-e3-e4-e8, e0-e1-e5-e8, e0-e2-e5-e8, e0-e3-e5-e8, e0-e4-e5-e8, e0-e1-e6-e8, e0-e2-e6-e8, e0-e3-e6-e8, e0-e4-e6-e8, e0-e5-e6-e8, e0-e1-e7-e8, e0-e2-e7-e8, e0-e3-e7-e8, e0-e4-e7-e8, e0-e5-e7-e8, e0-e6-e7-e8, 2e0-e1-e2-e3-e4-e5-e7, 2e0-e1-e2-e3-e4-e6-e7, 2e0-e1-e2-e3-e5-e6-e7, 2e0-e1-e2-e4-e5-e6-e7, 2e0-e1-e3-e4-e5-e6-e7, 2e0-e2-e3-e4-e5-e6-e7, 2e0-e1-e2-e3-e4-e5-e8, 2e0-e1-e2-e3-e4-e6-e8, 2e0-e1-e2-e3-e5-e6-e8, 2e0-e1-e2-e4-e5-e6-e8, 2e0-e1-e3-e4-e5-e6-e8, 2e0-e2-e3-e4-e5-e6-e8, 2e0-e1-e2-e3-e5-e7-e8, 2e0-e1-e2-e4-e5-e7-e8, 2e0-e1-e3-e4-e5-e7-e8, 2e0-e2-e3-e4-e5-e7-e8, 2e0-e1-e2-e3-e6-e7-e8, 2e0-e1-e2-e4-e6-e7-e8, 2e0-e1-e3-e4-e6-e7-e8, 2e0-e2-e3-e4-e6-e7-e8, 2e0-e1-e3-e5-e6-e7-e8, 2e0-e2-e3-e5-e6-e7-e8, 2e0-e1-e4-e5-e6-e7-e8, 2e0-e2-e4-e5-e6-e7-e8, 3e0-2e1-e2-e3-e4-e5-e6-e7-e8, 3e0-e1-2e2-e3-e4-e5-e6-e7-e8, 3e0-e1-e2-2e3-e4-e5-e6-e7-e8, 3e0-e1-e2-e3-2e4-e5-e6-e7-e8, 3e0-e1-e2-e3-e4-2e5-e6-e7-e8, 3e0-e1-e2-e3-e4-e5-2e6-e7-e8, 3e0-e1-e2-e3-e4-e5-e6-2e7-e8, 3e0-e1-e2-e3-e4-e5-e6-e7-2e8] 
get_part_roots(878): tq_lst     = 80 [e2-e3, e1-e3, e2-e4, e1-e4, e4-e5, e3-e5, e2-e5, e1-e5, e4-e6, e3-e6, e2-e6, e1-e6, e6-e7, e5-e7, e4-e7, e3-e7, e2-e7, e1-e7, e6-e8, e5-e8, e4-e8, e3-e8, e2-e8, e1-e8, e0-e1-e3-e5, e0-e2-e3-e5, e0-e1-e4-e5, e0-e2-e4-e5, e0-e1-e3-e6, e0-e2-e3-e6, e0-e1-e4-e6, e0-e2-e4-e6, e0-e1-e3-e7, e0-e2-e3-e7, e0-e1-e4-e7, e0-e2-e4-e7, e0-e1-e5-e7, e0-e2-e5-e7, e0-e3-e5-e7, e0-e4-e5-e7, e0-e1-e6-e7, e0-e2-e6-e7, e0-e3-e6-e7, e0-e4-e6-e7, e0-e1-e3-e8, e0-e2-e3-e8, e0-e1-e4-e8, e0-e2-e4-e8, e0-e1-e5-e8, e0-e2-e5-e8, e0-e3-e5-e8, e0-e4-e5-e8, e0-e1-e6-e8, e0-e2-e6-e8, e0-e3-e6-e8, e0-e4-e6-e8, 2e0-e1-e2-e3-e4-e5-e7, 2e0-e1-e2-e3-e4-e6-e7, 2e0-e1-e2-e3-e5-e6-e7, 2e0-e1-e2-e4-e5-e6-e7, 2e0-e1-e3-e4-e5-e6-e7, 2e0-e2-e3-e4-e5-e6-e7, 2e0-e1-e2-e3-e4-e5-e8, 2e0-e1-e2-e3-e4-e6-e8, 2e0-e1-e2-e3-e5-e6-e8, 2e0-e1-e2-e4-e5-e6-e8, 2e0-e1-e3-e4-e5-e6-e8, 2e0-e2-e3-e4-e5-e6-e8, 2e0-e1-e2-e3-e5-e7-e8, 2e0-e1-e2-e4-e5-e7-e8, 2e0-e1-e3-e4-e5-e7-e8, 2e0-e2-e3-e4-e5-e7-e8, 2e0-e1-e2-e3-e6-e7-e8, 2e0-e1-e2-e4-e6-e7-e8, 2e0-e1-e3-e4-e6-e7-e8, 2e0-e2-e3-e4-e6-e7-e8, 2e0-e1-e3-e5-e6-e7-e8, 2e0-e2-e3-e5-e6-e7-e8, 2e0-e1-e4-e5-e6-e7-e8, 2e0-e2-e4-e5-e6-e7-e8] 
get_part_roots(879): q_lst      = 40 [e2-e3, e1-e3, e4-e5, e3-e5, e2-e5, e1-e5, e6-e7, e5-e7, e4-e7, e3-e7, e2-e7, e1-e7, e0-e1-e3-e5, e0-e2-e3-e5, e0-e1-e4-e5, e0-e2-e4-e5, e0-e1-e3-e7, e0-e2-e3-e7, e0-e1-e4-e7, e0-e2-e4-e7, e0-e1-e5-e7, e0-e2-e5-e7, e0-e3-e5-e7, e0-e4-e5-e7, e0-e1-e6-e7, e0-e2-e6-e7, e0-e3-e6-e7, e0-e4-e6-e7, 2e0-e1-e2-e3-e4-e5-e7, 2e0-e1-e2-e3-e4-e6-e7, 2e0-e1-e2-e3-e5-e6-e7, 2e0-e1-e2-e4-e5-e6-e7, 2e0-e1-e3-e4-e5-e6-e7, 2e0-e2-e3-e4-e5-e6-e7, 2e0-e1-e2-e3-e5-e7-e8, 2e0-e1-e2-e4-e5-e7-e8, 2e0-e1-e3-e4-e5-e7-e8, 2e0-e2-e3-e4-e5-e7-e8, 2e0-e1-e3-e5-e6-e7-e8, 2e0-e2-e3-e5-e6-e7-e8] 
get_part_roots(880):        M --> 40 [e1-e4, e2-e4, e3-e6, e4-e6, e1-e6, e2-e6, e5-e8, e6-e8, e3-e8, e4-e8, e1-e8, e2-e8, e0-e2-e4-e6, e0-e1-e4-e6, e0-e2-e3-e6, e0-e1-e3-e6, e0-e2-e4-e8, e0-e1-e4-e8, e0-e2-e3-e8, e0-e1-e3-e8, e0-e2-e6-e8, e0-e1-e6-e8, e0-e4-e6-e8, e0-e3-e6-e8, e0-e2-e5-e8, e0-e1-e5-e8, e0-e4-e5-e8, e0-e3-e5-e8, 2e0-e1-e2-e3-e4-e6-e8, 2e0-e1-e2-e3-e4-e5-e8, 2e0-e1-e2-e4-e5-e6-e8, 2e0-e1-e2-e3-e5-e6-e8, 2e0-e2-e3-e4-e5-e6-e8, 2e0-e1-e3-e4-e5-e6-e8, 2e0-e1-e2-e4-e6-e7-e8, 2e0-e1-e2-e3-e6-e7-e8, 2e0-e2-e3-e4-e6-e7-e8, 2e0-e1-e3-e4-e6-e7-e8, 2e0-e2-e4-e5-e6-e7-e8, 2e0-e1-e4-e5-e6-e7-e8] 
get_part_roots(881): inv.Md_lst = 4A1 [e1-e2, e3-e4, e5-e6, e7-e8] , rank = 9 
get_cls(1086): looping through inv_lst continued after recursive call: (9, '4A1', [e1-e2, e3-e4, e5-e6, e7-e8]) 
get_cls(1094): bas1_lst = 1 [('4A1', 'A0')] 
get_cls(1095): s_lst    = 4 [2e0-e1-e2-e3-e4-e5-e6, 2e0-e1-e2-e3-e4-e7-e8, 2e0-e1-e2-e5-e6-e7-e8, 2e0-e3-e4-e5-e6-e7-e8] 
get_cls(1096): q_lst    = 40 [e2-e3, e1-e3, e4-e5, e3-e5, e2-e5, e1-e5, e6-e7, e5-e7, e4-e7, e3-e7, e2-e7, e1-e7, e0-e1-e3-e5, e0-e2-e3-e5, e0-e1-e4-e5, e0-e2-e4-e5, e0-e1-e3-e7, e0-e2-e3-e7, e0-e1-e4-e7, e0-e2-e4-e7, e0-e1-e5-e7, e0-e2-e5-e7, e0-e3-e5-e7, e0-e4-e5-e7, e0-e1-e6-e7, e0-e2-e6-e7, e0-e3-e6-e7, e0-e4-e6-e7, 2e0-e1-e2-e3-e4-e5-e7, 2e0-e1-e2-e3-e4-e6-e7, 2e0-e1-e2-e3-e5-e6-e7, 2e0-e1-e2-e4-e5-e6-e7, 2e0-e1-e3-e4-e5-e6-e7, 2e0-e2-e3-e4-e5-e6-e7, 2e0-e1-e2-e3-e5-e7-e8, 2e0-e1-e2-e4-e5-e7-e8, 2e0-e1-e3-e4-e5-e7-e8, 2e0-e2-e3-e4-e5-e7-e8, 2e0-e1-e3-e5-e6-e7-e8, 2e0-e2-e3-e5-e6-e7-e8] 
update(86): ETA = 0.00023223 m, counter = 0 / 77 , time = 3.0160e-6 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '4A1', 'A0')  
update(86): ETA = 0.084306 m, counter = 1 / 77 , time = 0.0011123 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '4A1', '{A1}')  
update(86): ETA = 0.59134 m, counter = 2 / 77 , time = 0.0089968 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '4A1', '2{A1}')  
update(86): ETA = 133.38 m, counter = 3 / 77 , time = 1.8114 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '4A1', '{A2}')  
update(86): ETA = 5.3698 m, counter = 4 / 77 , time = 1.8850 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '4A1', '3{A1}')  
update(86): ETA = 3773.6 m, counter = 5 / 77 , time = 54.297 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '4A1', '{A1}+{A2}')  
update(86): ETA = 503.02 m, counter = 6 / 77 , time = 61.381 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '4A1', '{A3}')  
update(86): ETA = 8.0541 m, counter = 7 / 77 , time = 61.496 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '4A1', '2{A1}+{A2}')  
update(86): ETA = 2848.9 m, counter = 8 / 77 , time = 102.78 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '4A1', '2{A2}')  
update(86): ETA = 136.55 m, counter = 9 / 77 , time = 104.79 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '4A1', '4{A1}')  
update(86): ETA = 8197.0 m, counter = 10 / 77 , time = 227.14 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '4A1', '4{A1}')  
update(86): ETA = 0.019635 m, counter = 11 / 77 , time = 227.14 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '4A1', '{A1}+{A3}')  
update(86): ETA = 49.780 m, counter = 12 / 77 , time = 227.90 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '4A1', '{A4}')  
update(86): ETA = 9.1943 m, counter = 13 / 77 , time = 228.05 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '4A1', '{D4}')  
update(86): ETA = 9.0183 m, counter = 14 / 77 , time = 228.19 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '4A1', '2{A1}+{A3}')  
update(86): ETA = 0.023930 m, counter = 15 / 77 , time = 228.19 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '4A1', '2{A1}+{A3}')  
update(86): ETA = 0.020365 m, counter = 16 / 77 , time = 228.19 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '4A1', '3{A1}+{A2}')  
update(86): ETA = 0.018963 m, counter = 17 / 77 , time = 228.19 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '4A1', '5{A1}')  
update(86): ETA = 0.022220 m, counter = 18 / 77 , time = 228.19 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '4A1', '{A1}+2{A2}')  
update(86): ETA = 0.025988 m, counter = 19 / 77 , time = 228.19 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '4A1', '{A1}+{A4}')  
update(86): ETA = 0.025767 m, counter = 20 / 77 , time = 228.19 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '4A1', '{A1}+{D4}')  
update(86): ETA = 0.023732 m, counter = 21 / 77 , time = 228.19 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '4A1', '{A2}+{A3}')  
update(86): ETA = 0.028567 m, counter = 22 / 77 , time = 228.19 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '4A1', '{A5}')  
update(86): ETA = 0.028155 m, counter = 23 / 77 , time = 228.19 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '4A1', '{D5}')  
update(86): ETA = 0.025086 m, counter = 24 / 77 , time = 228.19 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '4A1', '2{A1}+2{A2}')  
update(86): ETA = 0.028621 m, counter = 25 / 77 , time = 228.19 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '4A1', '2{A1}+{A4}')  
update(86): ETA = 0.027928 m, counter = 26 / 77 , time = 228.20 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '4A1', '2{A1}+{D4}')  
update(86): ETA = 0.027731 m, counter = 27 / 77 , time = 228.20 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '4A1', '2{A3}')  
update(86): ETA = 0.027139 m, counter = 28 / 77 , time = 228.20 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '4A1', '2{A3}')  
update(86): ETA = 0.022522 m, counter = 29 / 77 , time = 228.20 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '4A1', '3{A1}+{A3}')  
update(86): ETA = 0.023392 m, counter = 30 / 77 , time = 228.20 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '4A1', '3{A2}')  
update(86): ETA = 0.019838 m, counter = 31 / 77 , time = 228.20 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '4A1', '4{A1}+{A2}')  
update(86): ETA = 0.017962 m, counter = 32 / 77 , time = 228.20 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '4A1', '6{A1}')  
update(86): ETA = 0.022476 m, counter = 33 / 77 , time = 228.20 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '4A1', '{A1}+{A2}+{A3}')  
update(86): ETA = 0.026354 m, counter = 34 / 77 , time = 228.20 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '4A1', '{A1}+{A5}')  
update(86): ETA = 0.025596 m, counter = 35 / 77 , time = 228.20 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '4A1', '{A1}+{A5}')  
update(86): ETA = 0.024750 m, counter = 36 / 77 , time = 228.20 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '4A1', '{A1}+{D5}')  
update(86): ETA = 0.022741 m, counter = 37 / 77 , time = 228.20 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '4A1', '{A2}+{A4}')  
update(86): ETA = 0.022340 m, counter = 38 / 77 , time = 228.20 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '4A1', '{A2}+{D4}')  
update(86): ETA = 0.026387 m, counter = 39 / 77 , time = 228.20 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '4A1', '{A6}')  
update(86): ETA = 0.025755 m, counter = 40 / 77 , time = 228.20 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '4A1', '{D6}')  
update(86): ETA = 0.025603 m, counter = 41 / 77 , time = 228.20 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '4A1', '{E6}')  
update(86): ETA = 0.021654 m, counter = 42 / 77 , time = 228.20 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '4A1', '2{A1}+{A2}+{A3}')  
update(86): ETA = 0.024380 m, counter = 43 / 77 , time = 228.20 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '4A1', '2{A1}+{A5}')  
update(86): ETA = 0.023654 m, counter = 44 / 77 , time = 228.21 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '4A1', '2{A1}+{D5}')  
update(86): ETA = 0.020727 m, counter = 45 / 77 , time = 228.21 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '4A1', '3{A1}+{D4}')  
update(86): ETA = 0.018223 m, counter = 46 / 77 , time = 228.21 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '4A1', '4{A1}+{A3}')  
update(86): ETA = 0.015465 m, counter = 47 / 77 , time = 228.21 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '4A1', '7{A1}')  
update(86): ETA = 0.019377 m, counter = 48 / 77 , time = 228.21 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '4A1', '{A1}+2{A3}')  
update(86): ETA = 0.017178 m, counter = 49 / 77 , time = 228.21 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '4A1', '{A1}+3{A2}')  
update(86): ETA = 0.018502 m, counter = 50 / 77 , time = 228.21 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '4A1', '{A1}+{A2}+{A4}')  
update(86): ETA = 0.020961 m, counter = 51 / 77 , time = 228.21 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '4A1', '{A1}+{A6}')  
update(86): ETA = 0.020221 m, counter = 52 / 77 , time = 228.21 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '4A1', '{A1}+{D6}')  
update(86): ETA = 0.019778 m, counter = 53 / 77 , time = 228.21 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '4A1', '{A1}+{E6}')  
update(86): ETA = 0.017417 m, counter = 54 / 77 , time = 228.21 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '4A1', '{A2}+{A5}')  
update(86): ETA = 0.016700 m, counter = 55 / 77 , time = 228.21 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '4A1', '{A2}+{D5}')  
update(86): ETA = 0.015379 m, counter = 56 / 77 , time = 228.21 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '4A1', '{A3}+{A4}')  
update(86): ETA = 0.014730 m, counter = 57 / 77 , time = 228.21 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '4A1', '{A3}+{D4}')  
update(86): ETA = 0.017360 m, counter = 58 / 77 , time = 228.22 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '4A1', '{A7}')  
update(86): ETA = 0.016264 m, counter = 59 / 77 , time = 228.22 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '4A1', '{A7}')  
update(86): ETA = 0.015329 m, counter = 60 / 77 , time = 228.22 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '4A1', '{D7}')  
update(86): ETA = 0.014610 m, counter = 61 / 77 , time = 228.22 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '4A1', '{E7}')  
update(86): ETA = 0.011913 m, counter = 62 / 77 , time = 228.22 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '4A1', '2{A1}+2{A3}')  
update(86): ETA = 0.013138 m, counter = 63 / 77 , time = 228.22 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '4A1', '2{A1}+{D6}')  
update(86): ETA = 0.011833 m, counter = 64 / 77 , time = 228.22 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '4A1', '2{A4}')  
update(86): ETA = 0.011004 m, counter = 65 / 77 , time = 228.22 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '4A1', '2{D4}')  
update(86): ETA = 0.0085291 m, counter = 66 / 77 , time = 228.22 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '4A1', '4{A1}+{D4}')  
update(86): ETA = 0.0077087 m, counter = 67 / 77 , time = 228.22 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '4A1', '4{A2}')  
update(86): ETA = 0.0057976 m, counter = 68 / 77 , time = 228.22 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '4A1', '8{A1}')  
update(86): ETA = 0.0070331 m, counter = 69 / 77 , time = 228.23 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '4A1', '{A1}+{A2}+{A5}')  
update(86): ETA = 0.0070761 m, counter = 70 / 77 , time = 228.23 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '4A1', '{A1}+{A7}')  
update(86): ETA = 0.0061008 m, counter = 71 / 77 , time = 228.23 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '4A1', '{A1}+{E7}')  
update(86): ETA = 0.0047705 m, counter = 72 / 77 , time = 228.23 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '4A1', '{A2}+{E6}')  
update(86): ETA = 0.0036795 m, counter = 73 / 77 , time = 228.23 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '4A1', '{A3}+{D5}')  
update(86): ETA = 0.0033626 m, counter = 74 / 77 , time = 228.23 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '4A1', '{A8}')  
update(86): ETA = 0.0022462 m, counter = 75 / 77 , time = 228.23 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '4A1', '{D8}')  
update(86): ETA = 0.0011354 m, counter = 76 / 77 , time = 228.23 m, info = get_cls seeking bases in s_lst and q_lst:  (9, '4A1', '{E8}')  
get_cls(1130): Setting Dynkin types of 881 items...please wait... 
update(86): ETA = 0.0010368 m, counter = 0 / 881 , time = 0.00010357 m, info = 9 4A1 A0  
update(86): ETA = 0.13398 m, counter = 88 / 881 , time = 0.014971 m, info = 9 4A1 4A1  
update(86): ETA = 0.15786 m, counter = 176 / 881 , time = 0.034676 m, info = 9 4A1 2A1+A2  
update(86): ETA = 0.13970 m, counter = 264 / 881 , time = 0.054602 m, info = 9 4A1 2A2  
update(86): ETA = 0.11903 m, counter = 352 / 881 , time = 0.074403 m, info = 9 4A1 2A2  
update(86): ETA = 0.14989 m, counter = 440 / 881 , time = 0.10431 m, info = 9 4A1 2A1+A4  
update(86): ETA = 0.13002 m, counter = 528 / 881 , time = 0.13673 m, info = 9 4A1 A2+A4  
update(86): ETA = 0.097593 m, counter = 616 / 881 , time = 0.16913 m, info = 9 4A1 3A2  
update(86): ETA = 0.067762 m, counter = 704 / 881 , time = 0.20282 m, info = 9 4A1 2A3  
update(86): ETA = 0.034254 m, counter = 792 / 881 , time = 0.23669 m, info = 9 4A1 2A1+A4  
update(86): ETA = 0.00052099 m, counter = 880 / 881 , time = 0.28254 m, info = 9 4A1 A8  
get_cls(1145): inv      = 4A1 , rank = 9 
get_cls(1146): bas1_lst = 1 [('A0', 1)] 
get_cls(1147): bas2_lst = 16 [('2A1', 6), ('3A1', 4), ('4A1', 1), ('A0', 1), ('A1', 4)] 
get_cls(1148): bas3_lst = 865 [('2A1', 24), ('2A1+A2', 96), ('2A1+A4', 96), ('2A2', 112), ('2A3', 80), ('2A4', 24), ('2D4', 8), ('3A2', 96), ('4A1', 60), ('4A2', 8), ('6A1', 48), ('8A1', 12), ('A0', 1), ('A2', 16), ('A2+A4', 96), ('A4', 48), ('A6', 32), ('A8', 8)] 
update(86): ETA = 5.4836e-6 m, counter = 0 / 13840 , time = 5.4836e-7 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', 'A0', 'A0')  
get_cls(1168): 	 appended:  (9, '4A1', 'A0') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A0', 'A0') 
get_cls(1168): 	 appended:  (9, '4A1', '2A1') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A0', '2A1') 
get_cls(1168): 	 appended:  (9, '4A1', '[A2]') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A0', 'A2') 
get_cls(1168): 	 appended:  (9, '4A1', '2A1+[A2]') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A0', '2A1+A2') 
get_cls(1168): 	 appended:  (9, '4A1', '2[A2]') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A0', '2A2') 
get_cls(1168): 	 appended:  (9, '4A1', '2A2') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A0', '2A2') 
get_cls(1168): 	 appended:  (9, '4A1', '4A1') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A0', '4A1') 
get_cls(1168): 	 appended:  (9, '4A1', '4A1') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A0', '4A1') 
get_cls(1168): 	 appended:  (9, '4A1', '[A4]') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A0', 'A4') 
get_cls(1168): 	 appended:  (9, '4A1', '2A1+[A4]') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A0', '2A1+A4') 
get_cls(1168): 	 appended:  (9, '4A1', '2A3') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A0', '2A3') 
get_cls(1168): 	 appended:  (9, '4A1', '2A3') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A0', '2A3') 
get_cls(1168): 	 appended:  (9, '4A1', '3[A2]') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A0', '3A2') 
get_cls(1168): 	 appended:  (9, '4A1', '[A2]+2A2') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A0', '3A2') 
get_cls(1168): 	 appended:  (9, '4A1', '6A1') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A0', '6A1') 
get_cls(1168): 	 appended:  (9, '4A1', '[A2]+[A4]') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A0', 'A2+A4') 
get_cls(1168): 	 appended:  (9, '4A1', '[A6]') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A0', 'A6') 
get_cls(1168): 	 appended:  (9, '4A1', '2[A4]') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A0', '2A4') 
get_cls(1168): 	 appended:  (9, '4A1', '2D4') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A0', '2D4') 
get_cls(1168): 	 appended:  (9, '4A1', '4[A2]') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A0', '4A2') 
get_cls(1168): 	 appended:  (9, '4A1', '8A1') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A0', '8A1') 
get_cls(1168): 	 appended:  (9, '4A1', '[A8]') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A0', 'A8') 
get_cls(1168): 	 appended:  (9, '4A1', '{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A1', 'A0') 
get_cls(1168): 	 appended:  (9, '4A1', '2A1+{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A1', '2A1') 
get_cls(1168): 	 appended:  (9, '4A1', '[A3]') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A1', '2A1') 
get_cls(1168): 	 appended:  (9, '4A1', '{A1}+[A2]') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A1', 'A2') 
get_cls(1168): 	 appended:  (9, '4A1', '2A1+{A1}+[A2]') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A1', '2A1+A2') 
get_cls(1168): 	 appended:  (9, '4A1', '[A2]+[A3]') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A1', '2A1+A2') 
get_cls(1168): 	 appended:  (9, '4A1', '{A1}+2[A2]') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A1', '2A2') 
get_cls(1168): 	 appended:  (9, '4A1', '{A1}+2A2') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A1', '2A2') 
get_cls(1168): 	 appended:  (9, '4A1', '[A5]') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A1', '2A2') 
get_cls(1168): 	 appended:  (9, '4A1', '4A1+{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A1', '4A1') 
get_cls(1168): 	 appended:  (9, '4A1', '2A1+[A3]') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A1', '4A1') 
get_cls(1168): 	 appended:  (9, '4A1', '{A1}+[A4]') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A1', 'A4') 
get_cls(1168): 	 appended:  (9, '4A1', '[A3]+[A4]') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A1', '2A1+A4') 
get_cls(1168): 	 appended:  (9, '4A1', '{A1}+2A3') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A1', '2A3') 
get_cls(1168): 	 appended:  (9, '4A1', '[A7]') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A1', '2A3') 
update(86): ETA = 788.34 m, counter = 1384 / 13840 , time = 87.594 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', 'A1', '2A3')  
get_cls(1168): 	 appended:  (9, '4A1', '{A1}+3[A2]') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A1', '3A2') 
get_cls(1168): 	 appended:  (9, '4A1', '[A2]+[A5]') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A1', '3A2') 
get_cls(1168): 	 appended:  (9, '4A1', '4A1+[A3]') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A1', '6A1') 
get_cls(1168): 	 appended:  (9, '4A1', '{A1}+[A2]+[A4]') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A1', 'A2+A4') 
get_cls(1168): 	 appended:  (9, '4A1', '{A1}+[A6]') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A1', 'A6') 
update(86): ETA = 239.48 m, counter = 2768 / 13840 , time = 117.53 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', 'A1', '2A2')  
update(86): ETA = 131.98 m, counter = 4152 / 13840 , time = 136.38 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', 'A1', 'A2+A4')  
get_cls(1168): 	 appended:  (9, '4A1', '2{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A0', '2A1', 'A0') 
get_cls(1168): 	 appended:  (9, '4A1', '2A1+2{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A0', '2A1', '2A1') 
get_cls(1168): 	 appended:  (9, '4A1', '{A1}+[A3]') , ( bas1.type, bas2.type, bas3.type ) = ('A0', '2A1', '2A1') 
get_cls(1168): 	 appended:  (9, '4A1', '2{A1}+[A2]') , ( bas1.type, bas2.type, bas3.type ) = ('A0', '2A1', 'A2') 
get_cls(1168): 	 appended:  (9, '4A1', '{A1}+[A2]+[A3]') , ( bas1.type, bas2.type, bas3.type ) = ('A0', '2A1', '2A1+A2') 
get_cls(1168): 	 appended:  (9, '4A1', '2{A1}+2[A2]') , ( bas1.type, bas2.type, bas3.type ) = ('A0', '2A1', '2A2') 
get_cls(1168): 	 appended:  (9, '4A1', '{A1}+[A5]') , ( bas1.type, bas2.type, bas3.type ) = ('A0', '2A1', '2A2') 
get_cls(1168): 	 appended:  (9, '4A1', '4A1+2{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A0', '2A1', '4A1') 
get_cls(1168): 	 appended:  (9, '4A1', '2[A3]') , ( bas1.type, bas2.type, bas3.type ) = ('A0', '2A1', '4A1') 
get_cls(1168): 	 appended:  (9, '4A1', '2{A1}+[A4]') , ( bas1.type, bas2.type, bas3.type ) = ('A0', '2A1', 'A4') 
update(86): ETA = 64.695 m, counter = 5536 / 13840 , time = 147.17 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', '2A1', 'A4')  
update(86): ETA = 18.641 m, counter = 6920 / 13840 , time = 150.89 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', '2A1', 'A0')  
update(86): ETA = 26.309 m, counter = 8304 / 13840 , time = 157.47 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', '2A1', '2A3')  
get_cls(1168): 	 appended:  (9, '4A1', '3{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A0', '3A1', 'A0') 
get_cls(1168): 	 appended:  (9, '4A1', '2{A1}+[A3]') , ( bas1.type, bas2.type, bas3.type ) = ('A0', '3A1', '2A1') 
get_cls(1168): 	 appended:  (9, '4A1', '3{A1}+[A2]') , ( bas1.type, bas2.type, bas3.type ) = ('A0', '3A1', 'A2') 
update(86): ETA = 10.758 m, counter = 9688 / 13840 , time = 161.06 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', '3A1', '2A2')  
update(86): ETA = 1.5798 m, counter = 11072 / 13840 , time = 161.85 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', '3A1', 'A2+A4')  
update(86): ETA = 1.1454 m, counter = 12456 / 13840 , time = 162.99 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', '3A1', 'A4')  
get_cls(1168): 	 appended:  (9, '4A1', '4{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A0', '4A1', 'A0') 
get_cls(1070): looping through inv_lst: (9, 'D4', [e2-e3, e3-e4, e4-e5, e0-e1-e2-e3]) 
get_part_roots(875): r_lst      = 120 [e1-e2, e2-e3, e1-e3, e3-e4, e2-e4, e1-e4, e4-e5, e3-e5, e2-e5, e1-e5, e5-e6, e4-e6, e3-e6, e2-e6, e1-e6, e6-e7, e5-e7, e4-e7, e3-e7, e2-e7, e1-e7, e7-e8, e6-e8, e5-e8, e4-e8, e3-e8, e2-e8, e1-e8, e0-e1-e2-e3, e0-e1-e2-e4, e0-e1-e3-e4, e0-e2-e3-e4, e0-e1-e2-e5, e0-e1-e3-e5, e0-e2-e3-e5, e0-e1-e4-e5, e0-e2-e4-e5, e0-e3-e4-e5, e0-e1-e2-e6, e0-e1-e3-e6, e0-e2-e3-e6, e0-e1-e4-e6, e0-e2-e4-e6, e0-e3-e4-e6, e0-e1-e5-e6, e0-e2-e5-e6, e0-e3-e5-e6, e0-e4-e5-e6, e0-e1-e2-e7, e0-e1-e3-e7, e0-e2-e3-e7, e0-e1-e4-e7, e0-e2-e4-e7, e0-e3-e4-e7, e0-e1-e5-e7, e0-e2-e5-e7, e0-e3-e5-e7, e0-e4-e5-e7, e0-e1-e6-e7, e0-e2-e6-e7, e0-e3-e6-e7, e0-e4-e6-e7, e0-e5-e6-e7, e0-e1-e2-e8, e0-e1-e3-e8, e0-e2-e3-e8, e0-e1-e4-e8, e0-e2-e4-e8, e0-e3-e4-e8, e0-e1-e5-e8, e0-e2-e5-e8, e0-e3-e5-e8, e0-e4-e5-e8, e0-e1-e6-e8, e0-e2-e6-e8, e0-e3-e6-e8, e0-e4-e6-e8, e0-e5-e6-e8, e0-e1-e7-e8, e0-e2-e7-e8, e0-e3-e7-e8, e0-e4-e7-e8, e0-e5-e7-e8, e0-e6-e7-e8, 2e0-e1-e2-e3-e4-e5-e6, 2e0-e1-e2-e3-e4-e5-e7, 2e0-e1-e2-e3-e4-e6-e7, 2e0-e1-e2-e3-e5-e6-e7, 2e0-e1-e2-e4-e5-e6-e7, 2e0-e1-e3-e4-e5-e6-e7, 2e0-e2-e3-e4-e5-e6-e7, 2e0-e1-e2-e3-e4-e5-e8, 2e0-e1-e2-e3-e4-e6-e8, 2e0-e1-e2-e3-e5-e6-e8, 2e0-e1-e2-e4-e5-e6-e8, 2e0-e1-e3-e4-e5-e6-e8, 2e0-e2-e3-e4-e5-e6-e8, 2e0-e1-e2-e3-e4-e7-e8, 2e0-e1-e2-e3-e5-e7-e8, 2e0-e1-e2-e4-e5-e7-e8, 2e0-e1-e3-e4-e5-e7-e8, 2e0-e2-e3-e4-e5-e7-e8, 2e0-e1-e2-e3-e6-e7-e8, 2e0-e1-e2-e4-e6-e7-e8, 2e0-e1-e3-e4-e6-e7-e8, 2e0-e2-e3-e4-e6-e7-e8, 2e0-e1-e2-e5-e6-e7-e8, 2e0-e1-e3-e5-e6-e7-e8, 2e0-e2-e3-e5-e6-e7-e8, 2e0-e1-e4-e5-e6-e7-e8, 2e0-e2-e4-e5-e6-e7-e8, 2e0-e3-e4-e5-e6-e7-e8, 3e0-2e1-e2-e3-e4-e5-e6-e7-e8, 3e0-e1-2e2-e3-e4-e5-e6-e7-e8, 3e0-e1-e2-2e3-e4-e5-e6-e7-e8, 3e0-e1-e2-e3-2e4-e5-e6-e7-e8, 3e0-e1-e2-e3-e4-2e5-e6-e7-e8, 3e0-e1-e2-e3-e4-e5-2e6-e7-e8, 3e0-e1-e2-e3-e4-e5-e6-2e7-e8, 3e0-e1-e2-e3-e4-e5-e6-e7-2e8] 
get_part_roots(876): s_lst      = 12 [e6-e7, e7-e8, e6-e8, e0-e1-e6-e7, e0-e1-e6-e8, e0-e1-e7-e8, 2e0-e2-e3-e4-e5-e6-e7, 2e0-e2-e3-e4-e5-e6-e8, 2e0-e2-e3-e4-e5-e7-e8, 3e0-e1-e2-e3-e4-e5-2e6-e7-e8, 3e0-e1-e2-e3-e4-e5-e6-2e7-e8, 3e0-e1-e2-e3-e4-e5-e6-e7-2e8] 
get_part_roots(877): tq1_lst    = 96 [e1-e2, e1-e3, e1-e4, e1-e5, e5-e6, e4-e6, e3-e6, e2-e6, e1-e6, e5-e7, e4-e7, e3-e7, e2-e7, e1-e7, e5-e8, e4-e8, e3-e8, e2-e8, e1-e8, e0-e2-e3-e4, e0-e2-e3-e5, e0-e2-e4-e5, e0-e3-e4-e5, e0-e1-e2-e6, e0-e1-e3-e6, e0-e2-e3-e6, e0-e1-e4-e6, e0-e2-e4-e6, e0-e3-e4-e6, e0-e1-e5-e6, e0-e2-e5-e6, e0-e3-e5-e6, e0-e4-e5-e6, e0-e1-e2-e7, e0-e1-e3-e7, e0-e2-e3-e7, e0-e1-e4-e7, e0-e2-e4-e7, e0-e3-e4-e7, e0-e1-e5-e7, e0-e2-e5-e7, e0-e3-e5-e7, e0-e4-e5-e7, e0-e2-e6-e7, e0-e3-e6-e7, e0-e4-e6-e7, e0-e5-e6-e7, e0-e1-e2-e8, e0-e1-e3-e8, e0-e2-e3-e8, e0-e1-e4-e8, e0-e2-e4-e8, e0-e3-e4-e8, e0-e1-e5-e8, e0-e2-e5-e8, e0-e3-e5-e8, e0-e4-e5-e8, e0-e2-e6-e8, e0-e3-e6-e8, e0-e4-e6-e8, e0-e5-e6-e8, e0-e2-e7-e8, e0-e3-e7-e8, e0-e4-e7-e8, e0-e5-e7-e8, e0-e6-e7-e8, 2e0-e1-e2-e3-e4-e5-e6, 2e0-e1-e2-e3-e4-e5-e7, 2e0-e1-e2-e3-e4-e6-e7, 2e0-e1-e2-e3-e5-e6-e7, 2e0-e1-e2-e4-e5-e6-e7, 2e0-e1-e3-e4-e5-e6-e7, 2e0-e1-e2-e3-e4-e5-e8, 2e0-e1-e2-e3-e4-e6-e8, 2e0-e1-e2-e3-e5-e6-e8, 2e0-e1-e2-e4-e5-e6-e8, 2e0-e1-e3-e4-e5-e6-e8, 2e0-e1-e2-e3-e4-e7-e8, 2e0-e1-e2-e3-e5-e7-e8, 2e0-e1-e2-e4-e5-e7-e8, 2e0-e1-e3-e4-e5-e7-e8, 2e0-e1-e2-e3-e6-e7-e8, 2e0-e1-e2-e4-e6-e7-e8, 2e0-e1-e3-e4-e6-e7-e8, 2e0-e2-e3-e4-e6-e7-e8, 2e0-e1-e2-e5-e6-e7-e8, 2e0-e1-e3-e5-e6-e7-e8, 2e0-e2-e3-e5-e6-e7-e8, 2e0-e1-e4-e5-e6-e7-e8, 2e0-e2-e4-e5-e6-e7-e8, 2e0-e3-e4-e5-e6-e7-e8, 3e0-2e1-e2-e3-e4-e5-e6-e7-e8, 3e0-e1-2e2-e3-e4-e5-e6-e7-e8, 3e0-e1-e2-2e3-e4-e5-e6-e7-e8, 3e0-e1-e2-e3-2e4-e5-e6-e7-e8, 3e0-e1-e2-e3-e4-2e5-e6-e7-e8] 
get_part_roots(878): tq_lst     = 96 [e1-e2, e1-e3, e1-e4, e1-e5, e5-e6, e4-e6, e3-e6, e2-e6, e1-e6, e5-e7, e4-e7, e3-e7, e2-e7, e1-e7, e5-e8, e4-e8, e3-e8, e2-e8, e1-e8, e0-e2-e3-e4, e0-e2-e3-e5, e0-e2-e4-e5, e0-e3-e4-e5, e0-e1-e2-e6, e0-e1-e3-e6, e0-e2-e3-e6, e0-e1-e4-e6, e0-e2-e4-e6, e0-e3-e4-e6, e0-e1-e5-e6, e0-e2-e5-e6, e0-e3-e5-e6, e0-e4-e5-e6, e0-e1-e2-e7, e0-e1-e3-e7, e0-e2-e3-e7, e0-e1-e4-e7, e0-e2-e4-e7, e0-e3-e4-e7, e0-e1-e5-e7, e0-e2-e5-e7, e0-e3-e5-e7, e0-e4-e5-e7, e0-e2-e6-e7, e0-e3-e6-e7, e0-e4-e6-e7, e0-e5-e6-e7, e0-e1-e2-e8, e0-e1-e3-e8, e0-e2-e3-e8, e0-e1-e4-e8, e0-e2-e4-e8, e0-e3-e4-e8, e0-e1-e5-e8, e0-e2-e5-e8, e0-e3-e5-e8, e0-e4-e5-e8, e0-e2-e6-e8, e0-e3-e6-e8, e0-e4-e6-e8, e0-e5-e6-e8, e0-e2-e7-e8, e0-e3-e7-e8, e0-e4-e7-e8, e0-e5-e7-e8, e0-e6-e7-e8, 2e0-e1-e2-e3-e4-e5-e6, 2e0-e1-e2-e3-e4-e5-e7, 2e0-e1-e2-e3-e4-e6-e7, 2e0-e1-e2-e3-e5-e6-e7, 2e0-e1-e2-e4-e5-e6-e7, 2e0-e1-e3-e4-e5-e6-e7, 2e0-e1-e2-e3-e4-e5-e8, 2e0-e1-e2-e3-e4-e6-e8, 2e0-e1-e2-e3-e5-e6-e8, 2e0-e1-e2-e4-e5-e6-e8, 2e0-e1-e3-e4-e5-e6-e8, 2e0-e1-e2-e3-e4-e7-e8, 2e0-e1-e2-e3-e5-e7-e8, 2e0-e1-e2-e4-e5-e7-e8, 2e0-e1-e3-e4-e5-e7-e8, 2e0-e1-e2-e3-e6-e7-e8, 2e0-e1-e2-e4-e6-e7-e8, 2e0-e1-e3-e4-e6-e7-e8, 2e0-e2-e3-e4-e6-e7-e8, 2e0-e1-e2-e5-e6-e7-e8, 2e0-e1-e3-e5-e6-e7-e8, 2e0-e2-e3-e5-e6-e7-e8, 2e0-e1-e4-e5-e6-e7-e8, 2e0-e2-e4-e5-e6-e7-e8, 2e0-e3-e4-e5-e6-e7-e8, 3e0-2e1-e2-e3-e4-e5-e6-e7-e8, 3e0-e1-2e2-e3-e4-e5-e6-e7-e8, 3e0-e1-e2-2e3-e4-e5-e6-e7-e8, 3e0-e1-e2-e3-2e4-e5-e6-e7-e8, 3e0-e1-e2-e3-e4-2e5-e6-e7-e8] 
get_part_roots(879): q_lst      = 48 [e1-e2, e1-e3, e1-e4, e1-e5, e5-e6, e4-e6, e3-e6, e2-e6, e1-e6, e5-e7, e4-e7, e3-e7, e2-e7, e1-e7, e5-e8, e4-e8, e3-e8, e2-e8, e1-e8, e0-e2-e3-e6, e0-e2-e4-e6, e0-e3-e4-e6, e0-e2-e3-e7, e0-e2-e4-e7, e0-e3-e4-e7, e0-e2-e6-e7, e0-e3-e6-e7, e0-e4-e6-e7, e0-e5-e6-e7, e0-e2-e3-e8, e0-e2-e4-e8, e0-e3-e4-e8, e0-e2-e6-e8, e0-e3-e6-e8, e0-e4-e6-e8, e0-e5-e6-e8, e0-e2-e7-e8, e0-e3-e7-e8, e0-e4-e7-e8, e0-e5-e7-e8, e0-e6-e7-e8, 2e0-e1-e2-e3-e6-e7-e8, 2e0-e1-e2-e4-e6-e7-e8, 2e0-e1-e3-e4-e6-e7-e8, 2e0-e2-e3-e4-e6-e7-e8, 2e0-e2-e3-e5-e6-e7-e8, 2e0-e2-e4-e5-e6-e7-e8, 2e0-e3-e4-e5-e6-e7-e8] 
get_part_roots(880):        M --> 48 [e0-e3-e4-e5, e0-e2-e4-e5, e0-e2-e3-e5, e0-e2-e3-e4, e0-e1-e5-e6, e0-e1-e4-e6, e0-e1-e3-e6, e0-e1-e2-e6, 2e0-e1-e2-e3-e4-e5-e6, e0-e1-e5-e7, e0-e1-e4-e7, e0-e1-e3-e7, e0-e1-e2-e7, 2e0-e1-e2-e3-e4-e5-e7, e0-e1-e5-e8, e0-e1-e4-e8, e0-e1-e3-e8, e0-e1-e2-e8, 2e0-e1-e2-e3-e4-e5-e8, e0-e4-e5-e6, e0-e3-e5-e6, e0-e2-e5-e6, e0-e4-e5-e7, e0-e3-e5-e7, e0-e2-e5-e7, 2e0-e1-e3-e4-e5-e6-e7, 2e0-e1-e2-e4-e5-e6-e7, 2e0-e1-e2-e3-e5-e6-e7, 2e0-e1-e2-e3-e4-e6-e7, e0-e4-e5-e8, e0-e3-e5-e8, e0-e2-e5-e8, 2e0-e1-e3-e4-e5-e6-e8, 2e0-e1-e2-e4-e5-e6-e8, 2e0-e1-e2-e3-e5-e6-e8, 2e0-e1-e2-e3-e4-e6-e8, 2e0-e1-e3-e4-e5-e7-e8, 2e0-e1-e2-e4-e5-e7-e8, 2e0-e1-e2-e3-e5-e7-e8, 2e0-e1-e2-e3-e4-e7-e8, 3e0-2e1-e2-e3-e4-e5-e6-e7-e8, 2e0-e1-e4-e5-e6-e7-e8, 2e0-e1-e3-e5-e6-e7-e8, 2e0-e1-e2-e5-e6-e7-e8, 3e0-e1-e2-e3-e4-2e5-e6-e7-e8, 3e0-e1-e2-e3-2e4-e5-e6-e7-e8, 3e0-e1-e2-2e3-e4-e5-e6-e7-e8, 3e0-e1-2e2-e3-e4-e5-e6-e7-e8] 
get_part_roots(881): inv.Md_lst = D4 [e2-e3, e3-e4, e4-e5, e0-e1-e2-e3] , rank = 9 
import_cls(1015): importing:  (9, 'D4', 'A0') [e2-e3, e3-e4, e4-e5, e0-e1-e2-e3] == [e2-e3, e3-e4, e4-e5, e0-e1-e2-e3] 
import_cls(1015): importing:  (9, 'D4', '{A1}') [e2-e3, e3-e4, e4-e5, e0-e1-e2-e3] == [e2-e3, e3-e4, e4-e5, e0-e1-e2-e3] 
import_cls(1015): importing:  (9, 'D4', '2A1') [e2-e3, e3-e4, e4-e5, e0-e1-e2-e3] == [e2-e3, e3-e4, e4-e5, e0-e1-e2-e3] 
import_cls(1015): importing:  (9, 'D4', '2{A1}') [e2-e3, e3-e4, e4-e5, e0-e1-e2-e3] == [e2-e3, e3-e4, e4-e5, e0-e1-e2-e3] 
import_cls(1015): importing:  (9, 'D4', '2A1+{A1}') [e2-e3, e3-e4, e4-e5, e0-e1-e2-e3] == [e2-e3, e3-e4, e4-e5, e0-e1-e2-e3] 
import_cls(1015): importing:  (9, 'D4', '3{A1}') [e2-e3, e3-e4, e4-e5, e0-e1-e2-e3] == [e2-e3, e3-e4, e4-e5, e0-e1-e2-e3] 
import_cls(1015): importing:  (9, 'D4', '[A3]') [e2-e3, e3-e4, e4-e5, e0-e1-e2-e3] == [e2-e3, e3-e4, e4-e5, e0-e1-e2-e3] 
import_cls(1015): importing:  (9, 'D4', '2A2') [e2-e3, e3-e4, e4-e5, e0-e1-e2-e3] == [e2-e3, e3-e4, e4-e5, e0-e1-e2-e3] 
import_cls(1015): importing:  (9, 'D4', '4A1') [e2-e3, e3-e4, e4-e5, e0-e1-e2-e3] == [e2-e3, e3-e4, e4-e5, e0-e1-e2-e3] 
import_cls(1015): importing:  (9, 'D4', '{A1}+[A3]') [e2-e3, e3-e4, e4-e5, e0-e1-e2-e3] == [e2-e3, e3-e4, e4-e5, e0-e1-e2-e3] 
import_cls(1015): importing:  (9, 'D4', '4A1+{A1}') [e2-e3, e3-e4, e4-e5, e0-e1-e2-e3] == [e2-e3, e3-e4, e4-e5, e0-e1-e2-e3] 
import_cls(1015): importing:  (9, 'D4', '[A5]') [e2-e3, e3-e4, e4-e5, e0-e1-e2-e3] == [e2-e3, e3-e4, e4-e5, e0-e1-e2-e3] 
import_cls(1015): importing:  (9, 'D4', '2A3') [e2-e3, e3-e4, e4-e5, e0-e1-e2-e3] == [e2-e3, e3-e4, e4-e5, e0-e1-e2-e3] 
get_cls(1086): looping through inv_lst continued after recursive call: (9, 'D4', [e2-e3, e3-e4, e4-e5, e0-e1-e2-e3]) 
get_cls(1094): bas1_lst = 13 [('D4', 'A0'), ('D4', 'A1'), ('D4', '2A1'), ('D4', '2A1'), ('D4', '3A1'), ('D4', '3A1'), ('D4', 'A3'), ('D4', '2A2'), ('D4', '4A1'), ('D4', 'A1+A3'), ('D4', '5A1'), ('D4', 'A5'), ('D4', '2A3')] 
get_cls(1095): s_lst    = 9 [e7-e8, e6-e8, e0-e1-e6-e8, e0-e1-e7-e8, 2e0-e2-e3-e4-e5-e6-e8, 2e0-e2-e3-e4-e5-e7-e8, 3e0-e1-e2-e3-e4-e5-2e6-e7-e8, 3e0-e1-e2-e3-e4-e5-e6-2e7-e8, 3e0-e1-e2-e3-e4-e5-e6-e7-2e8] 
get_cls(1096): q_lst    = 24 [e5-e8, e4-e8, e3-e8, e2-e8, e1-e8, e0-e2-e3-e8, e0-e2-e4-e8, e0-e3-e4-e8, e0-e2-e6-e8, e0-e3-e6-e8, e0-e4-e6-e8, e0-e5-e6-e8, e0-e2-e7-e8, e0-e3-e7-e8, e0-e4-e7-e8, e0-e5-e7-e8, e0-e6-e7-e8, 2e0-e1-e2-e3-e6-e7-e8, 2e0-e1-e2-e4-e6-e7-e8, 2e0-e1-e3-e4-e6-e7-e8, 2e0-e2-e3-e4-e6-e7-e8, 2e0-e2-e3-e5-e6-e7-e8, 2e0-e2-e4-e5-e6-e7-e8, 2e0-e3-e4-e5-e6-e7-e8] 
update(86): ETA = 0.00073525 m, counter = 0 / 77 , time = 9.5487e-6 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D4', 'A0')  
update(86): ETA = 0.082655 m, counter = 1 / 77 , time = 0.0010971 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D4', '{A1}')  
update(86): ETA = 0.31689 m, counter = 2 / 77 , time = 0.0053223 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D4', '2{A1}')  
update(86): ETA = 9.9416 m, counter = 3 / 77 , time = 0.13967 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D4', '{A2}')  
update(86): ETA = 0.41590 m, counter = 4 / 77 , time = 0.14536 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D4', '3{A1}')  
update(86): ETA = 14.433 m, counter = 5 / 77 , time = 0.34582 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D4', '{A1}+{A2}')  
update(86): ETA = 0.27974 m, counter = 6 / 77 , time = 0.34976 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D4', '{A3}')  
update(86): ETA = 0.44779 m, counter = 7 / 77 , time = 0.35616 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D4', '2{A1}+{A2}')  
update(86): ETA = 0.26910 m, counter = 8 / 77 , time = 0.36006 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D4', '2{A2}')  
update(86): ETA = 0.26000 m, counter = 9 / 77 , time = 0.36388 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D4', '4{A1}')  
update(86): ETA = 13.943 m, counter = 10 / 77 , time = 0.57199 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D4', '4{A1}')  
update(86): ETA = 0.019218 m, counter = 11 / 77 , time = 0.57228 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D4', '{A1}+{A3}')  
update(86): ETA = 0.25700 m, counter = 12 / 77 , time = 0.57624 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D4', '{A4}')  
update(86): ETA = 0.25465 m, counter = 13 / 77 , time = 0.58022 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D4', '{D4}')  
update(86): ETA = 0.41075 m, counter = 14 / 77 , time = 0.58674 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D4', '2{A1}+{A3}')  
update(86): ETA = 0.023379 m, counter = 15 / 77 , time = 0.58711 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D4', '2{A1}+{A3}')  
update(86): ETA = 0.019878 m, counter = 16 / 77 , time = 0.58744 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D4', '3{A1}+{A2}')  
update(86): ETA = 0.018049 m, counter = 17 / 77 , time = 0.58774 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D4', '5{A1}')  
update(86): ETA = 0.021580 m, counter = 18 / 77 , time = 0.58811 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D4', '{A1}+2{A2}')  
update(86): ETA = 0.025211 m, counter = 19 / 77 , time = 0.58854 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D4', '{A1}+{A4}')  
update(86): ETA = 0.024832 m, counter = 20 / 77 , time = 0.58898 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D4', '{A1}+{D4}')  
update(86): ETA = 0.023486 m, counter = 21 / 77 , time = 0.58939 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D4', '{A2}+{A3}')  
update(86): ETA = 0.027616 m, counter = 22 / 77 , time = 0.58990 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D4', '{A5}')  
update(86): ETA = 0.027285 m, counter = 23 / 77 , time = 0.59040 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D4', '{D5}')  
update(86): ETA = 0.024262 m, counter = 24 / 77 , time = 0.59086 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D4', '2{A1}+2{A2}')  
update(86): ETA = 0.027305 m, counter = 25 / 77 , time = 0.59138 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D4', '2{A1}+{A4}')  
update(86): ETA = 0.026954 m, counter = 26 / 77 , time = 0.59191 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D4', '2{A1}+{D4}')  
update(86): ETA = 0.027323 m, counter = 27 / 77 , time = 0.59246 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D4', '2{A3}')  
update(86): ETA = 0.026744 m, counter = 28 / 77 , time = 0.59301 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D4', '2{A3}')  
update(86): ETA = 0.022704 m, counter = 29 / 77 , time = 0.59348 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D4', '3{A1}+{A3}')  
update(86): ETA = 0.023105 m, counter = 30 / 77 , time = 0.59397 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D4', '3{A2}')  
update(86): ETA = 0.019509 m, counter = 31 / 77 , time = 0.59439 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D4', '4{A1}+{A2}')  
update(86): ETA = 0.017693 m, counter = 32 / 77 , time = 0.59479 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D4', '6{A1}')  
update(86): ETA = 0.022076 m, counter = 33 / 77 , time = 0.59529 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D4', '{A1}+{A2}+{A3}')  
update(86): ETA = 0.025480 m, counter = 34 / 77 , time = 0.59588 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D4', '{A1}+{A5}')  
update(86): ETA = 0.024905 m, counter = 35 / 77 , time = 0.59648 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D4', '{A1}+{A5}')  
update(86): ETA = 0.024235 m, counter = 36 / 77 , time = 0.59707 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D4', '{A1}+{D5}')  
update(86): ETA = 0.022740 m, counter = 37 / 77 , time = 0.59764 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D4', '{A2}+{A4}')  
update(86): ETA = 0.021857 m, counter = 38 / 77 , time = 0.59820 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D4', '{A2}+{D4}')  
update(86): ETA = 0.025496 m, counter = 39 / 77 , time = 0.59887 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D4', '{A6}')  
update(86): ETA = 0.024937 m, counter = 40 / 77 , time = 0.59954 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D4', '{D6}')  
update(86): ETA = 0.024470 m, counter = 41 / 77 , time = 0.60022 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D4', '{E6}')  
update(86): ETA = 0.021169 m, counter = 42 / 77 , time = 0.60082 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D4', '2{A1}+{A2}+{A3}')  
update(86): ETA = 0.023654 m, counter = 43 / 77 , time = 0.60152 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D4', '2{A1}+{A5}')  
update(86): ETA = 0.023458 m, counter = 44 / 77 , time = 0.60223 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D4', '2{A1}+{D5}')  
update(86): ETA = 0.020205 m, counter = 45 / 77 , time = 0.60286 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D4', '3{A1}+{D4}')  
update(86): ETA = 0.017772 m, counter = 46 / 77 , time = 0.60344 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D4', '4{A1}+{A3}')  
update(86): ETA = 0.014893 m, counter = 47 / 77 , time = 0.60393 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D4', '7{A1}')  
update(86): ETA = 0.018828 m, counter = 48 / 77 , time = 0.60458 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D4', '{A1}+2{A3}')  
update(86): ETA = 0.016662 m, counter = 49 / 77 , time = 0.60518 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D4', '{A1}+3{A2}')  
update(86): ETA = 0.018343 m, counter = 50 / 77 , time = 0.60586 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D4', '{A1}+{A2}+{A4}')  
update(86): ETA = 0.020239 m, counter = 51 / 77 , time = 0.60663 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D4', '{A1}+{A6}')  
update(86): ETA = 0.019505 m, counter = 52 / 77 , time = 0.60741 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D4', '{A1}+{D6}')  
update(86): ETA = 0.018913 m, counter = 53 / 77 , time = 0.60820 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D4', '{A1}+{E6}')  
update(86): ETA = 0.016741 m, counter = 54 / 77 , time = 0.60893 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D4', '{A2}+{A5}')  
update(86): ETA = 0.016077 m, counter = 55 / 77 , time = 0.60966 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D4', '{A2}+{D5}')  
update(86): ETA = 0.014977 m, counter = 56 / 77 , time = 0.61037 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D4', '{A3}+{A4}')  
update(86): ETA = 0.014156 m, counter = 57 / 77 , time = 0.61108 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D4', '{A3}+{D4}')  
update(86): ETA = 0.016570 m, counter = 58 / 77 , time = 0.61195 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D4', '{A7}')  
update(86): ETA = 0.015701 m, counter = 59 / 77 , time = 0.61283 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D4', '{A7}')  
update(86): ETA = 0.014679 m, counter = 60 / 77 , time = 0.61369 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D4', '{D7}')  
update(86): ETA = 0.014155 m, counter = 61 / 77 , time = 0.61458 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D4', '{E7}')  
update(86): ETA = 0.011471 m, counter = 62 / 77 , time = 0.61534 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D4', '2{A1}+2{A3}')  
update(86): ETA = 0.012548 m, counter = 63 / 77 , time = 0.61624 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D4', '2{A1}+{D6}')  
update(86): ETA = 0.011411 m, counter = 64 / 77 , time = 0.61711 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D4', '2{A4}')  
update(86): ETA = 0.010647 m, counter = 65 / 77 , time = 0.61800 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D4', '2{D4}')  
update(86): ETA = 0.0083477 m, counter = 66 / 77 , time = 0.61876 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D4', '4{A1}+{D4}')  
update(86): ETA = 0.0074282 m, counter = 67 / 77 , time = 0.61950 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D4', '4{A2}')  
update(86): ETA = 0.0055110 m, counter = 68 / 77 , time = 0.62012 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D4', '8{A1}')  
update(86): ETA = 0.0067759 m, counter = 69 / 77 , time = 0.62096 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D4', '{A1}+{A2}+{A5}')  
update(86): ETA = 0.0069193 m, counter = 70 / 77 , time = 0.62195 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D4', '{A1}+{A7}')  
update(86): ETA = 0.0060266 m, counter = 71 / 77 , time = 0.62296 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D4', '{A1}+{E7}')  
update(86): ETA = 0.0046564 m, counter = 72 / 77 , time = 0.62389 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D4', '{A2}+{E6}')  
update(86): ETA = 0.0035638 m, counter = 73 / 77 , time = 0.62478 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D4', '{A3}+{D5}')  
update(86): ETA = 0.0032761 m, counter = 74 / 77 , time = 0.62587 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D4', '{A8}')  
update(86): ETA = 0.0022086 m, counter = 75 / 77 , time = 0.62697 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D4', '{D8}')  
update(86): ETA = 0.0010945 m, counter = 76 / 77 , time = 0.62807 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D4', '{E8}')  
get_cls(1130): Setting Dynkin types of 97 items...please wait... 
update(86): ETA = 0.0015188 m, counter = 0 / 97 , time = 0.00014092 m, info = 9 D4 A0  
update(86): ETA = 0.013411 m, counter = 9 / 97 , time = 0.0015125 m, info = 9 D4 A1  
update(86): ETA = 0.013723 m, counter = 18 / 97 , time = 0.0030759 m, info = 9 D4 2A1  
update(86): ETA = 0.012803 m, counter = 27 / 97 , time = 0.0047220 m, info = 9 D4 3A1  
update(86): ETA = 0.012405 m, counter = 36 / 97 , time = 0.0065522 m, info = 9 D4 A0  
update(86): ETA = 0.0089563 m, counter = 45 / 97 , time = 0.0081024 m, info = 9 D4 2A1  
update(86): ETA = 0.0073634 m, counter = 54 / 97 , time = 0.0096436 m, info = 9 D4 2A1  
update(86): ETA = 0.0066581 m, counter = 63 / 97 , time = 0.011406 m, info = 9 D4 4A1  
update(86): ETA = 0.0060914 m, counter = 72 / 97 , time = 0.013599 m, info = 9 D4 4A1  
update(86): ETA = 0.0039135 m, counter = 81 / 97 , time = 0.015800 m, info = 9 D4 4A1  
update(86): ETA = 0.0017046 m, counter = 90 / 97 , time = 0.017992 m, info = 9 D4 4A1  
get_cls(1145): inv      = D4 , rank = 9 
get_cls(1146): bas1_lst = 13 [('2A1', 2), ('2A2', 1), ('2A3', 1), ('3A1', 2), ('4A1', 1), ('5A1', 1), ('A0', 1), ('A1', 1), ('A1+A3', 1), ('A3', 1), ('A5', 1)] 
get_cls(1147): bas2_lst = 36 [('2A1', 12), ('3A1', 8), ('4A1', 2), ('A0', 1), ('A1', 9), ('A2', 4)] 
get_cls(1148): bas3_lst = 61 [('2A1', 24), ('4A1', 36), ('A0', 1)] 
update(86): ETA = 2.9811e-6 m, counter = 0 / 28548 , time = 2.9802e-7 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', 'A0', 'A0')  
get_cls(1168): 	 appended:  (9, 'D4', 'A0') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A0', 'A0') 
get_cls(1168): 	 appended:  (9, 'D4', '2A1') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A0', '2A1') 
get_cls(1168): 	 appended:  (9, 'D4', '4A1') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A0', '4A1') 
get_cls(1168): 	 appended:  (9, 'D4', '{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A1', 'A0') 
get_cls(1168): 	 appended:  (9, 'D4', '2A1+{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A1', '2A1') 
get_cls(1168): 	 appended:  (9, 'D4', '2{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A0', '2A1', 'A0') 
get_cls(1168): 	 appended:  (9, 'D4', '2A1+2{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A0', '2A1', '2A1') 
get_cls(1168): 	 appended:  (9, 'D4', '{A2}') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A2', 'A0') 
get_cls(1168): 	 appended:  (9, 'D4', '3{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A0', '3A1', 'A0') 
get_cls(1168): 	 appended:  (9, 'D4', '4{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A0', '4A1', 'A0') 
get_cls(1168): 	 appended:  (9, 'D4', '[A3]') , ( bas1.type, bas2.type, bas3.type ) = ('A1', 'A0', '2A1') 
get_cls(1168): 	 appended:  (9, 'D4', '4A1+{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A1', 'A0', '4A1') 
get_cls(1168): 	 appended:  (9, 'D4', '2A1+{A2}') , ( bas1.type, bas2.type, bas3.type ) = ('A1', 'A1', '2A1') 
update(86): ETA = 531.66 m, counter = 2854 / 28548 , time = 59.055 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A1', '2A1', '4A1')  
get_cls(1168): 	 appended:  (9, 'D4', '{A3}') , ( bas1.type, bas2.type, bas3.type ) = ('A1', '2A1', 'A0') 
get_cls(1168): 	 appended:  (9, 'D4', '2A2') , ( bas1.type, bas2.type, bas3.type ) = ('2A1', 'A0', '2A1') 
get_cls(1168): 	 appended:  (9, 'D4', '6A1') , ( bas1.type, bas2.type, bas3.type ) = ('2A1', 'A0', '4A1') 
get_cls(1168): 	 appended:  (9, 'D4', '2A1+[A3]') , ( bas1.type, bas2.type, bas3.type ) = ('2A1', 'A1', '2A1') 
get_cls(1168): 	 appended:  (9, 'D4', '{A1}+2A2') , ( bas1.type, bas2.type, bas3.type ) = ('2A1', 'A1', '2A1') 
get_cls(1168): 	 appended:  (9, 'D4', '{A1}+[A3]') , ( bas1.type, bas2.type, bas3.type ) = ('2A1', '2A1', 'A0') 
get_cls(1168): 	 appended:  (9, 'D4', '4A1+2{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('2A1', '2A1', '2A1') 
update(86): ETA = 57.135 m, counter = 5708 / 28548 , time = 66.195 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('2A1', '2A1', '4A1')  
get_cls(1168): 	 appended:  (9, 'D4', '2{A1}+[A3]') , ( bas1.type, bas2.type, bas3.type ) = ('2A1', '3A1', 'A0') 
get_cls(1168): 	 appended:  (9, 'D4', '2A1+{A3}') , ( bas1.type, bas2.type, bas3.type ) = ('2A1', 'A1', '2A1') 
update(86): ETA = 29.163 m, counter = 8562 / 28548 , time = 70.359 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('2A1', '3A1', '2A1')  
get_cls(1168): 	 appended:  (9, 'D4', '[D4]') , ( bas1.type, bas2.type, bas3.type ) = ('3A1', 'A1', 'A0') 
get_cls(1168): 	 appended:  (9, 'D4', '2A2+{A2}') , ( bas1.type, bas2.type, bas3.type ) = ('3A1', 'A1', '2A1') 
get_cls(1168): 	 appended:  (9, 'D4', '{D4}') , ( bas1.type, bas2.type, bas3.type ) = ('3A1', 'A1', 'A0') 
update(86): ETA = 18.095 m, counter = 11416 / 28548 , time = 73.374 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('3A1', 'A1', '2A1')  
get_cls(1168): 	 appended:  (9, 'D4', '[A5]') , ( bas1.type, bas2.type, bas3.type ) = ('A3', 'A0', '2A1') 
get_cls(1168): 	 appended:  (9, 'D4', '4A1+[A3]') , ( bas1.type, bas2.type, bas3.type ) = ('A3', 'A0', '4A1') 
get_cls(1168): 	 appended:  (9, 'D4', '2A1+[D4]') , ( bas1.type, bas2.type, bas3.type ) = ('A3', 'A1', '2A1') 
update(86): ETA = 8.9118 m, counter = 14270 / 28548 , time = 75.155 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A3', '2A1', '4A1')  
get_cls(1168): 	 appended:  (9, 'D4', '2A3') , ( bas1.type, bas2.type, bas3.type ) = ('2A2', 'A0', '2A1') 
get_cls(1168): 	 appended:  (9, 'D4', '{A1}+2A3') , ( bas1.type, bas2.type, bas3.type ) = ('2A2', 'A1', '2A1') 
get_cls(1168): 	 appended:  (9, 'D4', '{A1}+[A5]') , ( bas1.type, bas2.type, bas3.type ) = ('2A2', '2A1', 'A0') 
update(86): ETA = 5.0561 m, counter = 17124 / 28548 , time = 76.418 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('2A2', '3A1', '4A1')  
get_cls(1168): 	 appended:  (9, 'D4', '8A1') , ( bas1.type, bas2.type, bas3.type ) = ('4A1', 'A0', '4A1') 
get_cls(1168): 	 appended:  (9, 'D4', '2[A3]') , ( bas1.type, bas2.type, bas3.type ) = ('4A1', '2A1', 'A0') 
get_cls(1168): 	 appended:  (9, 'D4', '[D5]') , ( bas1.type, bas2.type, bas3.type ) = ('A1+A3', 'A1', 'A0') 
update(86): ETA = 6.6343 m, counter = 19978 / 28548 , time = 78.628 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A1+A3', 'A1', '4A1')  
update(86): ETA = 1.4489 m, counter = 22832 / 28548 , time = 79.351 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('5A1', '2A1', '2A1')  
get_cls(1168): 	 appended:  (9, 'D4', '[A7]') , ( bas1.type, bas2.type, bas3.type ) = ('A5', 'A0', '2A1') 
get_cls(1168): 	 appended:  (9, 'D4', '[E6]') , ( bas1.type, bas2.type, bas3.type ) = ('A5', 'A1', 'A0') 
update(86): ETA = 0.32532 m, counter = 25686 / 28548 , time = 79.675 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A5', 'A2', '2A1')  
get_cls(1168): 	 appended:  (9, 'D4', '2D4') , ( bas1.type, bas2.type, bas3.type ) = ('2A3', 'A0', '2A1') 
update(86): ETA = 0.00086668 m, counter = 28540 / 28548 , time = 79.985 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('2A3', '4A1', '4A1')  
get_cls(1070): looping through inv_lst: (9, 'A1+D4', [e2-e3, e3-e4, e4-e5, e6-e7, e0-e1-e2-e3]) 
get_part_roots(875): r_lst      = 120 [e1-e2, e2-e3, e1-e3, e3-e4, e2-e4, e1-e4, e4-e5, e3-e5, e2-e5, e1-e5, e5-e6, e4-e6, e3-e6, e2-e6, e1-e6, e6-e7, e5-e7, e4-e7, e3-e7, e2-e7, e1-e7, e7-e8, e6-e8, e5-e8, e4-e8, e3-e8, e2-e8, e1-e8, e0-e1-e2-e3, e0-e1-e2-e4, e0-e1-e3-e4, e0-e2-e3-e4, e0-e1-e2-e5, e0-e1-e3-e5, e0-e2-e3-e5, e0-e1-e4-e5, e0-e2-e4-e5, e0-e3-e4-e5, e0-e1-e2-e6, e0-e1-e3-e6, e0-e2-e3-e6, e0-e1-e4-e6, e0-e2-e4-e6, e0-e3-e4-e6, e0-e1-e5-e6, e0-e2-e5-e6, e0-e3-e5-e6, e0-e4-e5-e6, e0-e1-e2-e7, e0-e1-e3-e7, e0-e2-e3-e7, e0-e1-e4-e7, e0-e2-e4-e7, e0-e3-e4-e7, e0-e1-e5-e7, e0-e2-e5-e7, e0-e3-e5-e7, e0-e4-e5-e7, e0-e1-e6-e7, e0-e2-e6-e7, e0-e3-e6-e7, e0-e4-e6-e7, e0-e5-e6-e7, e0-e1-e2-e8, e0-e1-e3-e8, e0-e2-e3-e8, e0-e1-e4-e8, e0-e2-e4-e8, e0-e3-e4-e8, e0-e1-e5-e8, e0-e2-e5-e8, e0-e3-e5-e8, e0-e4-e5-e8, e0-e1-e6-e8, e0-e2-e6-e8, e0-e3-e6-e8, e0-e4-e6-e8, e0-e5-e6-e8, e0-e1-e7-e8, e0-e2-e7-e8, e0-e3-e7-e8, e0-e4-e7-e8, e0-e5-e7-e8, e0-e6-e7-e8, 2e0-e1-e2-e3-e4-e5-e6, 2e0-e1-e2-e3-e4-e5-e7, 2e0-e1-e2-e3-e4-e6-e7, 2e0-e1-e2-e3-e5-e6-e7, 2e0-e1-e2-e4-e5-e6-e7, 2e0-e1-e3-e4-e5-e6-e7, 2e0-e2-e3-e4-e5-e6-e7, 2e0-e1-e2-e3-e4-e5-e8, 2e0-e1-e2-e3-e4-e6-e8, 2e0-e1-e2-e3-e5-e6-e8, 2e0-e1-e2-e4-e5-e6-e8, 2e0-e1-e3-e4-e5-e6-e8, 2e0-e2-e3-e4-e5-e6-e8, 2e0-e1-e2-e3-e4-e7-e8, 2e0-e1-e2-e3-e5-e7-e8, 2e0-e1-e2-e4-e5-e7-e8, 2e0-e1-e3-e4-e5-e7-e8, 2e0-e2-e3-e4-e5-e7-e8, 2e0-e1-e2-e3-e6-e7-e8, 2e0-e1-e2-e4-e6-e7-e8, 2e0-e1-e3-e4-e6-e7-e8, 2e0-e2-e3-e4-e6-e7-e8, 2e0-e1-e2-e5-e6-e7-e8, 2e0-e1-e3-e5-e6-e7-e8, 2e0-e2-e3-e5-e6-e7-e8, 2e0-e1-e4-e5-e6-e7-e8, 2e0-e2-e4-e5-e6-e7-e8, 2e0-e3-e4-e5-e6-e7-e8, 3e0-2e1-e2-e3-e4-e5-e6-e7-e8, 3e0-e1-2e2-e3-e4-e5-e6-e7-e8, 3e0-e1-e2-2e3-e4-e5-e6-e7-e8, 3e0-e1-e2-e3-2e4-e5-e6-e7-e8, 3e0-e1-e2-e3-e4-2e5-e6-e7-e8, 3e0-e1-e2-e3-e4-e5-2e6-e7-e8, 3e0-e1-e2-e3-e4-e5-e6-2e7-e8, 3e0-e1-e2-e3-e4-e5-e6-e7-2e8] 
get_part_roots(876): s_lst      = 3 [e0-e1-e6-e7, 2e0-e2-e3-e4-e5-e6-e7, 3e0-e1-e2-e3-e4-e5-e6-e7-2e8] 
get_part_roots(877): tq1_lst    = 104 [e1-e2, e1-e3, e1-e4, e1-e5, e5-e6, e4-e6, e3-e6, e2-e6, e1-e6, e5-e7, e4-e7, e3-e7, e2-e7, e1-e7, e7-e8, e6-e8, e5-e8, e4-e8, e3-e8, e2-e8, e1-e8, e0-e2-e3-e4, e0-e2-e3-e5, e0-e2-e4-e5, e0-e3-e4-e5, e0-e1-e2-e6, e0-e1-e3-e6, e0-e2-e3-e6, e0-e1-e4-e6, e0-e2-e4-e6, e0-e3-e4-e6, e0-e1-e5-e6, e0-e2-e5-e6, e0-e3-e5-e6, e0-e4-e5-e6, e0-e1-e2-e7, e0-e1-e3-e7, e0-e2-e3-e7, e0-e1-e4-e7, e0-e2-e4-e7, e0-e3-e4-e7, e0-e1-e5-e7, e0-e2-e5-e7, e0-e3-e5-e7, e0-e4-e5-e7, e0-e2-e6-e7, e0-e3-e6-e7, e0-e4-e6-e7, e0-e5-e6-e7, e0-e1-e2-e8, e0-e1-e3-e8, e0-e2-e3-e8, e0-e1-e4-e8, e0-e2-e4-e8, e0-e3-e4-e8, e0-e1-e5-e8, e0-e2-e5-e8, e0-e3-e5-e8, e0-e4-e5-e8, e0-e1-e6-e8, e0-e2-e6-e8, e0-e3-e6-e8, e0-e4-e6-e8, e0-e5-e6-e8, e0-e1-e7-e8, e0-e2-e7-e8, e0-e3-e7-e8, e0-e4-e7-e8, e0-e5-e7-e8, e0-e6-e7-e8, 2e0-e1-e2-e3-e4-e5-e6, 2e0-e1-e2-e3-e4-e5-e7, 2e0-e1-e2-e3-e4-e6-e7, 2e0-e1-e2-e3-e5-e6-e7, 2e0-e1-e2-e4-e5-e6-e7, 2e0-e1-e3-e4-e5-e6-e7, 2e0-e1-e2-e3-e4-e5-e8, 2e0-e1-e2-e3-e4-e6-e8, 2e0-e1-e2-e3-e5-e6-e8, 2e0-e1-e2-e4-e5-e6-e8, 2e0-e1-e3-e4-e5-e6-e8, 2e0-e2-e3-e4-e5-e6-e8, 2e0-e1-e2-e3-e4-e7-e8, 2e0-e1-e2-e3-e5-e7-e8, 2e0-e1-e2-e4-e5-e7-e8, 2e0-e1-e3-e4-e5-e7-e8, 2e0-e2-e3-e4-e5-e7-e8, 2e0-e1-e2-e3-e6-e7-e8, 2e0-e1-e2-e4-e6-e7-e8, 2e0-e1-e3-e4-e6-e7-e8, 2e0-e2-e3-e4-e6-e7-e8, 2e0-e1-e2-e5-e6-e7-e8, 2e0-e1-e3-e5-e6-e7-e8, 2e0-e2-e3-e5-e6-e7-e8, 2e0-e1-e4-e5-e6-e7-e8, 2e0-e2-e4-e5-e6-e7-e8, 2e0-e3-e4-e5-e6-e7-e8, 3e0-2e1-e2-e3-e4-e5-e6-e7-e8, 3e0-e1-2e2-e3-e4-e5-e6-e7-e8, 3e0-e1-e2-2e3-e4-e5-e6-e7-e8, 3e0-e1-e2-e3-2e4-e5-e6-e7-e8, 3e0-e1-e2-e3-e4-2e5-e6-e7-e8, 3e0-e1-e2-e3-e4-e5-2e6-e7-e8, 3e0-e1-e2-e3-e4-e5-e6-2e7-e8] 
get_part_roots(878): tq_lst     = 96 [e1-e2, e1-e3, e1-e4, e1-e5, e5-e6, e4-e6, e3-e6, e2-e6, e1-e6, e5-e7, e4-e7, e3-e7, e2-e7, e1-e7, e5-e8, e4-e8, e3-e8, e2-e8, e1-e8, e0-e2-e3-e4, e0-e2-e3-e5, e0-e2-e4-e5, e0-e3-e4-e5, e0-e1-e2-e6, e0-e1-e3-e6, e0-e2-e3-e6, e0-e1-e4-e6, e0-e2-e4-e6, e0-e3-e4-e6, e0-e1-e5-e6, e0-e2-e5-e6, e0-e3-e5-e6, e0-e4-e5-e6, e0-e1-e2-e7, e0-e1-e3-e7, e0-e2-e3-e7, e0-e1-e4-e7, e0-e2-e4-e7, e0-e3-e4-e7, e0-e1-e5-e7, e0-e2-e5-e7, e0-e3-e5-e7, e0-e4-e5-e7, e0-e2-e6-e7, e0-e3-e6-e7, e0-e4-e6-e7, e0-e5-e6-e7, e0-e1-e2-e8, e0-e1-e3-e8, e0-e2-e3-e8, e0-e1-e4-e8, e0-e2-e4-e8, e0-e3-e4-e8, e0-e1-e5-e8, e0-e2-e5-e8, e0-e3-e5-e8, e0-e4-e5-e8, e0-e2-e6-e8, e0-e3-e6-e8, e0-e4-e6-e8, e0-e5-e6-e8, e0-e2-e7-e8, e0-e3-e7-e8, e0-e4-e7-e8, e0-e5-e7-e8, e0-e6-e7-e8, 2e0-e1-e2-e3-e4-e5-e6, 2e0-e1-e2-e3-e4-e5-e7, 2e0-e1-e2-e3-e4-e6-e7, 2e0-e1-e2-e3-e5-e6-e7, 2e0-e1-e2-e4-e5-e6-e7, 2e0-e1-e3-e4-e5-e6-e7, 2e0-e1-e2-e3-e4-e5-e8, 2e0-e1-e2-e3-e4-e6-e8, 2e0-e1-e2-e3-e5-e6-e8, 2e0-e1-e2-e4-e5-e6-e8, 2e0-e1-e3-e4-e5-e6-e8, 2e0-e1-e2-e3-e4-e7-e8, 2e0-e1-e2-e3-e5-e7-e8, 2e0-e1-e2-e4-e5-e7-e8, 2e0-e1-e3-e4-e5-e7-e8, 2e0-e1-e2-e3-e6-e7-e8, 2e0-e1-e2-e4-e6-e7-e8, 2e0-e1-e3-e4-e6-e7-e8, 2e0-e2-e3-e4-e6-e7-e8, 2e0-e1-e2-e5-e6-e7-e8, 2e0-e1-e3-e5-e6-e7-e8, 2e0-e2-e3-e5-e6-e7-e8, 2e0-e1-e4-e5-e6-e7-e8, 2e0-e2-e4-e5-e6-e7-e8, 2e0-e3-e4-e5-e6-e7-e8, 3e0-2e1-e2-e3-e4-e5-e6-e7-e8, 3e0-e1-2e2-e3-e4-e5-e6-e7-e8, 3e0-e1-e2-2e3-e4-e5-e6-e7-e8, 3e0-e1-e2-e3-2e4-e5-e6-e7-e8, 3e0-e1-e2-e3-e4-2e5-e6-e7-e8] 
get_part_roots(879): q_lst      = 48 [e1-e2, e1-e3, e1-e4, e1-e5, e5-e6, e4-e6, e3-e6, e2-e6, e1-e6, e5-e7, e4-e7, e3-e7, e2-e7, e1-e7, e5-e8, e4-e8, e3-e8, e2-e8, e1-e8, e0-e2-e3-e6, e0-e2-e4-e6, e0-e3-e4-e6, e0-e2-e5-e6, e0-e3-e5-e6, e0-e4-e5-e6, e0-e2-e6-e7, e0-e3-e6-e7, e0-e4-e6-e7, e0-e5-e6-e7, e0-e2-e3-e8, e0-e2-e4-e8, e0-e3-e4-e8, e0-e2-e6-e8, e0-e3-e6-e8, e0-e4-e6-e8, e0-e5-e6-e8, e0-e2-e7-e8, e0-e3-e7-e8, e0-e4-e7-e8, e0-e5-e7-e8, e0-e6-e7-e8, 2e0-e1-e2-e3-e6-e7-e8, 2e0-e1-e2-e4-e6-e7-e8, 2e0-e1-e3-e4-e6-e7-e8, 2e0-e2-e3-e4-e6-e7-e8, 2e0-e2-e3-e5-e6-e7-e8, 2e0-e2-e4-e5-e6-e7-e8, 2e0-e3-e4-e5-e6-e7-e8] 
get_part_roots(880):        M --> 48 [e0-e3-e4-e5, e0-e2-e4-e5, e0-e2-e3-e5, e0-e2-e3-e4, e0-e1-e5-e7, e0-e1-e4-e7, e0-e1-e3-e7, e0-e1-e2-e7, 2e0-e1-e2-e3-e4-e5-e7, e0-e1-e5-e6, e0-e1-e4-e6, e0-e1-e3-e6, e0-e1-e2-e6, 2e0-e1-e2-e3-e4-e5-e6, e0-e1-e5-e8, e0-e1-e4-e8, e0-e1-e3-e8, e0-e1-e2-e8, 2e0-e1-e2-e3-e4-e5-e8, e0-e4-e5-e7, e0-e3-e5-e7, e0-e2-e5-e7, e0-e3-e4-e7, e0-e2-e4-e7, e0-e2-e3-e7, 2e0-e1-e3-e4-e5-e6-e7, 2e0-e1-e2-e4-e5-e6-e7, 2e0-e1-e2-e3-e5-e6-e7, 2e0-e1-e2-e3-e4-e6-e7, e0-e4-e5-e8, e0-e3-e5-e8, e0-e2-e5-e8, 2e0-e1-e3-e4-e5-e7-e8, 2e0-e1-e2-e4-e5-e7-e8, 2e0-e1-e2-e3-e5-e7-e8, 2e0-e1-e2-e3-e4-e7-e8, 2e0-e1-e3-e4-e5-e6-e8, 2e0-e1-e2-e4-e5-e6-e8, 2e0-e1-e2-e3-e5-e6-e8, 2e0-e1-e2-e3-e4-e6-e8, 3e0-2e1-e2-e3-e4-e5-e6-e7-e8, 2e0-e1-e4-e5-e6-e7-e8, 2e0-e1-e3-e5-e6-e7-e8, 2e0-e1-e2-e5-e6-e7-e8, 3e0-e1-e2-e3-e4-2e5-e6-e7-e8, 3e0-e1-e2-e3-2e4-e5-e6-e7-e8, 3e0-e1-e2-2e3-e4-e5-e6-e7-e8, 3e0-e1-2e2-e3-e4-e5-e6-e7-e8] 
get_part_roots(881): inv.Md_lst = A1+D4 [e2-e3, e3-e4, e4-e5, e6-e7, e0-e1-e2-e3] , rank = 9 
import_cls(1015): importing:  (9, 'A1+D4', 'A0') [e2-e3, e3-e4, e4-e5, e6-e7, e0-e1-e2-e3] == [e2-e3, e3-e4, e4-e5, e6-e7, e0-e1-e2-e3] 
import_cls(1015): importing:  (9, 'A1+D4', '{A1}') [e2-e3, e3-e4, e4-e5, e6-e7, e0-e1-e2-e3] == [e2-e3, e3-e4, e4-e5, e6-e7, e0-e1-e2-e3] 
import_cls(1015): importing:  (9, 'A1+D4', '2A1') [e2-e3, e3-e4, e4-e5, e6-e7, e0-e1-e2-e3] == [e2-e3, e3-e4, e4-e5, e6-e7, e0-e1-e2-e3] 
import_cls(1015): importing:  (9, 'A1+D4', '2{A1}') [e2-e3, e3-e4, e4-e5, e6-e7, e0-e1-e2-e3] == [e2-e3, e3-e4, e4-e5, e6-e7, e0-e1-e2-e3] 
import_cls(1015): importing:  (9, 'A1+D4', '[A2]') [e2-e3, e3-e4, e4-e5, e6-e7, e0-e1-e2-e3] == [e2-e3, e3-e4, e4-e5, e6-e7, e0-e1-e2-e3] 
import_cls(1015): importing:  (9, 'A1+D4', '{A1}+[A2]') [e2-e3, e3-e4, e4-e5, e6-e7, e0-e1-e2-e3] == [e2-e3, e3-e4, e4-e5, e6-e7, e0-e1-e2-e3] 
import_cls(1015): importing:  (9, 'A1+D4', '[A3]') [e2-e3, e3-e4, e4-e5, e6-e7, e0-e1-e2-e3] == [e2-e3, e3-e4, e4-e5, e6-e7, e0-e1-e2-e3] 
import_cls(1015): importing:  (9, 'A1+D4', '2[A2]') [e2-e3, e3-e4, e4-e5, e6-e7, e0-e1-e2-e3] == [e2-e3, e3-e4, e4-e5, e6-e7, e0-e1-e2-e3] 
import_cls(1015): importing:  (9, 'A1+D4', '4A1') [e2-e3, e3-e4, e4-e5, e6-e7, e0-e1-e2-e3] == [e2-e3, e3-e4, e4-e5, e6-e7, e0-e1-e2-e3] 
import_cls(1015): importing:  (9, 'A1+D4', '[A4]') [e2-e3, e3-e4, e4-e5, e6-e7, e0-e1-e2-e3] == [e2-e3, e3-e4, e4-e5, e6-e7, e0-e1-e2-e3] 
get_cls(1086): looping through inv_lst continued after recursive call: (9, 'A1+D4', [e2-e3, e3-e4, e4-e5, e6-e7, e0-e1-e2-e3]) 
get_cls(1094): bas1_lst = 10 [('A1+D4', 'A0'), ('A1+D4', 'A1'), ('A1+D4', '2A1'), ('A1+D4', '2A1'), ('A1+D4', 'A2'), ('A1+D4', 'A1+A2'), ('A1+D4', 'A3'), ('A1+D4', '2A2'), ('A1+D4', '4A1'), ('A1+D4', 'A4')] 
get_cls(1095): s_lst    = 1 [3e0-e1-e2-e3-e4-e5-e6-e7-2e8] 
get_cls(1096): q_lst    = 24 [e5-e8, e4-e8, e3-e8, e2-e8, e1-e8, e0-e2-e3-e8, e0-e2-e4-e8, e0-e3-e4-e8, e0-e2-e6-e8, e0-e3-e6-e8, e0-e4-e6-e8, e0-e5-e6-e8, e0-e2-e7-e8, e0-e3-e7-e8, e0-e4-e7-e8, e0-e5-e7-e8, e0-e6-e7-e8, 2e0-e1-e2-e3-e6-e7-e8, 2e0-e1-e2-e4-e6-e7-e8, 2e0-e1-e3-e4-e6-e7-e8, 2e0-e2-e3-e4-e6-e7-e8, 2e0-e2-e3-e5-e6-e7-e8, 2e0-e2-e4-e5-e6-e7-e8, 2e0-e3-e4-e5-e6-e7-e8] 
update(86): ETA = 0.00033473 m, counter = 0 / 77 , time = 4.3472e-6 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1+D4', 'A0')  
update(86): ETA = 0.083508 m, counter = 1 / 77 , time = 0.0011031 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1+D4', '{A1}')  
update(86): ETA = 0.29902 m, counter = 2 / 77 , time = 0.0050901 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1+D4', '2{A1}')  
update(86): ETA = 9.8117 m, counter = 3 / 77 , time = 0.13768 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1+D4', '{A2}')  
update(86): ETA = 0.28539 m, counter = 4 / 77 , time = 0.14159 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1+D4', '3{A1}')  
update(86): ETA = 13.997 m, counter = 5 / 77 , time = 0.33600 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1+D4', '{A1}+{A2}')  
update(86): ETA = 0.28686 m, counter = 6 / 77 , time = 0.34004 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1+D4', '{A3}')  
update(86): ETA = 0.27659 m, counter = 7 / 77 , time = 0.34399 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1+D4', '2{A1}+{A2}')  
update(86): ETA = 0.27553 m, counter = 8 / 77 , time = 0.34798 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1+D4', '2{A2}')  
update(86): ETA = 0.26659 m, counter = 9 / 77 , time = 0.35190 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1+D4', '4{A1}')  
update(86): ETA = 13.234 m, counter = 10 / 77 , time = 0.54942 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1+D4', '4{A1}')  
update(86): ETA = 0.019638 m, counter = 11 / 77 , time = 0.54972 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1+D4', '{A1}+{A3}')  
update(86): ETA = 0.26295 m, counter = 12 / 77 , time = 0.55377 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1+D4', '{A4}')  
update(86): ETA = 0.25984 m, counter = 13 / 77 , time = 0.55783 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1+D4', '{D4}')  
update(86): ETA = 0.25670 m, counter = 14 / 77 , time = 0.56190 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1+D4', '2{A1}+{A3}')  
update(86): ETA = 0.023801 m, counter = 15 / 77 , time = 0.56228 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1+D4', '2{A1}+{A3}')  
update(86): ETA = 0.020225 m, counter = 16 / 77 , time = 0.56262 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1+D4', '3{A1}+{A2}')  
update(86): ETA = 0.018372 m, counter = 17 / 77 , time = 0.56292 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1+D4', '5{A1}')  
update(86): ETA = 0.021943 m, counter = 18 / 77 , time = 0.56329 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1+D4', '{A1}+2{A2}')  
update(86): ETA = 0.026187 m, counter = 19 / 77 , time = 0.56375 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1+D4', '{A1}+{A4}')  
update(86): ETA = 0.025370 m, counter = 20 / 77 , time = 0.56419 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1+D4', '{A1}+{D4}')  
update(86): ETA = 0.023406 m, counter = 21 / 77 , time = 0.56461 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1+D4', '{A2}+{A3}')  
update(86): ETA = 0.028099 m, counter = 22 / 77 , time = 0.56512 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1+D4', '{A5}')  
update(86): ETA = 0.027778 m, counter = 23 / 77 , time = 0.56563 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1+D4', '{D5}')  
update(86): ETA = 0.024697 m, counter = 24 / 77 , time = 0.56610 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1+D4', '2{A1}+2{A2}')  
update(86): ETA = 0.027808 m, counter = 25 / 77 , time = 0.56664 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1+D4', '2{A1}+{A4}')  
update(86): ETA = 0.027458 m, counter = 26 / 77 , time = 0.56717 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1+D4', '2{A1}+{D4}')  
update(86): ETA = 0.028317 m, counter = 27 / 77 , time = 0.56774 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1+D4', '2{A3}')  
update(86): ETA = 0.027211 m, counter = 28 / 77 , time = 0.56829 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1+D4', '2{A3}')  
update(86): ETA = 0.022585 m, counter = 29 / 77 , time = 0.56877 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1+D4', '3{A1}+{A3}')  
update(86): ETA = 0.023457 m, counter = 30 / 77 , time = 0.56926 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1+D4', '3{A2}')  
update(86): ETA = 0.019883 m, counter = 31 / 77 , time = 0.56970 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1+D4', '4{A1}+{A2}')  
update(86): ETA = 0.017982 m, counter = 32 / 77 , time = 0.57010 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1+D4', '6{A1}')  
update(86): ETA = 0.022486 m, counter = 33 / 77 , time = 0.57061 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1+D4', '{A1}+{A2}+{A3}')  
update(86): ETA = 0.025993 m, counter = 34 / 77 , time = 0.57121 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1+D4', '{A1}+{A5}')  
update(86): ETA = 0.025397 m, counter = 35 / 77 , time = 0.57182 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1+D4', '{A1}+{A5}')  
update(86): ETA = 0.025095 m, counter = 36 / 77 , time = 0.57243 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1+D4', '{A1}+{D5}')  
update(86): ETA = 0.022749 m, counter = 37 / 77 , time = 0.57300 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1+D4', '{A2}+{A4}')  
update(86): ETA = 0.022314 m, counter = 38 / 77 , time = 0.57357 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1+D4', '{A2}+{D4}')  
update(86): ETA = 0.026102 m, counter = 39 / 77 , time = 0.57426 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1+D4', '{A6}')  
update(86): ETA = 0.025590 m, counter = 40 / 77 , time = 0.57495 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1+D4', '{D6}')  
update(86): ETA = 0.025100 m, counter = 41 / 77 , time = 0.57565 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1+D4', '{E6}')  
update(86): ETA = 0.022004 m, counter = 42 / 77 , time = 0.57627 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1+D4', '2{A1}+{A2}+{A3}')  
update(86): ETA = 0.024277 m, counter = 43 / 77 , time = 0.57699 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1+D4', '2{A1}+{A5}')  
update(86): ETA = 0.023704 m, counter = 44 / 77 , time = 0.57771 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1+D4', '2{A1}+{D5}')  
update(86): ETA = 0.020710 m, counter = 45 / 77 , time = 0.57835 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1+D4', '3{A1}+{D4}')  
update(86): ETA = 0.018161 m, counter = 46 / 77 , time = 0.57894 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1+D4', '4{A1}+{A3}')  
update(86): ETA = 0.015222 m, counter = 47 / 77 , time = 0.57945 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1+D4', '7{A1}')  
update(86): ETA = 0.019299 m, counter = 48 / 77 , time = 0.58011 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1+D4', '{A1}+2{A3}')  
update(86): ETA = 0.017281 m, counter = 49 / 77 , time = 0.58073 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1+D4', '{A1}+3{A2}')  
update(86): ETA = 0.018618 m, counter = 50 / 77 , time = 0.58142 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1+D4', '{A1}+{A2}+{A4}')  
update(86): ETA = 0.020589 m, counter = 51 / 77 , time = 0.58221 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1+D4', '{A1}+{A6}')  
update(86): ETA = 0.019887 m, counter = 52 / 77 , time = 0.58301 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1+D4', '{A1}+{D6}')  
update(86): ETA = 0.019217 m, counter = 53 / 77 , time = 0.58381 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1+D4', '{A1}+{E6}')  
update(86): ETA = 0.017369 m, counter = 54 / 77 , time = 0.58456 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1+D4', '{A2}+{A5}')  
update(86): ETA = 0.016423 m, counter = 55 / 77 , time = 0.58531 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1+D4', '{A2}+{D5}')  
update(86): ETA = 0.015097 m, counter = 56 / 77 , time = 0.58603 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1+D4', '{A3}+{A4}')  
update(86): ETA = 0.014425 m, counter = 57 / 77 , time = 0.58675 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1+D4', '{A3}+{D4}')  
update(86): ETA = 0.016857 m, counter = 58 / 77 , time = 0.58764 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1+D4', '{A7}')  
update(86): ETA = 0.016111 m, counter = 59 / 77 , time = 0.58853 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1+D4', '{A7}')  
update(86): ETA = 0.014980 m, counter = 60 / 77 , time = 0.58941 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1+D4', '{D7}')  
update(86): ETA = 0.014295 m, counter = 61 / 77 , time = 0.59031 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1+D4', '{E7}')  
update(86): ETA = 0.011696 m, counter = 62 / 77 , time = 0.59109 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1+D4', '2{A1}+2{A3}')  
update(86): ETA = 0.012786 m, counter = 63 / 77 , time = 0.59200 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1+D4', '2{A1}+{D6}')  
update(86): ETA = 0.011761 m, counter = 64 / 77 , time = 0.59290 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1+D4', '2{A4}')  
update(86): ETA = 0.010811 m, counter = 65 / 77 , time = 0.59380 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1+D4', '2{D4}')  
update(86): ETA = 0.0083800 m, counter = 66 / 77 , time = 0.59457 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1+D4', '4{A1}+{D4}')  
update(86): ETA = 0.0075817 m, counter = 67 / 77 , time = 0.59532 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1+D4', '4{A2}')  
update(86): ETA = 0.0056103 m, counter = 68 / 77 , time = 0.59595 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1+D4', '8{A1}')  
update(86): ETA = 0.0068878 m, counter = 69 / 77 , time = 0.59681 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1+D4', '{A1}+{A2}+{A5}')  
update(86): ETA = 0.0070914 m, counter = 70 / 77 , time = 0.59782 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1+D4', '{A1}+{A7}')  
update(86): ETA = 0.0060624 m, counter = 71 / 77 , time = 0.59883 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1+D4', '{A1}+{E7}')  
update(86): ETA = 0.0047508 m, counter = 72 / 77 , time = 0.59978 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1+D4', '{A2}+{E6}')  
update(86): ETA = 0.0036360 m, counter = 73 / 77 , time = 0.60069 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1+D4', '{A3}+{D5}')  
update(86): ETA = 0.0033602 m, counter = 74 / 77 , time = 0.60181 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1+D4', '{A8}')  
update(86): ETA = 0.0022282 m, counter = 75 / 77 , time = 0.60293 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1+D4', '{D8}')  
update(86): ETA = 0.0011180 m, counter = 76 / 77 , time = 0.60404 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'A1+D4', '{E8}')  
get_cls(1130): Setting Dynkin types of 51 items...please wait... 
update(86): ETA = 0.0020317 m, counter = 0 / 51 , time = 0.00019918 m, info = 9 A1+D4 A0  
update(86): ETA = 0.010283 m, counter = 5 / 51 , time = 0.0013169 m, info = 9 A1+D4 2A1  
update(86): ETA = 0.0094727 m, counter = 10 / 51 , time = 0.0024721 m, info = 9 A1+D4 2A1  
update(86): ETA = 0.0087681 m, counter = 15 / 51 , time = 0.0036899 m, info = 9 A1+D4 A2  
update(86): ETA = 0.0074134 m, counter = 20 / 51 , time = 0.0048856 m, info = 9 A1+D4 2A1  
update(86): ETA = 0.0060769 m, counter = 25 / 51 , time = 0.0060542 m, info = 9 A1+D4 2A1  
update(86): ETA = 0.0060954 m, counter = 30 / 51 , time = 0.0075055 m, info = 9 A1+D4 4A1  
update(86): ETA = 0.0048791 m, counter = 35 / 51 , time = 0.0090302 m, info = 9 A1+D4 4A1  
update(86): ETA = 0.0033753 m, counter = 40 / 51 , time = 0.010564 m, info = 9 A1+D4 4A1  
update(86): ETA = 0.0018281 m, counter = 45 / 51 , time = 0.012088 m, info = 9 A1+D4 4A1  
update(86): ETA = 0.00030743 m, counter = 50 / 51 , time = 0.013625 m, info = 9 A1+D4 4A1  
get_cls(1145): inv      = A1+D4 , rank = 9 
get_cls(1146): bas1_lst = 10 [('2A1', 2), ('2A2', 1), ('4A1', 1), ('A0', 1), ('A1', 1), ('A1+A2', 1), ('A2', 1), ('A3', 1), ('A4', 1)] 
get_cls(1147): bas2_lst = 2 [('A0', 1), ('A1', 1)] 
get_cls(1148): bas3_lst = 49 [('2A1', 16), ('4A1', 24), ('A0', 1), ('A2', 8)] 
update(86): ETA = 3.4968e-6 m, counter = 0 / 980 , time = 3.4968e-7 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', 'A0', 'A0')  
get_cls(1168): 	 appended:  (9, 'A1+D4', 'A0') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A0', 'A0') 
get_cls(1168): 	 appended:  (9, 'A1+D4', '2A1') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A0', '2A1') 
get_cls(1168): 	 appended:  (9, 'A1+D4', '[A2]') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A0', 'A2') 
get_cls(1168): 	 appended:  (9, 'A1+D4', '4A1') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A0', '4A1') 
get_cls(1168): 	 appended:  (9, 'A1+D4', '{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A1', 'A0') 
update(86): ETA = 100.00 m, counter = 98 / 980 , time = 11.111 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A1', 'A0', 'A0')  
get_cls(1168): 	 appended:  (9, 'A1+D4', '2A1+{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A1', 'A0', '2A1') 
get_cls(1168): 	 appended:  (9, 'A1+D4', '[A3]') , ( bas1.type, bas2.type, bas3.type ) = ('A1', 'A0', '2A1') 
get_cls(1168): 	 appended:  (9, 'A1+D4', '{A1}+[A2]') , ( bas1.type, bas2.type, bas3.type ) = ('A1', 'A0', 'A2') 
get_cls(1168): 	 appended:  (9, 'A1+D4', '4A1+{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A1', 'A0', '4A1') 
get_cls(1168): 	 appended:  (9, 'A1+D4', '2{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A1', 'A1', 'A0') 
update(86): ETA = 40.785 m, counter = 196 / 980 , time = 16.210 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('2A1', 'A0', 'A0')  
get_cls(1168): 	 appended:  (9, 'A1+D4', '2A2') , ( bas1.type, bas2.type, bas3.type ) = ('2A1', 'A0', '2A1') 
get_cls(1168): 	 appended:  (9, 'A1+D4', '2A1+[A2]') , ( bas1.type, bas2.type, bas3.type ) = ('2A1', 'A0', 'A2') 
update(86): ETA = 12.722 m, counter = 294 / 980 , time = 18.027 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('2A1', 'A0', 'A0')  
get_cls(1168): 	 appended:  (9, 'A1+D4', '{A1}+[A3]') , ( bas1.type, bas2.type, bas3.type ) = ('2A1', 'A0', '2A1') 
get_cls(1168): 	 appended:  (9, 'A1+D4', '2{A1}+[A2]') , ( bas1.type, bas2.type, bas3.type ) = ('2A1', 'A0', 'A2') 
get_cls(1168): 	 appended:  (9, 'A1+D4', '3{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('2A1', 'A1', 'A0') 
update(86): ETA = 11.835 m, counter = 392 / 980 , time = 19.999 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A2', 'A0', 'A0')  
get_cls(1168): 	 appended:  (9, 'A1+D4', '[A4]') , ( bas1.type, bas2.type, bas3.type ) = ('A2', 'A0', '2A1') 
get_cls(1168): 	 appended:  (9, 'A1+D4', '2[A2]') , ( bas1.type, bas2.type, bas3.type ) = ('A2', 'A0', 'A2') 
get_cls(1168): 	 appended:  (9, 'A1+D4', '4A1+[A2]') , ( bas1.type, bas2.type, bas3.type ) = ('A2', 'A0', '4A1') 
update(86): ETA = 10.121 m, counter = 490 / 980 , time = 22.024 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A1+A2', 'A0', 'A0')  
get_cls(1168): 	 appended:  (9, 'A1+D4', '{A1}+[A4]') , ( bas1.type, bas2.type, bas3.type ) = ('A1+A2', 'A0', '2A1') 
get_cls(1168): 	 appended:  (9, 'A1+D4', '[A2]+[A3]') , ( bas1.type, bas2.type, bas3.type ) = ('A1+A2', 'A0', '2A1') 
get_cls(1168): 	 appended:  (9, 'A1+D4', '{A1}+2[A2]') , ( bas1.type, bas2.type, bas3.type ) = ('A1+A2', 'A0', 'A2') 
update(86): ETA = 3.8499 m, counter = 588 / 980 , time = 22.986 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A3', 'A0', 'A0')  
get_cls(1168): 	 appended:  (9, 'A1+D4', '[A5]') , ( bas1.type, bas2.type, bas3.type ) = ('A3', 'A0', '2A1') 
update(86): ETA = 2.3390 m, counter = 686 / 980 , time = 23.766 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('2A2', 'A0', 'A0')  
get_cls(1168): 	 appended:  (9, 'A1+D4', '[A2]+[A4]') , ( bas1.type, bas2.type, bas3.type ) = ('2A2', 'A0', '2A1') 
get_cls(1168): 	 appended:  (9, 'A1+D4', '3[A2]') , ( bas1.type, bas2.type, bas3.type ) = ('2A2', 'A0', 'A2') 
update(86): ETA = 1.0730 m, counter = 784 / 980 , time = 24.302 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('4A1', 'A0', 'A0')  
get_cls(1168): 	 appended:  (9, 'A1+D4', '2A3') , ( bas1.type, bas2.type, bas3.type ) = ('4A1', 'A0', '2A1') 
update(86): ETA = 0.68920 m, counter = 882 / 980 , time = 24.991 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A4', 'A0', 'A0')  
get_cls(1168): 	 appended:  (9, 'A1+D4', '[A6]') , ( bas1.type, bas2.type, bas3.type ) = ('A4', 'A0', '2A1') 
get_cls(1070): looping through inv_lst: (9, 'D6', [e2-e3, e3-e4, e4-e5, e5-e6, e6-e7, e0-e1-e2-e3]) 
get_part_roots(875): r_lst      = 120 [e1-e2, e2-e3, e1-e3, e3-e4, e2-e4, e1-e4, e4-e5, e3-e5, e2-e5, e1-e5, e5-e6, e4-e6, e3-e6, e2-e6, e1-e6, e6-e7, e5-e7, e4-e7, e3-e7, e2-e7, e1-e7, e7-e8, e6-e8, e5-e8, e4-e8, e3-e8, e2-e8, e1-e8, e0-e1-e2-e3, e0-e1-e2-e4, e0-e1-e3-e4, e0-e2-e3-e4, e0-e1-e2-e5, e0-e1-e3-e5, e0-e2-e3-e5, e0-e1-e4-e5, e0-e2-e4-e5, e0-e3-e4-e5, e0-e1-e2-e6, e0-e1-e3-e6, e0-e2-e3-e6, e0-e1-e4-e6, e0-e2-e4-e6, e0-e3-e4-e6, e0-e1-e5-e6, e0-e2-e5-e6, e0-e3-e5-e6, e0-e4-e5-e6, e0-e1-e2-e7, e0-e1-e3-e7, e0-e2-e3-e7, e0-e1-e4-e7, e0-e2-e4-e7, e0-e3-e4-e7, e0-e1-e5-e7, e0-e2-e5-e7, e0-e3-e5-e7, e0-e4-e5-e7, e0-e1-e6-e7, e0-e2-e6-e7, e0-e3-e6-e7, e0-e4-e6-e7, e0-e5-e6-e7, e0-e1-e2-e8, e0-e1-e3-e8, e0-e2-e3-e8, e0-e1-e4-e8, e0-e2-e4-e8, e0-e3-e4-e8, e0-e1-e5-e8, e0-e2-e5-e8, e0-e3-e5-e8, e0-e4-e5-e8, e0-e1-e6-e8, e0-e2-e6-e8, e0-e3-e6-e8, e0-e4-e6-e8, e0-e5-e6-e8, e0-e1-e7-e8, e0-e2-e7-e8, e0-e3-e7-e8, e0-e4-e7-e8, e0-e5-e7-e8, e0-e6-e7-e8, 2e0-e1-e2-e3-e4-e5-e6, 2e0-e1-e2-e3-e4-e5-e7, 2e0-e1-e2-e3-e4-e6-e7, 2e0-e1-e2-e3-e5-e6-e7, 2e0-e1-e2-e4-e5-e6-e7, 2e0-e1-e3-e4-e5-e6-e7, 2e0-e2-e3-e4-e5-e6-e7, 2e0-e1-e2-e3-e4-e5-e8, 2e0-e1-e2-e3-e4-e6-e8, 2e0-e1-e2-e3-e5-e6-e8, 2e0-e1-e2-e4-e5-e6-e8, 2e0-e1-e3-e4-e5-e6-e8, 2e0-e2-e3-e4-e5-e6-e8, 2e0-e1-e2-e3-e4-e7-e8, 2e0-e1-e2-e3-e5-e7-e8, 2e0-e1-e2-e4-e5-e7-e8, 2e0-e1-e3-e4-e5-e7-e8, 2e0-e2-e3-e4-e5-e7-e8, 2e0-e1-e2-e3-e6-e7-e8, 2e0-e1-e2-e4-e6-e7-e8, 2e0-e1-e3-e4-e6-e7-e8, 2e0-e2-e3-e4-e6-e7-e8, 2e0-e1-e2-e5-e6-e7-e8, 2e0-e1-e3-e5-e6-e7-e8, 2e0-e2-e3-e5-e6-e7-e8, 2e0-e1-e4-e5-e6-e7-e8, 2e0-e2-e4-e5-e6-e7-e8, 2e0-e3-e4-e5-e6-e7-e8, 3e0-2e1-e2-e3-e4-e5-e6-e7-e8, 3e0-e1-2e2-e3-e4-e5-e6-e7-e8, 3e0-e1-e2-2e3-e4-e5-e6-e7-e8, 3e0-e1-e2-e3-2e4-e5-e6-e7-e8, 3e0-e1-e2-e3-e4-2e5-e6-e7-e8, 3e0-e1-e2-e3-e4-e5-2e6-e7-e8, 3e0-e1-e2-e3-e4-e5-e6-2e7-e8, 3e0-e1-e2-e3-e4-e5-e6-e7-2e8] 
get_part_roots(876): s_lst      = 2 [2e0-e2-e3-e4-e5-e6-e7, 3e0-e1-e2-e3-e4-e5-e6-e7-2e8] 
get_part_roots(877): tq1_lst    = 88 [e1-e2, e1-e3, e1-e4, e1-e5, e1-e6, e1-e7, e7-e8, e6-e8, e5-e8, e4-e8, e3-e8, e2-e8, e1-e8, e0-e2-e3-e4, e0-e2-e3-e5, e0-e2-e4-e5, e0-e3-e4-e5, e0-e2-e3-e6, e0-e2-e4-e6, e0-e3-e4-e6, e0-e2-e5-e6, e0-e3-e5-e6, e0-e4-e5-e6, e0-e2-e3-e7, e0-e2-e4-e7, e0-e3-e4-e7, e0-e2-e5-e7, e0-e3-e5-e7, e0-e4-e5-e7, e0-e2-e6-e7, e0-e3-e6-e7, e0-e4-e6-e7, e0-e5-e6-e7, e0-e1-e2-e8, e0-e1-e3-e8, e0-e2-e3-e8, e0-e1-e4-e8, e0-e2-e4-e8, e0-e3-e4-e8, e0-e1-e5-e8, e0-e2-e5-e8, e0-e3-e5-e8, e0-e4-e5-e8, e0-e1-e6-e8, e0-e2-e6-e8, e0-e3-e6-e8, e0-e4-e6-e8, e0-e5-e6-e8, e0-e1-e7-e8, e0-e2-e7-e8, e0-e3-e7-e8, e0-e4-e7-e8, e0-e5-e7-e8, e0-e6-e7-e8, 2e0-e1-e2-e3-e4-e5-e6, 2e0-e1-e2-e3-e4-e5-e7, 2e0-e1-e2-e3-e4-e6-e7, 2e0-e1-e2-e3-e5-e6-e7, 2e0-e1-e2-e4-e5-e6-e7, 2e0-e1-e3-e4-e5-e6-e7, 2e0-e1-e2-e3-e4-e5-e8, 2e0-e1-e2-e3-e4-e6-e8, 2e0-e1-e2-e3-e5-e6-e8, 2e0-e1-e2-e4-e5-e6-e8, 2e0-e1-e3-e4-e5-e6-e8, 2e0-e2-e3-e4-e5-e6-e8, 2e0-e1-e2-e3-e4-e7-e8, 2e0-e1-e2-e3-e5-e7-e8, 2e0-e1-e2-e4-e5-e7-e8, 2e0-e1-e3-e4-e5-e7-e8, 2e0-e2-e3-e4-e5-e7-e8, 2e0-e1-e2-e3-e6-e7-e8, 2e0-e1-e2-e4-e6-e7-e8, 2e0-e1-e3-e4-e6-e7-e8, 2e0-e2-e3-e4-e6-e7-e8, 2e0-e1-e2-e5-e6-e7-e8, 2e0-e1-e3-e5-e6-e7-e8, 2e0-e2-e3-e5-e6-e7-e8, 2e0-e1-e4-e5-e6-e7-e8, 2e0-e2-e4-e5-e6-e7-e8, 2e0-e3-e4-e5-e6-e7-e8, 3e0-2e1-e2-e3-e4-e5-e6-e7-e8, 3e0-e1-2e2-e3-e4-e5-e6-e7-e8, 3e0-e1-e2-2e3-e4-e5-e6-e7-e8, 3e0-e1-e2-e3-2e4-e5-e6-e7-e8, 3e0-e1-e2-e3-e4-2e5-e6-e7-e8, 3e0-e1-e2-e3-e4-e5-2e6-e7-e8, 3e0-e1-e2-e3-e4-e5-e6-2e7-e8] 
get_part_roots(878): tq_lst     = 88 [e1-e2, e1-e3, e1-e4, e1-e5, e1-e6, e1-e7, e7-e8, e6-e8, e5-e8, e4-e8, e3-e8, e2-e8, e1-e8, e0-e2-e3-e4, e0-e2-e3-e5, e0-e2-e4-e5, e0-e3-e4-e5, e0-e2-e3-e6, e0-e2-e4-e6, e0-e3-e4-e6, e0-e2-e5-e6, e0-e3-e5-e6, e0-e4-e5-e6, e0-e2-e3-e7, e0-e2-e4-e7, e0-e3-e4-e7, e0-e2-e5-e7, e0-e3-e5-e7, e0-e4-e5-e7, e0-e2-e6-e7, e0-e3-e6-e7, e0-e4-e6-e7, e0-e5-e6-e7, e0-e1-e2-e8, e0-e1-e3-e8, e0-e2-e3-e8, e0-e1-e4-e8, e0-e2-e4-e8, e0-e3-e4-e8, e0-e1-e5-e8, e0-e2-e5-e8, e0-e3-e5-e8, e0-e4-e5-e8, e0-e1-e6-e8, e0-e2-e6-e8, e0-e3-e6-e8, e0-e4-e6-e8, e0-e5-e6-e8, e0-e1-e7-e8, e0-e2-e7-e8, e0-e3-e7-e8, e0-e4-e7-e8, e0-e5-e7-e8, e0-e6-e7-e8, 2e0-e1-e2-e3-e4-e5-e6, 2e0-e1-e2-e3-e4-e5-e7, 2e0-e1-e2-e3-e4-e6-e7, 2e0-e1-e2-e3-e5-e6-e7, 2e0-e1-e2-e4-e5-e6-e7, 2e0-e1-e3-e4-e5-e6-e7, 2e0-e1-e2-e3-e4-e5-e8, 2e0-e1-e2-e3-e4-e6-e8, 2e0-e1-e2-e3-e5-e6-e8, 2e0-e1-e2-e4-e5-e6-e8, 2e0-e1-e3-e4-e5-e6-e8, 2e0-e2-e3-e4-e5-e6-e8, 2e0-e1-e2-e3-e4-e7-e8, 2e0-e1-e2-e3-e5-e7-e8, 2e0-e1-e2-e4-e5-e7-e8, 2e0-e1-e3-e4-e5-e7-e8, 2e0-e2-e3-e4-e5-e7-e8, 2e0-e1-e2-e3-e6-e7-e8, 2e0-e1-e2-e4-e6-e7-e8, 2e0-e1-e3-e4-e6-e7-e8, 2e0-e2-e3-e4-e6-e7-e8, 2e0-e1-e2-e5-e6-e7-e8, 2e0-e1-e3-e5-e6-e7-e8, 2e0-e2-e3-e5-e6-e7-e8, 2e0-e1-e4-e5-e6-e7-e8, 2e0-e2-e4-e5-e6-e7-e8, 2e0-e3-e4-e5-e6-e7-e8, 3e0-2e1-e2-e3-e4-e5-e6-e7-e8, 3e0-e1-2e2-e3-e4-e5-e6-e7-e8, 3e0-e1-e2-2e3-e4-e5-e6-e7-e8, 3e0-e1-e2-e3-2e4-e5-e6-e7-e8, 3e0-e1-e2-e3-e4-2e5-e6-e7-e8, 3e0-e1-e2-e3-e4-e5-2e6-e7-e8, 3e0-e1-e2-e3-e4-e5-e6-2e7-e8] 
get_part_roots(879): q_lst      = 44 [e1-e2, e1-e3, e1-e4, e1-e5, e1-e6, e1-e7, e7-e8, e6-e8, e5-e8, e4-e8, e3-e8, e2-e8, e1-e8, e0-e2-e3-e4, e0-e2-e3-e5, e0-e2-e4-e5, e0-e3-e4-e5, e0-e2-e3-e6, e0-e2-e4-e6, e0-e3-e4-e6, e0-e2-e5-e6, e0-e3-e5-e6, e0-e4-e5-e6, e0-e2-e3-e8, e0-e2-e4-e8, e0-e3-e4-e8, e0-e2-e5-e8, e0-e3-e5-e8, e0-e4-e5-e8, e0-e2-e6-e8, e0-e3-e6-e8, e0-e4-e6-e8, e0-e5-e6-e8, e0-e2-e7-e8, e0-e3-e7-e8, e0-e4-e7-e8, e0-e5-e7-e8, e0-e6-e7-e8, 2e0-e2-e3-e4-e5-e6-e8, 2e0-e2-e3-e4-e5-e7-e8, 2e0-e2-e3-e4-e6-e7-e8, 2e0-e2-e3-e5-e6-e7-e8, 2e0-e2-e4-e5-e6-e7-e8, 2e0-e3-e4-e5-e6-e7-e8] 
get_part_roots(880):        M --> 44 [2e0-e1-e3-e4-e5-e6-e7, 2e0-e1-e2-e4-e5-e6-e7, 2e0-e1-e2-e3-e5-e6-e7, 2e0-e1-e2-e3-e4-e6-e7, 2e0-e1-e2-e3-e4-e5-e7, 2e0-e1-e2-e3-e4-e5-e6, e0-e1-e7-e8, e0-e1-e6-e8, e0-e1-e5-e8, e0-e1-e4-e8, e0-e1-e3-e8, e0-e1-e2-e8, 3e0-2e1-e2-e3-e4-e5-e6-e7-e8, e0-e5-e6-e7, e0-e4-e6-e7, e0-e3-e6-e7, e0-e2-e6-e7, e0-e4-e5-e7, e0-e3-e5-e7, e0-e2-e5-e7, e0-e3-e4-e7, e0-e2-e4-e7, e0-e2-e3-e7, 2e0-e1-e4-e5-e6-e7-e8, 2e0-e1-e3-e5-e6-e7-e8, 2e0-e1-e2-e5-e6-e7-e8, 2e0-e1-e3-e4-e6-e7-e8, 2e0-e1-e2-e4-e6-e7-e8, 2e0-e1-e2-e3-e6-e7-e8, 2e0-e1-e3-e4-e5-e7-e8, 2e0-e1-e2-e4-e5-e7-e8, 2e0-e1-e2-e3-e5-e7-e8, 2e0-e1-e2-e3-e4-e7-e8, 2e0-e1-e3-e4-e5-e6-e8, 2e0-e1-e2-e4-e5-e6-e8, 2e0-e1-e2-e3-e5-e6-e8, 2e0-e1-e2-e3-e4-e6-e8, 2e0-e1-e2-e3-e4-e5-e8, 3e0-e1-e2-e3-e4-e5-e6-2e7-e8, 3e0-e1-e2-e3-e4-e5-2e6-e7-e8, 3e0-e1-e2-e3-e4-2e5-e6-e7-e8, 3e0-e1-e2-e3-2e4-e5-e6-e7-e8, 3e0-e1-e2-2e3-e4-e5-e6-e7-e8, 3e0-e1-2e2-e3-e4-e5-e6-e7-e8] 
get_part_roots(881): inv.Md_lst = D6 [e2-e3, e3-e4, e4-e5, e5-e6, e6-e7, e0-e1-e2-e3] , rank = 9 
import_cls(1015): importing:  (9, 'D6', 'A0') [e2-e3, e3-e4, e4-e5, e5-e6, e6-e7, e0-e1-e2-e3] == [e2-e3, e3-e4, e4-e5, e5-e6, e6-e7, e0-e1-e2-e3] 
import_cls(1015): importing:  (9, 'D6', '{A1}') [e2-e3, e3-e4, e4-e5, e5-e6, e6-e7, e0-e1-e2-e3] == [e2-e3, e3-e4, e4-e5, e5-e6, e6-e7, e0-e1-e2-e3] 
import_cls(1015): importing:  (9, 'D6', '[A2]') [e2-e3, e3-e4, e4-e5, e5-e6, e6-e7, e0-e1-e2-e3] == [e2-e3, e3-e4, e4-e5, e5-e6, e6-e7, e0-e1-e2-e3] 
get_cls(1086): looping through inv_lst continued after recursive call: (9, 'D6', [e2-e3, e3-e4, e4-e5, e5-e6, e6-e7, e0-e1-e2-e3]) 
get_cls(1094): bas1_lst = 3 [('D6', 'A0'), ('D6', 'A1'), ('D6', 'A2')] 
get_cls(1095): s_lst    = 1 [3e0-e1-e2-e3-e4-e5-e6-e7-2e8] 
get_cls(1096): q_lst    = 28 [e7-e8, e6-e8, e5-e8, e4-e8, e3-e8, e2-e8, e1-e8, e0-e2-e3-e8, e0-e2-e4-e8, e0-e3-e4-e8, e0-e2-e5-e8, e0-e3-e5-e8, e0-e4-e5-e8, e0-e2-e6-e8, e0-e3-e6-e8, e0-e4-e6-e8, e0-e5-e6-e8, e0-e2-e7-e8, e0-e3-e7-e8, e0-e4-e7-e8, e0-e5-e7-e8, e0-e6-e7-e8, 2e0-e2-e3-e4-e5-e6-e8, 2e0-e2-e3-e4-e5-e7-e8, 2e0-e2-e3-e4-e6-e7-e8, 2e0-e2-e3-e5-e6-e7-e8, 2e0-e2-e4-e5-e6-e7-e8, 2e0-e3-e4-e5-e6-e7-e8] 
update(86): ETA = 0.00030413 m, counter = 0 / 77 , time = 3.9498e-6 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D6', 'A0')  
update(86): ETA = 0.083187 m, counter = 1 / 77 , time = 0.0010985 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D6', '{A1}')  
update(86): ETA = 0.35050 m, counter = 2 / 77 , time = 0.0057719 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D6', '2{A1}')  
update(86): ETA = 17.618 m, counter = 3 / 77 , time = 0.24385 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D6', '{A2}')  
update(86): ETA = 0.38047 m, counter = 4 / 77 , time = 0.24906 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D6', '3{A1}')  
update(86): ETA = 15.263 m, counter = 5 / 77 , time = 0.46105 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D6', '{A1}+{A2}')  
update(86): ETA = 0.37761 m, counter = 6 / 77 , time = 0.46637 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D6', '{A3}')  
update(86): ETA = 0.36227 m, counter = 7 / 77 , time = 0.47154 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D6', '2{A1}+{A2}')  
update(86): ETA = 0.36062 m, counter = 8 / 77 , time = 0.47677 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D6', '2{A2}')  
update(86): ETA = 0.35170 m, counter = 9 / 77 , time = 0.48194 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D6', '4{A1}')  
update(86): ETA = 16.261 m, counter = 10 / 77 , time = 0.72464 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D6', '4{A1}')  
update(86): ETA = 0.019356 m, counter = 11 / 77 , time = 0.72494 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D6', '{A1}+{A3}')  
update(86): ETA = 0.34275 m, counter = 12 / 77 , time = 0.73021 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D6', '{A4}')  
update(86): ETA = 0.33811 m, counter = 13 / 77 , time = 0.73549 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D6', '{D4}')  
update(86): ETA = 0.33403 m, counter = 14 / 77 , time = 0.74079 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D6', '2{A1}+{A3}')  
update(86): ETA = 0.023561 m, counter = 15 / 77 , time = 0.74117 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D6', '2{A1}+{A3}')  
update(86): ETA = 0.020054 m, counter = 16 / 77 , time = 0.74150 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D6', '3{A1}+{A2}')  
update(86): ETA = 0.018167 m, counter = 17 / 77 , time = 0.74181 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D6', '5{A1}')  
update(86): ETA = 0.021748 m, counter = 18 / 77 , time = 0.74217 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D6', '{A1}+2{A2}')  
update(86): ETA = 0.025341 m, counter = 19 / 77 , time = 0.74261 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D6', '{A1}+{A4}')  
update(86): ETA = 0.025046 m, counter = 20 / 77 , time = 0.74305 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D6', '{A1}+{D4}')  
update(86): ETA = 0.023096 m, counter = 21 / 77 , time = 0.74346 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D6', '{A2}+{A3}')  
update(86): ETA = 0.028400 m, counter = 22 / 77 , time = 0.74398 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D6', '{A5}')  
update(86): ETA = 0.027431 m, counter = 23 / 77 , time = 0.74449 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D6', '{D5}')  
update(86): ETA = 0.024410 m, counter = 24 / 77 , time = 0.74495 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D6', '2{A1}+2{A2}')  
update(86): ETA = 0.027531 m, counter = 25 / 77 , time = 0.74548 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D6', '2{A1}+{A4}')  
update(86): ETA = 0.027163 m, counter = 26 / 77 , time = 0.74601 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D6', '2{A1}+{D4}')  
update(86): ETA = 0.027487 m, counter = 27 / 77 , time = 0.74656 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D6', '2{A3}')  
update(86): ETA = 0.026935 m, counter = 28 / 77 , time = 0.74711 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D6', '2{A3}')  
update(86): ETA = 0.022430 m, counter = 29 / 77 , time = 0.74758 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D6', '3{A1}+{A3}')  
update(86): ETA = 0.023644 m, counter = 30 / 77 , time = 0.74808 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D6', '3{A2}')  
update(86): ETA = 0.019689 m, counter = 31 / 77 , time = 0.74851 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D6', '4{A1}+{A2}')  
update(86): ETA = 0.017825 m, counter = 32 / 77 , time = 0.74890 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D6', '6{A1}')  
update(86): ETA = 0.022242 m, counter = 33 / 77 , time = 0.74941 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D6', '{A1}+{A2}+{A3}')  
update(86): ETA = 0.025682 m, counter = 34 / 77 , time = 0.75001 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D6', '{A1}+{A5}')  
update(86): ETA = 0.025171 m, counter = 35 / 77 , time = 0.75061 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D6', '{A1}+{A5}')  
update(86): ETA = 0.024353 m, counter = 36 / 77 , time = 0.75120 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D6', '{A1}+{D5}')  
update(86): ETA = 0.022484 m, counter = 37 / 77 , time = 0.75176 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D6', '{A2}+{A4}')  
update(86): ETA = 0.022453 m, counter = 38 / 77 , time = 0.75234 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D6', '{A2}+{D4}')  
update(86): ETA = 0.025812 m, counter = 39 / 77 , time = 0.75302 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D6', '{A6}')  
update(86): ETA = 0.025165 m, counter = 40 / 77 , time = 0.75370 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D6', '{D6}')  
update(86): ETA = 0.024652 m, counter = 41 / 77 , time = 0.75438 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D6', '{E6}')  
update(86): ETA = 0.021286 m, counter = 42 / 77 , time = 0.75499 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D6', '2{A1}+{A2}+{A3}')  
update(86): ETA = 0.023888 m, counter = 43 / 77 , time = 0.75569 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D6', '2{A1}+{A5}')  
update(86): ETA = 0.023677 m, counter = 44 / 77 , time = 0.75641 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D6', '2{A1}+{D5}')  
update(86): ETA = 0.020364 m, counter = 45 / 77 , time = 0.75705 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D6', '3{A1}+{D4}')  
update(86): ETA = 0.017887 m, counter = 46 / 77 , time = 0.75762 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D6', '4{A1}+{A3}')  
update(86): ETA = 0.014993 m, counter = 47 / 77 , time = 0.75812 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D6', '7{A1}')  
update(86): ETA = 0.018968 m, counter = 48 / 77 , time = 0.75878 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D6', '{A1}+2{A3}')  
update(86): ETA = 0.016705 m, counter = 49 / 77 , time = 0.75937 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D6', '{A1}+3{A2}')  
update(86): ETA = 0.018358 m, counter = 50 / 77 , time = 0.76005 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D6', '{A1}+{A2}+{A4}')  
update(86): ETA = 0.020516 m, counter = 51 / 77 , time = 0.76084 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D6', '{A1}+{A6}')  
update(86): ETA = 0.019552 m, counter = 52 / 77 , time = 0.76163 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D6', '{A1}+{D6}')  
update(86): ETA = 0.018898 m, counter = 53 / 77 , time = 0.76241 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D6', '{A1}+{E6}')  
update(86): ETA = 0.016843 m, counter = 54 / 77 , time = 0.76314 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D6', '{A2}+{A5}')  
update(86): ETA = 0.016201 m, counter = 55 / 77 , time = 0.76388 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D6', '{A2}+{D5}')  
update(86): ETA = 0.014884 m, counter = 56 / 77 , time = 0.76459 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D6', '{A3}+{A4}')  
update(86): ETA = 0.014485 m, counter = 57 / 77 , time = 0.76531 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D6', '{A3}+{D4}')  
update(86): ETA = 0.016718 m, counter = 58 / 77 , time = 0.76619 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D6', '{A7}')  
update(86): ETA = 0.015860 m, counter = 59 / 77 , time = 0.76708 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D6', '{A7}')  
update(86): ETA = 0.014892 m, counter = 60 / 77 , time = 0.76795 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D6', '{D7}')  
update(86): ETA = 0.014183 m, counter = 61 / 77 , time = 0.76884 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D6', '{E7}')  
update(86): ETA = 0.011785 m, counter = 62 / 77 , time = 0.76962 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D6', '2{A1}+2{A3}')  
update(86): ETA = 0.012668 m, counter = 63 / 77 , time = 0.77053 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D6', '2{A1}+{D6}')  
update(86): ETA = 0.011520 m, counter = 64 / 77 , time = 0.77141 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D6', '2{A4}')  
update(86): ETA = 0.010717 m, counter = 65 / 77 , time = 0.77231 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D6', '2{D4}')  
update(86): ETA = 0.0084122 m, counter = 66 / 77 , time = 0.77307 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D6', '4{A1}+{D4}')  
update(86): ETA = 0.0075030 m, counter = 67 / 77 , time = 0.77382 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D6', '4{A2}')  
update(86): ETA = 0.0055644 m, counter = 68 / 77 , time = 0.77444 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D6', '8{A1}')  
update(86): ETA = 0.0068428 m, counter = 69 / 77 , time = 0.77530 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D6', '{A1}+{A2}+{A5}')  
update(86): ETA = 0.0069745 m, counter = 70 / 77 , time = 0.77629 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D6', '{A1}+{A7}')  
update(86): ETA = 0.0060768 m, counter = 71 / 77 , time = 0.77731 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D6', '{A1}+{E7}')  
update(86): ETA = 0.0047128 m, counter = 72 / 77 , time = 0.77825 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D6', '{A2}+{E6}')  
update(86): ETA = 0.0036099 m, counter = 73 / 77 , time = 0.77915 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D6', '{A3}+{D5}')  
update(86): ETA = 0.0033128 m, counter = 74 / 77 , time = 0.78025 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D6', '{A8}')  
update(86): ETA = 0.0022335 m, counter = 75 / 77 , time = 0.78137 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D6', '{D8}')  
update(86): ETA = 0.0011097 m, counter = 76 / 77 , time = 0.78248 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'D6', '{E8}')  
get_cls(1130): Setting Dynkin types of 61 items...please wait... 
update(86): ETA = 0.0029456 m, counter = 0 / 61 , time = 0.00028973 m, info = 9 D6 A0  
update(86): ETA = 0.017199 m, counter = 6 / 61 , time = 0.0021660 m, info = 9 D6 2A1  
update(86): ETA = 0.016184 m, counter = 12 / 61 , time = 0.0041478 m, info = 9 D6 A2  
update(86): ETA = 0.014325 m, counter = 18 / 61 , time = 0.0061466 m, info = 9 D6 A2  
update(86): ETA = 0.012377 m, counter = 24 / 61 , time = 0.0081537 m, info = 9 D6 A2  
update(86): ETA = 0.0099335 m, counter = 30 / 61 , time = 0.010076 m, info = 9 D6 2A1  
update(86): ETA = 0.0099090 m, counter = 36 / 61 , time = 0.012454 m, info = 9 D6 4A1  
update(86): ETA = 0.0074803 m, counter = 42 / 61 , time = 0.014817 m, info = 9 D6 4A1  
update(86): ETA = 0.0051439 m, counter = 48 / 61 , time = 0.017191 m, info = 9 D6 4A1  
update(86): ETA = 0.0027535 m, counter = 54 / 61 , time = 0.019551 m, info = 9 D6 4A1  
update(86): ETA = 0.00039533 m, counter = 60 / 61 , time = 0.021923 m, info = 9 D6 4A1  
get_cls(1145): inv      = D6 , rank = 9 
get_cls(1146): bas1_lst = 3 [('A0', 1), ('A1', 1), ('A2', 1)] 
get_cls(1147): bas2_lst = 2 [('A0', 1), ('A1', 1)] 
get_cls(1148): bas3_lst = 59 [('2A1', 12), ('4A1', 30), ('A0', 1), ('A2', 16)] 
update(86): ETA = 4.9032e-6 m, counter = 0 / 354 , time = 4.8478e-7 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', 'A0', 'A0')  
get_cls(1168): 	 appended:  (9, 'D6', 'A0') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A0', 'A0') 
get_cls(1168): 	 appended:  (9, 'D6', '2A1') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A0', '2A1') 
get_cls(1168): 	 appended:  (9, 'D6', '[A2]') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A0', 'A2') 
get_cls(1168): 	 appended:  (9, 'D6', '4A1') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A0', '4A1') 
update(86): ETA = 87.343 m, counter = 35 / 354 , time = 9.5830 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', 'A0', '4A1')  
get_cls(1168): 	 appended:  (9, 'D6', '{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A1', 'A0') 
update(86): ETA = 26.350 m, counter = 70 / 354 , time = 12.830 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', 'A1', '2A1')  
update(86): ETA = 0.0031867 m, counter = 105 / 354 , time = 12.831 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', 'A1', '4A1')  
get_cls(1168): 	 appended:  (9, 'D6', '[A3]') , ( bas1.type, bas2.type, bas3.type ) = ('A1', 'A0', '2A1') 
get_cls(1168): 	 appended:  (9, 'D6', '{A1}+[A2]') , ( bas1.type, bas2.type, bas3.type ) = ('A1', 'A0', 'A2') 
update(86): ETA = 17.334 m, counter = 140 / 354 , time = 15.666 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A1', 'A0', 'A2')  
update(86): ETA = 5.5997 m, counter = 175 / 354 , time = 16.761 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A1', 'A0', '4A1')  
get_cls(1168): 	 appended:  (9, 'D6', '2{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A1', 'A1', 'A0') 
update(86): ETA = 1.0169 m, counter = 210 / 354 , time = 17.008 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A1', 'A1', '4A1')  
get_cls(1168): 	 appended:  (9, 'D6', '[A4]') , ( bas1.type, bas2.type, bas3.type ) = ('A2', 'A0', '2A1') 
update(86): ETA = 2.1938 m, counter = 245 / 354 , time = 17.712 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A2', 'A0', '2A1')  
get_cls(1168): 	 appended:  (9, 'D6', '2[A2]') , ( bas1.type, bas2.type, bas3.type ) = ('A2', 'A0', 'A2') 
update(86): ETA = 1.8560 m, counter = 280 / 354 , time = 18.590 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A2', 'A0', '4A1')  
update(86): ETA = 0.17281 m, counter = 315 / 354 , time = 18.745 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A2', 'A1', 'A2')  
update(86): ETA = 0.00018967 m, counter = 350 / 354 , time = 18.747 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A2', 'A1', '4A1')  
get_cls(1070): looping through inv_lst: (9, 'E7', [e1-e2, e2-e3, e3-e4, e4-e5, e5-e6, e6-e7, e0-e1-e2-e3]) 
get_part_roots(875): r_lst      = 120 [e1-e2, e2-e3, e1-e3, e3-e4, e2-e4, e1-e4, e4-e5, e3-e5, e2-e5, e1-e5, e5-e6, e4-e6, e3-e6, e2-e6, e1-e6, e6-e7, e5-e7, e4-e7, e3-e7, e2-e7, e1-e7, e7-e8, e6-e8, e5-e8, e4-e8, e3-e8, e2-e8, e1-e8, e0-e1-e2-e3, e0-e1-e2-e4, e0-e1-e3-e4, e0-e2-e3-e4, e0-e1-e2-e5, e0-e1-e3-e5, e0-e2-e3-e5, e0-e1-e4-e5, e0-e2-e4-e5, e0-e3-e4-e5, e0-e1-e2-e6, e0-e1-e3-e6, e0-e2-e3-e6, e0-e1-e4-e6, e0-e2-e4-e6, e0-e3-e4-e6, e0-e1-e5-e6, e0-e2-e5-e6, e0-e3-e5-e6, e0-e4-e5-e6, e0-e1-e2-e7, e0-e1-e3-e7, e0-e2-e3-e7, e0-e1-e4-e7, e0-e2-e4-e7, e0-e3-e4-e7, e0-e1-e5-e7, e0-e2-e5-e7, e0-e3-e5-e7, e0-e4-e5-e7, e0-e1-e6-e7, e0-e2-e6-e7, e0-e3-e6-e7, e0-e4-e6-e7, e0-e5-e6-e7, e0-e1-e2-e8, e0-e1-e3-e8, e0-e2-e3-e8, e0-e1-e4-e8, e0-e2-e4-e8, e0-e3-e4-e8, e0-e1-e5-e8, e0-e2-e5-e8, e0-e3-e5-e8, e0-e4-e5-e8, e0-e1-e6-e8, e0-e2-e6-e8, e0-e3-e6-e8, e0-e4-e6-e8, e0-e5-e6-e8, e0-e1-e7-e8, e0-e2-e7-e8, e0-e3-e7-e8, e0-e4-e7-e8, e0-e5-e7-e8, e0-e6-e7-e8, 2e0-e1-e2-e3-e4-e5-e6, 2e0-e1-e2-e3-e4-e5-e7, 2e0-e1-e2-e3-e4-e6-e7, 2e0-e1-e2-e3-e5-e6-e7, 2e0-e1-e2-e4-e5-e6-e7, 2e0-e1-e3-e4-e5-e6-e7, 2e0-e2-e3-e4-e5-e6-e7, 2e0-e1-e2-e3-e4-e5-e8, 2e0-e1-e2-e3-e4-e6-e8, 2e0-e1-e2-e3-e5-e6-e8, 2e0-e1-e2-e4-e5-e6-e8, 2e0-e1-e3-e4-e5-e6-e8, 2e0-e2-e3-e4-e5-e6-e8, 2e0-e1-e2-e3-e4-e7-e8, 2e0-e1-e2-e3-e5-e7-e8, 2e0-e1-e2-e4-e5-e7-e8, 2e0-e1-e3-e4-e5-e7-e8, 2e0-e2-e3-e4-e5-e7-e8, 2e0-e1-e2-e3-e6-e7-e8, 2e0-e1-e2-e4-e6-e7-e8, 2e0-e1-e3-e4-e6-e7-e8, 2e0-e2-e3-e4-e6-e7-e8, 2e0-e1-e2-e5-e6-e7-e8, 2e0-e1-e3-e5-e6-e7-e8, 2e0-e2-e3-e5-e6-e7-e8, 2e0-e1-e4-e5-e6-e7-e8, 2e0-e2-e4-e5-e6-e7-e8, 2e0-e3-e4-e5-e6-e7-e8, 3e0-2e1-e2-e3-e4-e5-e6-e7-e8, 3e0-e1-2e2-e3-e4-e5-e6-e7-e8, 3e0-e1-e2-2e3-e4-e5-e6-e7-e8, 3e0-e1-e2-e3-2e4-e5-e6-e7-e8, 3e0-e1-e2-e3-e4-2e5-e6-e7-e8, 3e0-e1-e2-e3-e4-e5-2e6-e7-e8, 3e0-e1-e2-e3-e4-e5-e6-2e7-e8, 3e0-e1-e2-e3-e4-e5-e6-e7-2e8] 
get_part_roots(876): s_lst      = 1 [3e0-e1-e2-e3-e4-e5-e6-e7-2e8] 
get_part_roots(877): tq1_lst    = 56 [e7-e8, e6-e8, e5-e8, e4-e8, e3-e8, e2-e8, e1-e8, e0-e1-e2-e8, e0-e1-e3-e8, e0-e2-e3-e8, e0-e1-e4-e8, e0-e2-e4-e8, e0-e3-e4-e8, e0-e1-e5-e8, e0-e2-e5-e8, e0-e3-e5-e8, e0-e4-e5-e8, e0-e1-e6-e8, e0-e2-e6-e8, e0-e3-e6-e8, e0-e4-e6-e8, e0-e5-e6-e8, e0-e1-e7-e8, e0-e2-e7-e8, e0-e3-e7-e8, e0-e4-e7-e8, e0-e5-e7-e8, e0-e6-e7-e8, 2e0-e1-e2-e3-e4-e5-e8, 2e0-e1-e2-e3-e4-e6-e8, 2e0-e1-e2-e3-e5-e6-e8, 2e0-e1-e2-e4-e5-e6-e8, 2e0-e1-e3-e4-e5-e6-e8, 2e0-e2-e3-e4-e5-e6-e8, 2e0-e1-e2-e3-e4-e7-e8, 2e0-e1-e2-e3-e5-e7-e8, 2e0-e1-e2-e4-e5-e7-e8, 2e0-e1-e3-e4-e5-e7-e8, 2e0-e2-e3-e4-e5-e7-e8, 2e0-e1-e2-e3-e6-e7-e8, 2e0-e1-e2-e4-e6-e7-e8, 2e0-e1-e3-e4-e6-e7-e8, 2e0-e2-e3-e4-e6-e7-e8, 2e0-e1-e2-e5-e6-e7-e8, 2e0-e1-e3-e5-e6-e7-e8, 2e0-e2-e3-e5-e6-e7-e8, 2e0-e1-e4-e5-e6-e7-e8, 2e0-e2-e4-e5-e6-e7-e8, 2e0-e3-e4-e5-e6-e7-e8, 3e0-2e1-e2-e3-e4-e5-e6-e7-e8, 3e0-e1-2e2-e3-e4-e5-e6-e7-e8, 3e0-e1-e2-2e3-e4-e5-e6-e7-e8, 3e0-e1-e2-e3-2e4-e5-e6-e7-e8, 3e0-e1-e2-e3-e4-2e5-e6-e7-e8, 3e0-e1-e2-e3-e4-e5-2e6-e7-e8, 3e0-e1-e2-e3-e4-e5-e6-2e7-e8] 
get_part_roots(878): tq_lst     = 56 [e7-e8, e6-e8, e5-e8, e4-e8, e3-e8, e2-e8, e1-e8, e0-e1-e2-e8, e0-e1-e3-e8, e0-e2-e3-e8, e0-e1-e4-e8, e0-e2-e4-e8, e0-e3-e4-e8, e0-e1-e5-e8, e0-e2-e5-e8, e0-e3-e5-e8, e0-e4-e5-e8, e0-e1-e6-e8, e0-e2-e6-e8, e0-e3-e6-e8, e0-e4-e6-e8, e0-e5-e6-e8, e0-e1-e7-e8, e0-e2-e7-e8, e0-e3-e7-e8, e0-e4-e7-e8, e0-e5-e7-e8, e0-e6-e7-e8, 2e0-e1-e2-e3-e4-e5-e8, 2e0-e1-e2-e3-e4-e6-e8, 2e0-e1-e2-e3-e5-e6-e8, 2e0-e1-e2-e4-e5-e6-e8, 2e0-e1-e3-e4-e5-e6-e8, 2e0-e2-e3-e4-e5-e6-e8, 2e0-e1-e2-e3-e4-e7-e8, 2e0-e1-e2-e3-e5-e7-e8, 2e0-e1-e2-e4-e5-e7-e8, 2e0-e1-e3-e4-e5-e7-e8, 2e0-e2-e3-e4-e5-e7-e8, 2e0-e1-e2-e3-e6-e7-e8, 2e0-e1-e2-e4-e6-e7-e8, 2e0-e1-e3-e4-e6-e7-e8, 2e0-e2-e3-e4-e6-e7-e8, 2e0-e1-e2-e5-e6-e7-e8, 2e0-e1-e3-e5-e6-e7-e8, 2e0-e2-e3-e5-e6-e7-e8, 2e0-e1-e4-e5-e6-e7-e8, 2e0-e2-e4-e5-e6-e7-e8, 2e0-e3-e4-e5-e6-e7-e8, 3e0-2e1-e2-e3-e4-e5-e6-e7-e8, 3e0-e1-2e2-e3-e4-e5-e6-e7-e8, 3e0-e1-e2-2e3-e4-e5-e6-e7-e8, 3e0-e1-e2-e3-2e4-e5-e6-e7-e8, 3e0-e1-e2-e3-e4-2e5-e6-e7-e8, 3e0-e1-e2-e3-e4-e5-2e6-e7-e8, 3e0-e1-e2-e3-e4-e5-e6-2e7-e8] 
get_part_roots(879): q_lst      = 28 [e7-e8, e6-e8, e5-e8, e4-e8, e3-e8, e2-e8, e1-e8, e0-e1-e2-e8, e0-e1-e3-e8, e0-e2-e3-e8, e0-e1-e4-e8, e0-e2-e4-e8, e0-e3-e4-e8, e0-e1-e5-e8, e0-e2-e5-e8, e0-e3-e5-e8, e0-e4-e5-e8, e0-e1-e6-e8, e0-e2-e6-e8, e0-e3-e6-e8, e0-e4-e6-e8, e0-e5-e6-e8, e0-e1-e7-e8, e0-e2-e7-e8, e0-e3-e7-e8, e0-e4-e7-e8, e0-e5-e7-e8, e0-e6-e7-e8] 
get_part_roots(880):        M --> 28 [3e0-e1-e2-e3-e4-e5-e6-2e7-e8, 3e0-e1-e2-e3-e4-e5-2e6-e7-e8, 3e0-e1-e2-e3-e4-2e5-e6-e7-e8, 3e0-e1-e2-e3-2e4-e5-e6-e7-e8, 3e0-e1-e2-2e3-e4-e5-e6-e7-e8, 3e0-e1-2e2-e3-e4-e5-e6-e7-e8, 3e0-2e1-e2-e3-e4-e5-e6-e7-e8, 2e0-e3-e4-e5-e6-e7-e8, 2e0-e2-e4-e5-e6-e7-e8, 2e0-e1-e4-e5-e6-e7-e8, 2e0-e2-e3-e5-e6-e7-e8, 2e0-e1-e3-e5-e6-e7-e8, 2e0-e1-e2-e5-e6-e7-e8, 2e0-e2-e3-e4-e6-e7-e8, 2e0-e1-e3-e4-e6-e7-e8, 2e0-e1-e2-e4-e6-e7-e8, 2e0-e1-e2-e3-e6-e7-e8, 2e0-e2-e3-e4-e5-e7-e8, 2e0-e1-e3-e4-e5-e7-e8, 2e0-e1-e2-e4-e5-e7-e8, 2e0-e1-e2-e3-e5-e7-e8, 2e0-e1-e2-e3-e4-e7-e8, 2e0-e2-e3-e4-e5-e6-e8, 2e0-e1-e3-e4-e5-e6-e8, 2e0-e1-e2-e4-e5-e6-e8, 2e0-e1-e2-e3-e5-e6-e8, 2e0-e1-e2-e3-e4-e6-e8, 2e0-e1-e2-e3-e4-e5-e8] 
get_part_roots(881): inv.Md_lst = E7 [e1-e2, e2-e3, e3-e4, e4-e5, e5-e6, e6-e7, e0-e1-e2-e3] , rank = 9 
import_cls(1015): importing:  (9, 'E7', 'A0') [e1-e2, e2-e3, e3-e4, e4-e5, e5-e6, e6-e7, e0-e1-e2-e3] == [e1-e2, e2-e3, e3-e4, e4-e5, e5-e6, e6-e7, e0-e1-e2-e3] 
get_cls(1086): looping through inv_lst continued after recursive call: (9, 'E7', [e1-e2, e2-e3, e3-e4, e4-e5, e5-e6, e6-e7, e0-e1-e2-e3]) 
get_cls(1094): bas1_lst = 1 [('E7', 'A0')] 
get_cls(1095): s_lst    = 1 [3e0-e1-e2-e3-e4-e5-e6-e7-2e8] 
get_cls(1096): q_lst    = 28 [e7-e8, e6-e8, e5-e8, e4-e8, e3-e8, e2-e8, e1-e8, e0-e1-e2-e8, e0-e1-e3-e8, e0-e2-e3-e8, e0-e1-e4-e8, e0-e2-e4-e8, e0-e3-e4-e8, e0-e1-e5-e8, e0-e2-e5-e8, e0-e3-e5-e8, e0-e4-e5-e8, e0-e1-e6-e8, e0-e2-e6-e8, e0-e3-e6-e8, e0-e4-e6-e8, e0-e5-e6-e8, e0-e1-e7-e8, e0-e2-e7-e8, e0-e3-e7-e8, e0-e4-e7-e8, e0-e5-e7-e8, e0-e6-e7-e8] 
update(86): ETA = 0.00030016 m, counter = 0 / 77 , time = 3.8981e-6 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E7', 'A0')  
update(86): ETA = 0.084792 m, counter = 1 / 77 , time = 0.0011196 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E7', '{A1}')  
update(86): ETA = 0.35878 m, counter = 2 / 77 , time = 0.0059033 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E7', '2{A1}')  
update(86): ETA = 20.263 m, counter = 3 / 77 , time = 0.27973 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E7', '{A2}')  
update(86): ETA = 0.37771 m, counter = 4 / 77 , time = 0.28490 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E7', '3{A1}')  
update(86): ETA = 51.987 m, counter = 5 / 77 , time = 1.0069 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E7', '{A1}+{A2}')  
update(86): ETA = 0.37379 m, counter = 6 / 77 , time = 1.0122 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E7', '{A3}')  
update(86): ETA = 0.36078 m, counter = 7 / 77 , time = 1.0174 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E7', '2{A1}+{A2}')  
update(86): ETA = 0.35915 m, counter = 8 / 77 , time = 1.0226 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E7', '2{A2}')  
update(86): ETA = 0.34735 m, counter = 9 / 77 , time = 1.0277 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E7', '4{A1}')  
update(86): ETA = 29.217 m, counter = 10 / 77 , time = 1.4638 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E7', '4{A1}')  
update(86): ETA = 0.019258 m, counter = 11 / 77 , time = 1.4640 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E7', '{A1}+{A3}')  
update(86): ETA = 0.34080 m, counter = 12 / 77 , time = 1.4693 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E7', '{A4}')  
update(86): ETA = 0.33532 m, counter = 13 / 77 , time = 1.4745 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E7', '{D4}')  
update(86): ETA = 0.33238 m, counter = 14 / 77 , time = 1.4798 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E7', '2{A1}+{A3}')  
update(86): ETA = 0.023515 m, counter = 15 / 77 , time = 1.4802 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E7', '2{A1}+{A3}')  
update(86): ETA = 0.020075 m, counter = 16 / 77 , time = 1.4805 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E7', '3{A1}+{A2}')  
update(86): ETA = 0.018144 m, counter = 17 / 77 , time = 1.4808 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E7', '5{A1}')  
update(86): ETA = 0.021685 m, counter = 18 / 77 , time = 1.4812 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E7', '{A1}+2{A2}')  
update(86): ETA = 0.025326 m, counter = 19 / 77 , time = 1.4816 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E7', '{A1}+{A4}')  
update(86): ETA = 0.024942 m, counter = 20 / 77 , time = 1.4821 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E7', '{A1}+{D4}')  
update(86): ETA = 0.023139 m, counter = 21 / 77 , time = 1.4825 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E7', '{A2}+{A3}')  
update(86): ETA = 0.027628 m, counter = 22 / 77 , time = 1.4830 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E7', '{A5}')  
update(86): ETA = 0.027779 m, counter = 23 / 77 , time = 1.4835 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E7', '{D5}')  
update(86): ETA = 0.024275 m, counter = 24 / 77 , time = 1.4839 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E7', '2{A1}+2{A2}')  
update(86): ETA = 0.027374 m, counter = 25 / 77 , time = 1.4845 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E7', '2{A1}+{A4}')  
update(86): ETA = 0.027101 m, counter = 26 / 77 , time = 1.4850 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E7', '2{A1}+{D4}')  
update(86): ETA = 0.027318 m, counter = 27 / 77 , time = 1.4855 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E7', '2{A3}')  
update(86): ETA = 0.026782 m, counter = 28 / 77 , time = 1.4861 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E7', '2{A3}')  
update(86): ETA = 0.022245 m, counter = 29 / 77 , time = 1.4866 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E7', '3{A1}+{A3}')  
update(86): ETA = 0.023061 m, counter = 30 / 77 , time = 1.4870 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E7', '3{A2}')  
update(86): ETA = 0.019615 m, counter = 31 / 77 , time = 1.4875 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E7', '4{A1}+{A2}')  
update(86): ETA = 0.018194 m, counter = 32 / 77 , time = 1.4879 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E7', '6{A1}')  
update(86): ETA = 0.022125 m, counter = 33 / 77 , time = 1.4884 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E7', '{A1}+{A2}+{A3}')  
update(86): ETA = 0.025599 m, counter = 34 / 77 , time = 1.4890 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E7', '{A1}+{A5}')  
update(86): ETA = 0.024981 m, counter = 35 / 77 , time = 1.4896 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E7', '{A1}+{A5}')  
update(86): ETA = 0.024236 m, counter = 36 / 77 , time = 1.4902 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E7', '{A1}+{D5}')  
update(86): ETA = 0.022339 m, counter = 37 / 77 , time = 1.4907 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E7', '{A2}+{A4}')  
update(86): ETA = 0.021941 m, counter = 38 / 77 , time = 1.4913 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E7', '{A2}+{D4}')  
update(86): ETA = 0.026059 m, counter = 39 / 77 , time = 1.4920 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E7', '{A6}')  
update(86): ETA = 0.025119 m, counter = 40 / 77 , time = 1.4926 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E7', '{D6}')  
update(86): ETA = 0.024634 m, counter = 41 / 77 , time = 1.4933 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E7', '{E6}')  
update(86): ETA = 0.021300 m, counter = 42 / 77 , time = 1.4939 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E7', '2{A1}+{A2}+{A3}')  
update(86): ETA = 0.023826 m, counter = 43 / 77 , time = 1.4946 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E7', '2{A1}+{A5}')  
update(86): ETA = 0.023742 m, counter = 44 / 77 , time = 1.4954 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E7', '2{A1}+{D5}')  
update(86): ETA = 0.020799 m, counter = 45 / 77 , time = 1.4960 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E7', '3{A1}+{D4}')  
update(86): ETA = 0.017899 m, counter = 46 / 77 , time = 1.4966 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E7', '4{A1}+{A3}')  
update(86): ETA = 0.015015 m, counter = 47 / 77 , time = 1.4971 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E7', '7{A1}')  
update(86): ETA = 0.019028 m, counter = 48 / 77 , time = 1.4977 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E7', '{A1}+2{A3}')  
update(86): ETA = 0.016757 m, counter = 49 / 77 , time = 1.4983 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E7', '{A1}+3{A2}')  
update(86): ETA = 0.018088 m, counter = 50 / 77 , time = 1.4990 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E7', '{A1}+{A2}+{A4}')  
update(86): ETA = 0.020443 m, counter = 51 / 77 , time = 1.4998 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E7', '{A1}+{A6}')  
update(86): ETA = 0.019923 m, counter = 52 / 77 , time = 1.5006 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E7', '{A1}+{D6}')  
update(86): ETA = 0.019018 m, counter = 53 / 77 , time = 1.5014 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E7', '{A1}+{E6}')  
update(86): ETA = 0.016985 m, counter = 54 / 77 , time = 1.5021 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E7', '{A2}+{A5}')  
update(86): ETA = 0.016252 m, counter = 55 / 77 , time = 1.5029 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E7', '{A2}+{D5}')  
update(86): ETA = 0.014952 m, counter = 56 / 77 , time = 1.5036 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E7', '{A3}+{A4}')  
update(86): ETA = 0.014537 m, counter = 57 / 77 , time = 1.5043 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E7', '{A3}+{D4}')  
update(86): ETA = 0.016709 m, counter = 58 / 77 , time = 1.5052 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E7', '{A7}')  
update(86): ETA = 0.015881 m, counter = 59 / 77 , time = 1.5061 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E7', '{A7}')  
update(86): ETA = 0.014904 m, counter = 60 / 77 , time = 1.5069 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E7', '{D7}')  
update(86): ETA = 0.014240 m, counter = 61 / 77 , time = 1.5078 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E7', '{E7}')  
update(86): ETA = 0.011768 m, counter = 62 / 77 , time = 1.5086 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E7', '2{A1}+2{A3}')  
update(86): ETA = 0.012684 m, counter = 63 / 77 , time = 1.5095 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E7', '2{A1}+{D6}')  
update(86): ETA = 0.011535 m, counter = 64 / 77 , time = 1.5104 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E7', '2{A4}')  
update(86): ETA = 0.010725 m, counter = 65 / 77 , time = 1.5113 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E7', '2{D4}')  
update(86): ETA = 0.0083261 m, counter = 66 / 77 , time = 1.5121 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E7', '4{A1}+{D4}')  
update(86): ETA = 0.0076340 m, counter = 67 / 77 , time = 1.5128 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E7', '4{A2}')  
update(86): ETA = 0.0055744 m, counter = 68 / 77 , time = 1.5134 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E7', '8{A1}')  
update(86): ETA = 0.0068380 m, counter = 69 / 77 , time = 1.5143 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E7', '{A1}+{A2}+{A5}')  
update(86): ETA = 0.0069729 m, counter = 70 / 77 , time = 1.5153 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E7', '{A1}+{A7}')  
update(86): ETA = 0.0060216 m, counter = 71 / 77 , time = 1.5163 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E7', '{A1}+{E7}')  
update(86): ETA = 0.0047688 m, counter = 72 / 77 , time = 1.5173 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E7', '{A2}+{E6}')  
update(86): ETA = 0.0036171 m, counter = 73 / 77 , time = 1.5182 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E7', '{A3}+{D5}')  
update(86): ETA = 0.0033563 m, counter = 74 / 77 , time = 1.5193 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E7', '{A8}')  
update(86): ETA = 0.0022414 m, counter = 75 / 77 , time = 1.5204 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E7', '{D8}')  
update(86): ETA = 0.0011296 m, counter = 76 / 77 , time = 1.5215 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E7', '{E8}')  
get_cls(1130): Setting Dynkin types of 31 items...please wait... 
update(86): ETA = 0.0039926 m, counter = 0 / 31 , time = 0.00038638 m, info = 9 E7 A0  
update(86): ETA = 0.011380 m, counter = 3 / 31 , time = 0.0016057 m, info = 9 E7 A2  
update(86): ETA = 0.010824 m, counter = 6 / 31 , time = 0.0029046 m, info = 9 E7 A2  
update(86): ETA = 0.0095860 m, counter = 9 / 31 , time = 0.0042118 m, info = 9 E7 A2  
update(86): ETA = 0.0081820 m, counter = 12 / 31 , time = 0.0055037 m, info = 9 E7 A2  
update(86): ETA = 0.0068860 m, counter = 15 / 31 , time = 0.0067948 m, info = 9 E7 A2  
update(86): ETA = 0.0056438 m, counter = 18 / 31 , time = 0.0080972 m, info = 9 E7 A2  
update(86): ETA = 0.0043041 m, counter = 21 / 31 , time = 0.0093884 m, info = 9 E7 A2  
update(86): ETA = 0.0030131 m, counter = 24 / 31 , time = 0.010680 m, info = 9 E7 A2  
update(86): ETA = 0.0017342 m, counter = 27 / 31 , time = 0.011980 m, info = 9 E7 A2  
update(86): ETA = 0.00043008 m, counter = 30 / 31 , time = 0.013271 m, info = 9 E7 A2  
get_cls(1145): inv      = E7 , rank = 9 
get_cls(1146): bas1_lst = 1 [('A0', 1)] 
get_cls(1147): bas2_lst = 2 [('A0', 1), ('A1', 1)] 
get_cls(1148): bas3_lst = 29 [('A0', 1), ('A2', 28)] 
update(86): ETA = 5.6235e-6 m, counter = 0 / 58 , time = 4.8478e-7 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', 'A0', 'A0')  
get_cls(1168): 	 appended:  (9, 'E7', 'A0') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A0', 'A0') 
get_cls(1168): 	 appended:  (9, 'E7', '[A2]') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A0', 'A2') 
update(86): ETA = 17.970 m, counter = 5 / 58 , time = 1.6953 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', 'A0', 'A2')  
update(86): ETA = 13.261 m, counter = 10 / 58 , time = 3.0767 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', 'A0', 'A2')  
update(86): ETA = 11.872 m, counter = 15 / 58 , time = 4.4571 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', 'A0', 'A2')  
update(86): ETA = 10.525 m, counter = 20 / 58 , time = 5.8419 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', 'A0', 'A2')  
update(86): ETA = 9.0942 m, counter = 25 / 58 , time = 7.2198 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', 'A0', 'A2')  
get_cls(1168): 	 appended:  (9, 'E7', '{A1}') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A1', 'A0') 
update(86): ETA = 8.4024 m, counter = 30 / 58 , time = 8.7203 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', 'A1', 'A2')  
update(86): ETA = 0.00035634 m, counter = 35 / 58 , time = 8.7203 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', 'A1', 'A2')  
update(86): ETA = 0.00027198 m, counter = 40 / 58 , time = 8.7204 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', 'A1', 'A2')  
update(86): ETA = 0.00019664 m, counter = 45 / 58 , time = 8.7205 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', 'A1', 'A2')  
update(86): ETA = 0.00012038 m, counter = 50 / 58 , time = 8.7206 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', 'A1', 'A2')  
update(86): ETA = 0.000044808 m, counter = 55 / 58 , time = 8.7206 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', 'A1', 'A2')  
get_cls(1070): looping through inv_lst: (9, 'E8', [e1-e2, e2-e3, e3-e4, e4-e5, e5-e6, e6-e7, e7-e8, e0-e1-e2-e3]) 
get_part_roots(875): r_lst      = 120 [e1-e2, e2-e3, e1-e3, e3-e4, e2-e4, e1-e4, e4-e5, e3-e5, e2-e5, e1-e5, e5-e6, e4-e6, e3-e6, e2-e6, e1-e6, e6-e7, e5-e7, e4-e7, e3-e7, e2-e7, e1-e7, e7-e8, e6-e8, e5-e8, e4-e8, e3-e8, e2-e8, e1-e8, e0-e1-e2-e3, e0-e1-e2-e4, e0-e1-e3-e4, e0-e2-e3-e4, e0-e1-e2-e5, e0-e1-e3-e5, e0-e2-e3-e5, e0-e1-e4-e5, e0-e2-e4-e5, e0-e3-e4-e5, e0-e1-e2-e6, e0-e1-e3-e6, e0-e2-e3-e6, e0-e1-e4-e6, e0-e2-e4-e6, e0-e3-e4-e6, e0-e1-e5-e6, e0-e2-e5-e6, e0-e3-e5-e6, e0-e4-e5-e6, e0-e1-e2-e7, e0-e1-e3-e7, e0-e2-e3-e7, e0-e1-e4-e7, e0-e2-e4-e7, e0-e3-e4-e7, e0-e1-e5-e7, e0-e2-e5-e7, e0-e3-e5-e7, e0-e4-e5-e7, e0-e1-e6-e7, e0-e2-e6-e7, e0-e3-e6-e7, e0-e4-e6-e7, e0-e5-e6-e7, e0-e1-e2-e8, e0-e1-e3-e8, e0-e2-e3-e8, e0-e1-e4-e8, e0-e2-e4-e8, e0-e3-e4-e8, e0-e1-e5-e8, e0-e2-e5-e8, e0-e3-e5-e8, e0-e4-e5-e8, e0-e1-e6-e8, e0-e2-e6-e8, e0-e3-e6-e8, e0-e4-e6-e8, e0-e5-e6-e8, e0-e1-e7-e8, e0-e2-e7-e8, e0-e3-e7-e8, e0-e4-e7-e8, e0-e5-e7-e8, e0-e6-e7-e8, 2e0-e1-e2-e3-e4-e5-e6, 2e0-e1-e2-e3-e4-e5-e7, 2e0-e1-e2-e3-e4-e6-e7, 2e0-e1-e2-e3-e5-e6-e7, 2e0-e1-e2-e4-e5-e6-e7, 2e0-e1-e3-e4-e5-e6-e7, 2e0-e2-e3-e4-e5-e6-e7, 2e0-e1-e2-e3-e4-e5-e8, 2e0-e1-e2-e3-e4-e6-e8, 2e0-e1-e2-e3-e5-e6-e8, 2e0-e1-e2-e4-e5-e6-e8, 2e0-e1-e3-e4-e5-e6-e8, 2e0-e2-e3-e4-e5-e6-e8, 2e0-e1-e2-e3-e4-e7-e8, 2e0-e1-e2-e3-e5-e7-e8, 2e0-e1-e2-e4-e5-e7-e8, 2e0-e1-e3-e4-e5-e7-e8, 2e0-e2-e3-e4-e5-e7-e8, 2e0-e1-e2-e3-e6-e7-e8, 2e0-e1-e2-e4-e6-e7-e8, 2e0-e1-e3-e4-e6-e7-e8, 2e0-e2-e3-e4-e6-e7-e8, 2e0-e1-e2-e5-e6-e7-e8, 2e0-e1-e3-e5-e6-e7-e8, 2e0-e2-e3-e5-e6-e7-e8, 2e0-e1-e4-e5-e6-e7-e8, 2e0-e2-e4-e5-e6-e7-e8, 2e0-e3-e4-e5-e6-e7-e8, 3e0-2e1-e2-e3-e4-e5-e6-e7-e8, 3e0-e1-2e2-e3-e4-e5-e6-e7-e8, 3e0-e1-e2-2e3-e4-e5-e6-e7-e8, 3e0-e1-e2-e3-2e4-e5-e6-e7-e8, 3e0-e1-e2-e3-e4-2e5-e6-e7-e8, 3e0-e1-e2-e3-e4-e5-2e6-e7-e8, 3e0-e1-e2-e3-e4-e5-e6-2e7-e8, 3e0-e1-e2-e3-e4-e5-e6-e7-2e8] 
get_part_roots(876): s_lst      = 0 [] 
get_part_roots(877): tq1_lst    = 0 [] 
get_part_roots(878): tq_lst     = 0 [] 
get_part_roots(879): q_lst      = 0 [] 
get_part_roots(880):        M --> 0 [] 
get_part_roots(881): inv.Md_lst = E8 [e1-e2, e2-e3, e3-e4, e4-e5, e5-e6, e6-e7, e7-e8, e0-e1-e2-e3] , rank = 9 
get_cls(1086): looping through inv_lst continued after recursive call: (9, 'E8', [e1-e2, e2-e3, e3-e4, e4-e5, e5-e6, e6-e7, e7-e8, e0-e1-e2-e3]) 
get_cls(1094): bas1_lst = 1 [('E8', 'A0')] 
get_cls(1095): s_lst    = 0 [] 
get_cls(1096): q_lst    = 0 [] 
update(86): ETA = 0.00014870 m, counter = 0 / 77 , time = 1.9312e-6 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E8', 'A0')  
update(86): ETA = 0.083922 m, counter = 1 / 77 , time = 0.0011062 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E8', '{A1}')  
update(86): ETA = 0.0073850 m, counter = 2 / 77 , time = 0.0012046 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E8', '2{A1}')  
update(86): ETA = 0.0097128 m, counter = 3 / 77 , time = 0.0013359 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E8', '{A2}')  
update(86): ETA = 0.011271 m, counter = 4 / 77 , time = 0.0014903 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E8', '3{A1}')  
update(86): ETA = 0.013503 m, counter = 5 / 77 , time = 0.0016778 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E8', '{A1}+{A2}')  
update(86): ETA = 0.016472 m, counter = 6 / 77 , time = 0.0019098 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E8', '{A3}')  
update(86): ETA = 0.017848 m, counter = 7 / 77 , time = 0.0021648 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E8', '2{A1}+{A2}')  
update(86): ETA = 0.019875 m, counter = 8 / 77 , time = 0.0024528 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E8', '2{A2}')  
update(86): ETA = 0.015149 m, counter = 9 / 77 , time = 0.0026756 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E8', '4{A1}')  
update(86): ETA = 0.014925 m, counter = 10 / 77 , time = 0.0028984 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E8', '4{A1}')  
update(86): ETA = 0.019977 m, counter = 11 / 77 , time = 0.0032011 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E8', '{A1}+{A3}')  
update(86): ETA = 0.023154 m, counter = 12 / 77 , time = 0.0035573 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E8', '{A4}')  
update(86): ETA = 0.023031 m, counter = 13 / 77 , time = 0.0039172 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E8', '{D4}')  
update(86): ETA = 0.023963 m, counter = 14 / 77 , time = 0.0042975 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E8', '2{A1}+{A3}')  
update(86): ETA = 0.023575 m, counter = 15 / 77 , time = 0.0046778 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E8', '2{A1}+{A3}')  
update(86): ETA = 0.020077 m, counter = 16 / 77 , time = 0.0050069 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E8', '3{A1}+{A2}')  
update(86): ETA = 0.018197 m, counter = 17 / 77 , time = 0.0053102 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E8', '5{A1}')  
update(86): ETA = 0.021752 m, counter = 18 / 77 , time = 0.0056789 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E8', '{A1}+2{A2}')  
update(86): ETA = 0.025368 m, counter = 19 / 77 , time = 0.0061162 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E8', '{A1}+{A4}')  
update(86): ETA = 0.025108 m, counter = 20 / 77 , time = 0.0065567 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E8', '{A1}+{D4}')  
update(86): ETA = 0.023137 m, counter = 21 / 77 , time = 0.0069699 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E8', '{A2}+{A3}')  
update(86): ETA = 0.028419 m, counter = 22 / 77 , time = 0.0074866 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E8', '{A5}')  
update(86): ETA = 0.027468 m, counter = 23 / 77 , time = 0.0079953 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E8', '{D5}')  
update(86): ETA = 0.024492 m, counter = 24 / 77 , time = 0.0084574 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E8', '2{A1}+2{A2}')  
update(86): ETA = 0.027547 m, counter = 25 / 77 , time = 0.0089871 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E8', '2{A1}+{A4}')  
update(86): ETA = 0.027229 m, counter = 26 / 77 , time = 0.0095210 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E8', '2{A1}+{D4}')  
update(86): ETA = 0.027513 m, counter = 27 / 77 , time = 0.010071 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E8', '2{A3}')  
update(86): ETA = 0.026901 m, counter = 28 / 77 , time = 0.010620 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E8', '2{A3}')  
update(86): ETA = 0.022400 m, counter = 29 / 77 , time = 0.011087 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E8', '3{A1}+{A3}')  
update(86): ETA = 0.023680 m, counter = 30 / 77 , time = 0.011591 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E8', '3{A2}')  
update(86): ETA = 0.019729 m, counter = 31 / 77 , time = 0.012020 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E8', '4{A1}+{A2}')  
update(86): ETA = 0.017904 m, counter = 32 / 77 , time = 0.012418 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E8', '6{A1}')  
update(86): ETA = 0.022289 m, counter = 33 / 77 , time = 0.012924 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E8', '{A1}+{A2}+{A3}')  
update(86): ETA = 0.025823 m, counter = 34 / 77 , time = 0.013525 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E8', '{A1}+{A5}')  
update(86): ETA = 0.025238 m, counter = 35 / 77 , time = 0.014126 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E8', '{A1}+{A5}')  
update(86): ETA = 0.024428 m, counter = 36 / 77 , time = 0.014721 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E8', '{A1}+{D5}')  
update(86): ETA = 0.022514 m, counter = 37 / 77 , time = 0.015284 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E8', '{A2}+{A4}')  
update(86): ETA = 0.023065 m, counter = 38 / 77 , time = 0.015876 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E8', '{A2}+{D4}')  
update(86): ETA = 0.025811 m, counter = 39 / 77 , time = 0.016555 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E8', '{A6}')  
update(86): ETA = 0.025231 m, counter = 40 / 77 , time = 0.017237 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E8', '{D6}')  
update(86): ETA = 0.024685 m, counter = 41 / 77 , time = 0.017922 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E8', '{E6}')  
update(86): ETA = 0.021382 m, counter = 42 / 77 , time = 0.018533 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E8', '2{A1}+{A2}+{A3}')  
update(86): ETA = 0.023884 m, counter = 43 / 77 , time = 0.019236 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E8', '2{A1}+{A5}')  
update(86): ETA = 0.023609 m, counter = 44 / 77 , time = 0.019951 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E8', '2{A1}+{D5}')  
update(86): ETA = 0.020388 m, counter = 45 / 77 , time = 0.020588 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E8', '3{A1}+{D4}')  
update(86): ETA = 0.017918 m, counter = 46 / 77 , time = 0.021166 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E8', '4{A1}+{A3}')  
update(86): ETA = 0.015006 m, counter = 47 / 77 , time = 0.021667 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E8', '7{A1}')  
update(86): ETA = 0.019003 m, counter = 48 / 77 , time = 0.022322 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E8', '{A1}+2{A3}')  
update(86): ETA = 0.016754 m, counter = 49 / 77 , time = 0.022920 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E8', '{A1}+3{A2}')  
update(86): ETA = 0.017964 m, counter = 50 / 77 , time = 0.023586 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E8', '{A1}+{A2}+{A4}')  
update(86): ETA = 0.020569 m, counter = 51 / 77 , time = 0.024377 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E8', '{A1}+{A6}')  
update(86): ETA = 0.019660 m, counter = 52 / 77 , time = 0.025163 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E8', '{A1}+{D6}')  
update(86): ETA = 0.018946 m, counter = 53 / 77 , time = 0.025952 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E8', '{A1}+{E6}')  
update(86): ETA = 0.016922 m, counter = 54 / 77 , time = 0.026688 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E8', '{A2}+{A5}')  
update(86): ETA = 0.016271 m, counter = 55 / 77 , time = 0.027428 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E8', '{A2}+{D5}')  
update(86): ETA = 0.015126 m, counter = 56 / 77 , time = 0.028148 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E8', '{A3}+{A4}')  
update(86): ETA = 0.014285 m, counter = 57 / 77 , time = 0.028862 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E8', '{A3}+{D4}')  
update(86): ETA = 0.016651 m, counter = 58 / 77 , time = 0.029739 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E8', '{A7}')  
update(86): ETA = 0.015773 m, counter = 59 / 77 , time = 0.030615 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E8', '{A7}')  
update(86): ETA = 0.014816 m, counter = 60 / 77 , time = 0.031487 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E8', '{D7}')  
update(86): ETA = 0.014288 m, counter = 61 / 77 , time = 0.032380 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E8', '{E7}')  
update(86): ETA = 0.011576 m, counter = 62 / 77 , time = 0.033151 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E8', '2{A1}+2{A3}')  
update(86): ETA = 0.012676 m, counter = 63 / 77 , time = 0.034057 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E8', '2{A1}+{D6}')  
update(86): ETA = 0.011538 m, counter = 64 / 77 , time = 0.034944 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E8', '2{A4}')  
update(86): ETA = 0.010694 m, counter = 65 / 77 , time = 0.035835 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E8', '2{D4}')  
update(86): ETA = 0.0083939 m, counter = 66 / 77 , time = 0.036599 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E8', '4{A1}+{D4}')  
update(86): ETA = 0.0074757 m, counter = 67 / 77 , time = 0.037346 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E8', '4{A2}')  
update(86): ETA = 0.0055530 m, counter = 68 / 77 , time = 0.037963 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E8', '8{A1}')  
update(86): ETA = 0.0068275 m, counter = 69 / 77 , time = 0.038817 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E8', '{A1}+{A2}+{A5}')  
update(86): ETA = 0.0069763 m, counter = 70 / 77 , time = 0.039813 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E8', '{A1}+{A7}')  
update(86): ETA = 0.0060650 m, counter = 71 / 77 , time = 0.040824 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E8', '{A1}+{E7}')  
update(86): ETA = 0.0047038 m, counter = 72 / 77 , time = 0.041765 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E8', '{A2}+{E6}')  
update(86): ETA = 0.0036069 m, counter = 73 / 77 , time = 0.042666 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E8', '{A3}+{D5}')  
update(86): ETA = 0.0033030 m, counter = 74 / 77 , time = 0.043767 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E8', '{A8}')  
update(86): ETA = 0.0022309 m, counter = 75 / 77 , time = 0.044883 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E8', '{D8}')  
update(86): ETA = 0.0011107 m, counter = 76 / 77 , time = 0.045994 m, info = get_cls seeking bases in s_lst and q_lst:  (9, 'E8', '{E8}')  
get_cls(1130): Setting Dynkin types of 2 items...please wait... 
update(86): ETA = 0.00097703 m, counter = 0 / 2 , time = 0.00048852 m, info = 9 E8 A0  
update(86): ETA = 0.00050350 m, counter = 1 / 2 , time = 0.00099202 m, info = 9 E8 A0  
get_cls(1145): inv      = E8 , rank = 9 
get_cls(1146): bas1_lst = 1 [('A0', 1)] 
get_cls(1147): bas2_lst = 1 [('A0', 1)] 
get_cls(1148): bas3_lst = 1 [('A0', 1)] 
update(86): ETA = 4.6492e-7 m, counter = 0 / 1 , time = 4.6492e-7 m, info = last loop in get_cls: ( bas1.type, bas2.type, bas3.type )= ('A0', 'A0', 'A0')  
get_cls(1168): 	 appended:  (9, 'E8', 'A0') , ( bas1.type, bas2.type, bas3.type ) = ('A0', 'A0', 'A0') 
usecase__get_cls(68): Classification of root bases:
 rownr rank   Mtype            type  #-2  #-1 #fam #-2R  #-1R  #famR                                                                Md_lst                                                                                                                                  d_lst                                                                                                                                                                                                                                                                                                                                                   M
   387    9      A0              A0    0  240 2160    0   240   2160                                                                    []                                                                                                                                     []                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   388    9      A0            {A1}    1  183 1458    1   183   1458                                                                    []                                                                                                                                [e1-e2]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   389    9      A0           2{A1}    2  138  981    2   138    981                                                                    []                                                                                                                         [e1-e2, e3-e4]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   390    9      A0            {A2}    2  127  828    2   127    828                                                                    []                                                                                                                         [e1-e2, e2-e3]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   391    9      A0           3{A1}    3  103  657    3   103    657                                                                    []                                                                                                                  [e1-e2, e3-e4, e5-e6]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   392    9      A0       {A1}+{A2}    3   94  555    3    94    555                                                                    []                                                                                                                  [e1-e2, e2-e3, e4-e5]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   393    9      A0            {A3}    3   83  423    3    83    423                                                                    []                                                                                                                  [e1-e2, e2-e3, e3-e4]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   394    9      A0      2{A1}+{A2}    4   69  369    4    69    369                                                                    []                                                                                                           [e1-e2, e2-e3, e4-e5, e6-e7]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   395    9      A0           2{A2}    4   62  313    4    62    313                                                                    []                                                                                                           [e1-e2, e2-e3, e4-e5, e5-e6]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   396    9      A0           4{A1}    4   77  438    4    77    438                                                                    []                                                                                           [e1-e2, e3-e4, e5-e6, 2e0-e1-e2-e3-e4-e5-e6]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   397    9      A0           4{A1}    4   76  438    4    76    438                                                                    []                                                                                                           [e1-e2, e3-e4, e5-e6, e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   398    9      A0       {A1}+{A3}    4   60  282    4    60    282                                                                    []                                                                                                           [e1-e2, e2-e3, e3-e4, e5-e6]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   399    9      A0            {A4}    4   51  201    4    51    201                                                                    []                                                                                                           [e1-e2, e2-e3, e3-e4, e4-e5]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   400    9      A0            {D4}    4   49  171    4    49    171                                                                    []                                                                                                     [e2-e3, e3-e4, e4-e5, e0-e1-e2-e3]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   401    9      A0      2{A1}+{A3}    5   44  186    5    44    186                                                                    []                                                                                    [e1-e2, e2-e3, e3-e4, e5-e6, 2e0-e1-e2-e3-e4-e5-e6]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   402    9      A0      2{A1}+{A3}    5   43  186    5    43    186                                                                    []                                                                                                    [e1-e2, e2-e3, e3-e4, e5-e6, e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   403    9      A0      3{A1}+{A2}    5   50  244    5    50    244                                                                    []                                                                                              [e1-e2, e2-e3, e4-e5, e6-e7, e0-e1-e2-e3]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   404    9      A0           5{A1}    5   56  291    5    56    291                                                                    []                                                                                    [e1-e2, e3-e4, e5-e6, e7-e8, 2e0-e1-e2-e3-e4-e5-e6]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   405    9      A0      {A1}+2{A2}    5   45  205    5    45    205                                                                    []                                                                                                    [e1-e2, e2-e3, e4-e5, e5-e6, e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   406    9      A0       {A1}+{A4}    5   36  132    5    36    132                                                                    []                                                                                                    [e1-e2, e2-e3, e3-e4, e4-e5, e6-e7]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   407    9      A0       {A1}+{D4}    5   34  114    5    34    114                                                                    []                                                                                              [e2-e3, e3-e4, e4-e5, e6-e7, e0-e1-e2-e3]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   408    9      A0       {A2}+{A3}    5   38  158    5    38    158                                                                    []                                                                                                    [e1-e2, e2-e3, e3-e4, e5-e6, e6-e7]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   409    9      A0            {A5}    5   29   91    5    29     91                                                                    []                                                                                                    [e1-e2, e2-e3, e3-e4, e4-e5, e5-e6]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   410    9      A0            {D5}    5   27   66    5    27     66                                                                    []                                                                                              [e1-e2, e2-e3, e3-e4, e4-e5, e0-e1-e2-e3]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   411    9      A0     2{A1}+2{A2}    6   32  134    6    32    134                                                                    []                                                                                       [e1-e2, e2-e3, e4-e5, e5-e6, e7-e8, e0-e1-e2-e3]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   412    9      A0      2{A1}+{A4}    6   25   86    6    25     86                                                                    []                                                                                       [e1-e2, e2-e3, e3-e4, e5-e6, e7-e8, e0-e1-e2-e3]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   413    9      A0      2{A1}+{D4}    6   24   75    6    24     75                                                                    []                                                                             [e1-e2, e3-e4, e5-e6, e6-e7, e7-e8, 2e0-e1-e2-e3-e4-e5-e6]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   414    9      A0           2{A3}    6   23   79    6    23     79                                                                    []                                                                             [e1-e2, e2-e3, e3-e4, e5-e6, e6-e7, 2e0-e1-e2-e3-e4-e5-e6]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   415    9      A0           2{A3}    6   22   79    6    22     79                                                                    []                                                                                             [e1-e2, e2-e3, e3-e4, e5-e6, e6-e7, e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   416    9      A0      3{A1}+{A3}    6   31  122    6    31    122                                                                    []                                                                             [e1-e2, e2-e3, e3-e4, e5-e6, e7-e8, 2e0-e1-e2-e3-e4-e5-e6]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   417    9      A0           3{A2}    6   29  111    6    29    111                                                                    []                                                                                 [e1-e2, e2-e3, e4-e5, e5-e6, e0-e1-e2-e3, e0-e4-e5-e6]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   418    9      A0      4{A1}+{A2}    6   36  161    6    36    161                                                                    []                                                                                 [e2-e3, e4-e5, e6-e7, e7-e8, e0-e1-e2-e3, e0-e1-e4-e5]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   419    9      A0           6{A1}    6   41  193    6    41    193                                                                    []                                                             [e1-e2, e3-e4, e5-e6, e7-e8, 2e0-e1-e2-e5-e6-e7-e8, 2e0-e1-e2-e3-e4-e5-e6]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   420    9      A0  {A1}+{A2}+{A3}    6   27  102    6    27    102                                                                    []                                                                                       [e1-e2, e2-e3, e4-e5, e5-e6, e6-e7, e0-e1-e2-e3]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   421    9      A0       {A1}+{A5}    6   21   58    6    21     58                                                                    []                                                                             [e1-e2, e2-e3, e3-e4, e4-e5, e5-e6, 2e0-e1-e2-e3-e4-e5-e6]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   422    9      A0       {A1}+{A5}    6   20   58    6    20     58                                                                    []                                                                                             [e1-e2, e2-e3, e3-e4, e4-e5, e5-e6, e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   423    9      A0       {A1}+{D5}    6   18   43    6    18     43                                                                    []                                                                                       [e1-e2, e2-e3, e3-e4, e4-e5, e6-e7, e0-e1-e2-e3]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   424    9      A0       {A2}+{A4}    6   22   72    6    22     72                                                                    []                                                                                             [e1-e2, e2-e3, e3-e4, e4-e5, e6-e7, e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   425    9      A0       {A2}+{D4}    6   20   64    6    20     64                                                                    []                                                                                       [e2-e3, e3-e4, e4-e5, e6-e7, e7-e8, e0-e1-e2-e3]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   426    9      A0            {A6}    6   15   39    6    15     39                                                                    []                                                                                             [e1-e2, e2-e3, e3-e4, e4-e5, e5-e6, e6-e7]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   427    9      A0            {D6}    6   13   26    6    13     26                                                                    []                                                                                       [e2-e3, e3-e4, e4-e5, e5-e6, e6-e7, e0-e1-e2-e3]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   428    9      A0            {E6}    6   13   19    6    13     19                                                                    []                                                                                       [e1-e2, e2-e3, e3-e4, e4-e5, e5-e6, e0-e1-e2-e3]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   429    9      A0 2{A1}+{A2}+{A3}    7   19   66    7    19     66                                                                    []                                                                          [e1-e2, e2-e3, e4-e5, e6-e7, e7-e8, e0-e1-e2-e3, e0-e1-e4-e5]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   430    9      A0      2{A1}+{A5}    7   14   37    7    14     37                                                                    []                                                                      [e1-e2, e2-e3, e3-e4, e4-e5, e5-e6, e7-e8, 2e0-e1-e2-e3-e4-e5-e6]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   431    9      A0      2{A1}+{D5}    7   12   28    7    12     28                                                                    []                                                                          [e2-e3, e4-e5, e5-e6, e6-e7, e7-e8, e0-e1-e2-e3, e0-e1-e4-e5]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   432    9      A0      3{A1}+{D4}    7   17   49    7    17     49                                                                    []                                                      [e1-e2, e2-e3, e3-e4, e5-e6, e7-e8, 2e0-e1-e2-e5-e6-e7-e8, 2e0-e1-e2-e3-e4-e5-e6]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   433    9      A0      4{A1}+{A3}    7   22   80    7    22     80                                                                    []                                                          [e1-e2, e3-e4, e5-e6, e7-e8, e0-e1-e2-e7, e0-e3-e4-e7, 2e0-e1-e2-e3-e4-e5-e6]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   434    9      A0           7{A1}    7   30  128    7    30    128                                                                    []                                                    [e1-e2, e3-e4, e5-e6, e0-e1-e2-e7, e0-e3-e4-e7, e0-e5-e6-e7, 2e0-e1-e2-e3-e4-e5-e6]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   435    9      A0      {A1}+2{A3}    7   16   50    7    16     50                                                                    []                                                                [e1-e2, e2-e3, e3-e4, e5-e6, e6-e7, e0-e5-e6-e7, 2e0-e1-e2-e3-e4-e5-e6]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   436    9      A0      {A1}+3{A2}    7   20   72    7    20     72                                                                    []                                                                          [e1-e2, e2-e3, e4-e5, e5-e6, e7-e8, e0-e1-e2-e3, e0-e4-e5-e6]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   437    9      A0  {A1}+{A2}+{A4}    7   15   46    7    15     46                                                                    []                                                                                [e1-e2, e2-e3, e4-e5, e5-e6, e6-e7, e7-e8, e0-e1-e2-e3]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   438    9      A0       {A1}+{A6}    7   10   24    7    10     24                                                                    []                                                                                [e1-e2, e3-e4, e4-e5, e5-e6, e6-e7, e7-e8, e0-e1-e2-e3]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   439    9      A0       {A1}+{D6}    7    9   16    7     9     16                                                                    []                                                                      [e1-e2, e3-e4, e4-e5, e5-e6, e6-e7, e7-e8, 2e0-e1-e2-e3-e4-e5-e6]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   440    9      A0       {A1}+{E6}    7    8   12    7     8     12                                                                    []                                                                                [e1-e2, e2-e3, e3-e4, e4-e5, e5-e6, e7-e8, e0-e1-e2-e3]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   441    9      A0       {A2}+{A5}    7   12   30    7    12     30                                                                    []                                                                          [e1-e2, e2-e3, e4-e5, e5-e6, e6-e7, e0-e1-e2-e3, e0-e4-e5-e6]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   442    9      A0       {A2}+{D5}    7   10   23    7    10     23                                                                    []                                                                                [e1-e2, e2-e3, e3-e4, e4-e5, e6-e7, e7-e8, e0-e1-e2-e3]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   443    9      A0       {A3}+{A4}    7   12   35    7    12     35                                                                    []                                                                                [e1-e2, e2-e3, e3-e4, e5-e6, e6-e7, e7-e8, e0-e1-e2-e3]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   444    9      A0       {A3}+{D4}    7   11   32    7    11     32                                                                    []                                                                      [e1-e2, e2-e3, e3-e4, e5-e6, e6-e7, e7-e8, 2e0-e1-e2-e3-e4-e5-e6]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   445    9      A0            {A7}    7    8   15    7     8     15                                                                    []                                                                      [e1-e2, e2-e3, e3-e4, e4-e5, e5-e6, e6-e7, 2e0-e1-e2-e3-e4-e5-e6]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   446    9      A0            {A7}    7    7   15    7     7     15                                                                    []                                                                                      [e1-e2, e2-e3, e3-e4, e4-e5, e5-e6, e6-e7, e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   447    9      A0            {D7}    7    5   10    7     5     10                                                                    []                                                                                [e2-e3, e3-e4, e4-e5, e5-e6, e6-e7, e7-e8, e0-e1-e2-e3]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   448    9      A0            {E7}    7    5    5    7     5      5                                                                    []                                                                                [e1-e2, e2-e3, e3-e4, e4-e5, e5-e6, e6-e7, e0-e1-e2-e3]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   449    9      A0     2{A1}+2{A3}    8   11   32    8    11     32                                                                    []                                  [e1-e2, e2-e3, e3-e4, e5-e6, e6-e7, e0-e5-e6-e7, 2e0-e1-e2-e3-e4-e5-e6, 3e0-e1-e2-e3-e4-e5-e6-e7-2e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   450    9      A0      2{A1}+{D6}    8    6   10    8     6     10                                                                    []                                                   [e1-e2, e3-e4, e4-e5, e5-e6, e7-e8, e0-e1-e2-e7, e0-e3-e4-e7, 2e0-e1-e2-e3-e4-e5-e6]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   451    9      A0           2{A4}    8    6   15    8     6     15                                                                    []                                                         [e1-e2, e2-e3, e3-e4, e4-e5, e6-e7, e7-e8, e0-e6-e7-e8, 2e0-e1-e2-e3-e4-e5-e6]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   452    9      A0           2{D4}    8    5   13    8     5     13                                                                    []                                               [e1-e2, e2-e3, e3-e4, e5-e6, e6-e7, e7-e8, 2e0-e1-e2-e5-e6-e7-e8, 2e0-e1-e2-e3-e4-e5-e6]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   453    9      A0      4{A1}+{D4}    8   12   32    8    12     32                                                                    []                                             [e1-e2, e3-e4, e5-e6, e7-e8, e0-e1-e2-e7, e0-e3-e4-e7, e0-e5-e6-e7, 2e0-e1-e2-e3-e4-e5-e6]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   454    9      A0           4{A2}    8   12   38    8    12     38                                                                    []                               [e0-e1-e2-e3, e0-e3-e4-e5, e0-e1-e5-e6, e0-e2-e5-e8, e0-e3-e6-e7, e0-e2-e4-e7, e0-e4-e6-e8, e0-e1-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   455    9      A0           8{A1}    8   22   85    8    22     85                                                                    []                      [e1-e2, e3-e4, e5-e6, e0-e1-e2-e7, e0-e3-e4-e7, e0-e5-e6-e7, 2e0-e1-e2-e3-e4-e5-e6, 3e0-e1-e2-e3-e4-e5-e6-e7-2e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   456    9      A0  {A1}+{A2}+{A5}    8    8   19    8     8     19                                                                    []                                                             [e1-e2, e2-e3, e4-e5, e6-e7, e7-e8, e0-e1-e2-e3, e0-e1-e4-e5, e0-e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   457    9      A0       {A1}+{A7}    8    5    9    8     5      9                                                                    []                                        [e1-e2, e2-e3, e3-e4, e4-e5, e5-e6, e6-e7, 2e0-e1-e2-e3-e4-e5-e6, 3e0-e1-e2-e3-e4-e5-e6-e7-2e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   458    9      A0       {A1}+{E7}    8    3    3    8     3      3                                                                    []                                                                   [e1-e2, e2-e3, e4-e5, e5-e6, e6-e7, e7-e8, e0-e1-e2-e3, e0-e1-e4-e5]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   459    9      A0       {A2}+{E6}    8    4    6    8     4      6                                                                    []                                                                   [e1-e2, e2-e3, e4-e5, e5-e6, e6-e7, e7-e8, e0-e1-e2-e3, e0-e4-e5-e6]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   460    9      A0       {A3}+{D5}    8    5   11    8     5     11                                                                    []                                                         [e1-e2, e2-e3, e3-e4, e5-e6, e6-e7, e7-e8, e0-e5-e6-e7, 2e0-e1-e2-e3-e4-e5-e6]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   461    9      A0            {A8}    8    3    5    8     3      5                                                                    []                                                                   [e1-e2, e2-e3, e3-e4, e5-e6, e6-e7, e7-e8, e0-e1-e2-e3, e0-e5-e6-e7]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   462    9      A0            {D8}    8    2    3    8     2      3                                                                    []                                                               [e1-e2, e2-e3, e3-e4, e4-e5, e5-e6, e6-e7, e7-e8, 2e0-e1-e2-e3-e4-e5-e6]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   463    9      A0            {E8}    8    1    1    8     1      1                                                                    []                                                                         [e1-e2, e2-e3, e3-e4, e4-e5, e5-e6, e6-e7, e7-e8, e0-e1-e2-e3]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   464    9      A1              A0    0  240 2160    0   126    756                                                               [e1-e2]                                                                                                                                     []                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   465    9      A1            {A1}    1  183 1458    1    93    504                                                               [e1-e2]                                                                                                                                [e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   466    9      A1           2{A1}    2  138  981    2    68    333                                                               [e1-e2]                                                                                                                   [e7-e8, e0-e3-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   467    9      A1            {A2}    2  127  828    2    61    282                                                               [e1-e2]                                                                                                  [e7-e8, 3e0-e1-e2-e3-e4-e5-e6-2e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   468    9      A1           3{A1}    3  103  657    3    51    219                                                               [e1-e2]                                                                                                  [e6-e7, e5-e8, 2e0-e1-e2-e5-e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   469    9      A1           3{A1}    3  103  657    3    49    219                                                               [e1-e2]                                                                                            [e7-e8, e0-e3-e7-e8, 2e0-e1-e2-e4-e5-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   470    9      A1       {A1}+{A2}    3   94  555    3    44    183                                                               [e1-e2]                                                                                                            [e6-e7, e7-e8, e0-e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   471    9      A1            {A3}    3   83  423    3    37    141                                                               [e1-e2]                                                                                           [e6-e7, e7-e8, 3e0-e1-e2-e3-e4-e5-2e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   472    9      A1      2{A1}+{A2}    4   69  369    4    31    119                                                               [e1-e2]                                                                              [e6-e7, e7-e8, e0-e6-e7-e8, 3e0-e1-e2-2e3-e4-e5-e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   473    9      A1           2{A2}    4   62  313    4    28     97                                                               [e1-e2]                                                                                     [e6-e7, e0-e3-e6-e7, e3-e8, 2e0-e1-e2-e3-e4-e6-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   474    9      A1           4{A1}    4   76  438    4    36    144                                                               [e1-e2]                                                                                     [e6-e7, e5-e8, e0-e3-e5-e8, 2e0-e1-e2-e5-e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   475    9      A1           4{A1}    4   77  438    4    35    144                                                               [e1-e2]                                                              [e7-e8, e0-e3-e7-e8, 2e0-e1-e2-e4-e5-e7-e8, 3e0-e1-e2-e3-e4-e5-2e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   476    9      A1       {A1}+{A3}    4   60  282    4    28     90                                                               [e1-e2]                                                                                     [e5-e6, e0-e3-e4-e7, e7-e8, 2e0-e1-e2-e5-e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   477    9      A1       {A1}+{A3}    4   60  282    4    26     90                                                               [e1-e2]                                                                                     [e6-e7, e0-e3-e6-e7, e7-e8, 2e0-e1-e2-e4-e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   478    9      A1            {A4}    4   51  201    4    21     63                                                               [e1-e2]                                                                                    [e5-e6, e6-e7, e7-e8, 3e0-e1-e2-e3-e4-2e5-e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   479    9      A1            {D4}    4   49  171    4    19     57                                                               [e1-e2]                                                                                     [e6-e7, e0-e3-e6-e7, 2e0-e1-e2-e4-e5-e6-e7, e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   480    9      A1      2{A1}+{A3}    5   43  186    5    19     58                                                               [e1-e2]                                                                    [e5-e6, e6-e7, e7-e8, 2e0-e1-e2-e5-e6-e7-e8, 2e0-e3-e4-e5-e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   481    9      A1      2{A1}+{A3}    5   44  186    5    18     58                                                               [e1-e2]                                                       [e6-e7, e0-e3-e6-e7, e7-e8, 2e0-e1-e2-e4-e6-e7-e8, 3e0-e1-e2-e3-e4-2e5-e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   482    9      A1      3{A1}+{A2}    5   50  244    5    22     78                                                               [e1-e2]                                                                        [e6-e7, e0-e3-e6-e7, e5-e8, e0-e4-e5-e8, 2e0-e1-e2-e5-e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   483    9      A1           5{A1}    5   56  291    5    26     95                                                               [e1-e2]                                                       [e6-e7, e5-e8, e0-e3-e5-e8, 2e0-e1-e2-e5-e6-e7-e8, 3e0-e1-e2-e3-2e4-e5-e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   484    9      A1      {A1}+2{A2}    5   45  205    5    19     63                                                               [e1-e2]                                                                        [e6-e7, e0-e3-e6-e7, e5-e8, e0-e4-e5-e8, 2e0-e1-e2-e3-e5-e6-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   485    9      A1       {A1}+{A4}    5   36  132    5    14     40                                                               [e1-e2]                                                                       [e5-e6, e6-e7, e0-e5-e6-e7, e7-e8, 3e0-e1-e2-2e3-e4-e5-e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   486    9      A1       {A1}+{D4}    5   34  114    5    14     36                                                               [e1-e2]                                                                              [e5-e6, e0-e3-e5-e6, e6-e7, e7-e8, 2e0-e1-e2-e5-e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   487    9      A1       {A2}+{A3}    5   38  158    5    16     46                                                               [e1-e2]                                                                              [e5-e6, e4-e7, e0-e3-e4-e7, e7-e8, 2e0-e1-e2-e4-e5-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   488    9      A1            {A5}    5   29   91    5    13     25                                                               [e1-e2]                                                                              [e4-e5, e5-e6, e0-e3-e4-e7, e7-e8, 2e0-e1-e2-e4-e5-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   489    9      A1            {A5}    5   29   91    5    11     25                                                               [e1-e2]                                                                              [e5-e6, e0-e3-e5-e6, e6-e7, e3-e8, 2e0-e1-e2-e3-e4-e5-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   490    9      A1            {D5}    5   27   66    5     9     20                                                               [e1-e2]                                                                              [e5-e6, e0-e3-e5-e6, e6-e7, 2e0-e1-e2-e4-e5-e6-e7, e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   491    9      A1      2{A1}+{D4}    6   24   75    6    10     23                                                               [e1-e2]                                                [e5-e6, e0-e3-e5-e6, e6-e7, e7-e8, 2e0-e1-e2-e5-e6-e7-e8, 3e0-e1-e2-e3-2e4-e5-e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   492    9      A1           2{A3}    6   23   79    6     9     21                                                               [e1-e2]                                                                 [e5-e6, e0-e3-e5-e6, e3-e7, 2e0-e1-e2-e3-e4-e5-e7, e4-e8, e0-e3-e4-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   493    9      A1      3{A1}+{A3}    6   31  122    6    13     38                                                               [e1-e2]                                                [e5-e6, e4-e7, 2e0-e1-e2-e4-e5-e6-e7, e7-e8, e0-e4-e7-e8, 3e0-e1-e2-2e3-e4-e5-e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   494    9      A1           3{A2}    6   29  111    6    11     33                                                               [e1-e2]                                                 [e6-e7, e0-e3-e6-e7, 2e0-e1-e2-e4-e5-e6-e7, e5-e8, e0-e4-e5-e8, 2e0-e1-e2-e3-e5-e6-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   495    9      A1           6{A1}    6   41  193    6    19     63                                                               [e1-e2]                                          [e6-e7, e0-e3-e6-e7, e5-e8, e0-e3-e5-e8, 2e0-e1-e2-e5-e6-e7-e8, 3e0-e1-e2-e3-2e4-e5-e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   496    9      A1  {A1}+{A2}+{A3}    6   27  102    6    11     30                                                               [e1-e2]                                                                 [e5-e6, e6-e7, e0-e5-e6-e7, e4-e8, e0-e3-e4-e8, 2e0-e1-e2-e4-e5-e6-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   497    9      A1       {A1}+{A5}    6   20   58    6     8     16                                                               [e1-e2]                                                             [e4-e5, e5-e6, e6-e7, 2e0-e1-e2-e4-e5-e6-e7, e7-e8, 2e0-e3-e4-e5-e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   498    9      A1       {A1}+{A5}    6   21   58    6     7     16                                                               [e1-e2]                                                                 [e5-e6, e0-e3-e5-e6, e3-e7, 2e0-e1-e2-e3-e4-e5-e7, e7-e8, e0-e3-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   499    9      A1       {A1}+{D5}    6   18   43    6     6     13                                                               [e1-e2]                                                                [e4-e5, e5-e6, e0-e4-e5-e6, e6-e7, e7-e8, 3e0-e1-e2-2e3-e4-e5-e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   500    9      A1       {A2}+{A4}    6   22   72    6     8     20                                                               [e1-e2]                                                                 [e5-e6, e0-e3-e5-e6, e4-e7, e0-e4-e5-e7, e7-e8, 2e0-e1-e2-e3-e4-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   501    9      A1            {A6}    6   15   39    6     5      9                                                               [e1-e2]                                                                           [e4-e5, e5-e6, e0-e4-e5-e6, e6-e7, e0-e1-e2-e8, e0-e3-e4-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   502    9      A1            {D6}    6   13   26    6     5      6                                                               [e1-e2]                                                                       [e4-e5, e0-e3-e4-e5, e5-e6, e6-e7, 2e0-e1-e2-e4-e5-e6-e7, e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   503    9      A1            {E6}    6   13   19    6     3      5                                                               [e1-e2]                                                                                 [e3-e4, e0-e1-e2-e5, e5-e6, e0-e3-e5-e6, e6-e7, e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   504    9      A1      3{A1}+{D4}    7   17   49    7     7     15                                                               [e1-e2]                                      [e4-e5, e5-e6, e6-e7, 2e0-e1-e2-e4-e5-e6-e7, e3-e8, 2e0-e1-e2-e3-e4-e5-e8, 2e0-e3-e4-e5-e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   505    9      A1           7{A1}    7   30  128    7    14     42                                                               [e1-e2]                      [e5-e6, e4-e7, 2e0-e1-e2-e4-e5-e6-e7, e3-e8, 2e0-e1-e2-e3-e5-e6-e8, 2e0-e1-e2-e3-e4-e7-e8, 2e0-e3-e4-e5-e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   506    9      A1      {A1}+2{A3}    7   16   50    7     6     14                                                               [e1-e2]                                          [e5-e6, e0-e3-e5-e6, e3-e7, 2e0-e1-e2-e3-e4-e5-e7, e4-e8, e0-e3-e4-e8, 2e0-e1-e2-e4-e5-e6-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   507    9      A1       {A1}+{D6}    7    9   16    7     3      4                                                               [e1-e2]                                                      [e3-e4, e4-e5, e5-e6, 2e0-e1-e2-e3-e4-e5-e6, e6-e7, e7-e8, 2e0-e3-e4-e5-e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   508    9      A1       {A2}+{A5}    7   12   30    7     4      8                                                               [e1-e2]                                                          [e4-e5, e3-e6, 2e0-e1-e2-e3-e4-e5-e6, e6-e7, e0-e3-e6-e7, e5-e8, e0-e4-e5-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   509    9      A1            {A7}    7    8   15    7     2      3                                                               [e1-e2]                                                                    [e3-e4, e0-e1-e2-e5, e5-e6, e0-e3-e5-e6, e6-e7, e4-e8, e0-e3-e4-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   510    9      A1            {E7}    7    5    5    7     1      1                                                               [e1-e2]                                                                          [e0-e1-e2-e3, e3-e4, e4-e5, e0-e3-e4-e5, e5-e6, e6-e7, e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   511    9     2A1              A0    0  240 2160    0    60    252                                                        [e1-e2, e3-e4]                                                                                                                                     []                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   512    9     2A1            {A1}    1  183 1458    1    43    162                                                        [e1-e2, e3-e4]                                                                                                                                [e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   513    9     2A1             2A1    2  138  981    0    50    171                                                        [e1-e2, e3-e4]                                                                                                             [e0-e1-e3-e8, e0-e2-e4-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   514    9     2A1           2{A1}    2  138  981    2    34    105                                                        [e1-e2, e3-e4]                                                                                                         [e7-e8, 2e0-e1-e2-e3-e4-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   515    9     2A1           2{A1}    2  138  981    2    30    105                                                        [e1-e2, e3-e4]                                                                                                                   [e7-e8, e0-e5-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   516    9     2A1            {A2}    2  127  828    2    27     84                                                        [e1-e2, e3-e4]                                                                                                  [e7-e8, 3e0-e1-e2-e3-e4-e5-e6-2e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   517    9     2A1        2A1+{A1}    3  103  657    1    35    111                                                        [e1-e2, e3-e4]                                                                                  [e7-e8, 2e0-e1-e3-e5-e6-e7-e8, 2e0-e2-e4-e5-e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   518    9     2A1           3{A1}    3  103  657    3    23     69                                                        [e1-e2, e3-e4]                                                                                            [e7-e8, e0-e5-e7-e8, 2e0-e1-e2-e3-e4-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   519    9     2A1           3{A1}    3  103  657    3    21     69                                                        [e1-e2, e3-e4]                                                                                                  [e6-e7, e5-e8, 2e0-e1-e2-e5-e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   520    9     2A1       {A1}+{A2}    3   94  555    3    18     55                                                        [e1-e2, e3-e4]                                                                                                            [e6-e7, e7-e8, e0-e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   521    9     2A1            [A3]    3   83  423    1    33     81                                                        [e1-e2, e3-e4]                                                                                                [e0-e5-e6-e7, e0-e1-e3-e8, e0-e2-e4-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   522    9     2A1            {A3}    3   83  423    3    19     39                                                        [e1-e2, e3-e4]                                                                                            [e0-e5-e6-e7, e7-e8, 2e0-e1-e2-e3-e4-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   523    9     2A1            {A3}    3   83  423    3    15     39                                                        [e1-e2, e3-e4]                                                                                           [e6-e7, e7-e8, 3e0-e1-e2-e3-e4-e5-2e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   524    9     2A1        2A1+{A2}    4   69  369    2    21     59                                                        [e1-e2, e3-e4]                                                                           [e6-e7, e7-e8, 2e0-e1-e3-e5-e6-e7-e8, 2e0-e2-e4-e5-e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   525    9     2A1      2{A1}+{A2}    4   69  369    4    13     37                                                        [e1-e2, e3-e4]                                                                              [e6-e7, e7-e8, e0-e6-e7-e8, 3e0-e1-e2-e3-e4-2e5-e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   526    9     2A1           2{A2}    4   62  313    4    10     29                                                        [e1-e2, e3-e4]                                                                                               [e5-e6, e0-e1-e2-e7, e7-e8, e0-e5-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   527    9     2A1             4A1    4   77  438    0    41    114                                                        [e1-e2, e3-e4]                                                               [e0-e1-e3-e8, e0-e2-e4-e8, 2e0-e2-e3-e5-e6-e7-e8, 2e0-e1-e4-e5-e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   528    9     2A1       2A1+2{A1}    4   77  438    2    27     72                                                        [e1-e2, e3-e4]                                                           [e7-e8, 2e0-e1-e2-e3-e4-e7-e8, 2e0-e1-e3-e5-e6-e7-e8, 2e0-e2-e4-e5-e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   529    9     2A1       2A1+2{A1}    4   76  438    2    24     72                                                        [e1-e2, e3-e4]                                                                           [e6-e7, e5-e8, 2e0-e1-e3-e5-e6-e7-e8, 2e0-e2-e4-e5-e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   530    9     2A1           4{A1}    4   77  438    4    17     46                                                        [e1-e2, e3-e4]                                                              [e7-e8, e0-e5-e7-e8, 2e0-e1-e2-e3-e4-e7-e8, 3e0-e1-e2-e3-e4-e5-2e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   531    9     2A1           4{A1}    4   76  438    4    16     46                                                        [e1-e2, e3-e4]                                                                           [e6-e7, e5-e8, 2e0-e1-e2-e3-e4-e5-e8, 2e0-e1-e2-e5-e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   532    9     2A1       {A1}+[A3]    4   60  282    2    22     54                                                        [e1-e2, e3-e4]                                                                                         [e0-e1-e3-e7, e0-e2-e4-e7, e7-e8, e0-e5-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   533    9     2A1       {A1}+{A3}    4   60  282    4    12     26                                                        [e1-e2, e3-e4]                                                                                     [e6-e7, 2e0-e1-e2-e3-e4-e6-e7, e7-e8, e0-e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   534    9     2A1       {A1}+{A3}    4   60  282    4    10     26                                                        [e1-e2, e3-e4]                                                                                     [e5-e6, e0-e1-e2-e7, e7-e8, 2e0-e3-e4-e5-e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   535    9     2A1            {A4}    4   51  201    4     7     17                                                        [e1-e2, e3-e4]                                                                                    [e5-e6, e6-e7, e7-e8, 3e0-e1-e2-e3-e4-2e5-e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   536    9     2A1            [D4]    4   49  171    2    19     33                                                        [e1-e2, e3-e4]                                                                                         [e0-e5-e6-e7, e0-e1-e3-e7, e0-e2-e4-e7, e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   537    9     2A1            {D4}    4   49  171    4     9     15                                                        [e1-e2, e3-e4]                                                                                     [e6-e7, e0-e5-e6-e7, 2e0-e1-e2-e3-e4-e6-e7, e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   538    9     2A1        2A1+[A3]    5   44  186    1    26     54                                                        [e1-e2, e3-e4]                                                        [e0-e1-e3-e7, e0-e2-e4-e7, e7-e8, 2e0-e2-e3-e5-e6-e7-e8, 2e0-e1-e4-e5-e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   539    9     2A1      2{A1}+[A3]    5   44  186    3    16     36                                                        [e1-e2, e3-e4]                                                           [e0-e1-e3-e7, e0-e2-e4-e7, e7-e8, e0-e5-e7-e8, 3e0-e1-e2-e3-e4-e5-2e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   540    9     2A1      2{A1}+[A3]    5   43  186    3    15     36                                                        [e1-e2, e3-e4]                                                                        [e5-e6, e0-e1-e3-e7, e0-e2-e4-e7, e7-e8, 2e0-e1-e2-e5-e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   541    9     2A1        2A1+{A3}    5   44  186    3    14     28                                                        [e1-e2, e3-e4]                                                    [e6-e7, 2e0-e1-e2-e3-e4-e6-e7, e7-e8, 2e0-e1-e3-e5-e6-e7-e8, 2e0-e2-e4-e5-e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   542    9     2A1        2A1+{A3}    5   43  186    3    11     28                                                        [e1-e2, e3-e4]                                                                    [e5-e6, e6-e7, e7-e8, 2e0-e1-e3-e5-e6-e7-e8, 2e0-e2-e4-e5-e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   543    9     2A1      2{A1}+{A3}    5   44  186    5     8     18                                                        [e1-e2, e3-e4]                                                       [e6-e7, 2e0-e1-e2-e3-e4-e6-e7, e7-e8, e0-e6-e7-e8, 3e0-e1-e2-e3-e4-2e5-e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   544    9     2A1      2{A1}+{A3}    5   43  186    5     7     18                                                        [e1-e2, e3-e4]                                                                    [e5-e6, e6-e7, e7-e8, 2e0-e1-e2-e5-e6-e7-e8, 2e0-e3-e4-e5-e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   545    9     2A1   2A1+{A1}+{A2}    5   50  244    3    14     38                                                        [e1-e2, e3-e4]                                                              [e5-e6, e0-e1-e2-e7, e7-e8, 2e0-e1-e3-e5-e6-e7-e8, 2e0-e2-e4-e5-e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   546    9     2A1        4A1+{A1}    5   56  291    1    28     75                                                        [e1-e2, e3-e4]                                                        [e6-e7, e0-e1-e3-e8, e0-e2-e4-e8, 2e0-e2-e3-e5-e6-e7-e8, 2e0-e1-e4-e5-e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   547    9     2A1       2A1+3{A1}    5   56  291    3    18     47                                                        [e1-e2, e3-e4]                                                    [e6-e7, e5-e8, 2e0-e1-e2-e3-e4-e5-e8, 2e0-e1-e3-e5-e6-e7-e8, 2e0-e2-e4-e5-e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   548    9     2A1           5{A1}    5   56  291    5    12     31                                                        [e1-e2, e3-e4]                                                    [e6-e7, e5-e8, 2e0-e1-e2-e3-e4-e5-e8, 2e0-e1-e2-e5-e6-e7-e8, 2e0-e3-e4-e5-e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   549    9     2A1       {A1}+[D4]    5   34  114    3    12     22                                                        [e1-e2, e3-e4]                                                                                  [e0-e1-e3-e6, e0-e2-e4-e6, e6-e7, e7-e8, e0-e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   550    9     2A1       {A1}+{D4}    5   34  114    5     6     10                                                        [e1-e2, e3-e4]                                                                    [e5-e6, 2e0-e1-e2-e3-e4-e5-e6, e6-e7, e7-e8, 2e0-e1-e2-e5-e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   551    9     2A1       {A2}+[A3]    5   38  158    3    12     30                                                        [e1-e2, e3-e4]                                                                                  [e5-e6, e0-e1-e3-e7, e0-e2-e4-e7, e7-e8, e0-e5-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   552    9     2A1       {A2}+{A3}    5   38  158    5     6     14                                                        [e1-e2, e3-e4]                                                                                  [e5-e6, e0-e1-e2-e7, e0-e3-e4-e7, e7-e8, e0-e5-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   553    9     2A1            {A5}    5   29   91    5     3      7                                                        [e1-e2, e3-e4]                                                                              [e0-e1-e2-e5, e5-e6, e6-e7, e7-e8, 2e0-e3-e4-e5-e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   554    9     2A1            [D5]    5   27   66    3     9     14                                                        [e1-e2, e3-e4]                                                                                  [e0-e1-e3-e6, e0-e2-e4-e6, e6-e7, e0-e5-e6-e7, e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   555    9     2A1            {D5}    5   27   66    5     3      6                                                        [e1-e2, e3-e4]                                                                              [e5-e6, 2e0-e1-e2-e3-e4-e5-e6, e6-e7, e0-e5-e6-e7, e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   556    9     2A1        2A1+{A4}    6   25   86    4     5     12                                                        [e1-e2, e3-e4]                                                       [e0-e1-e2-e5, e5-e6, e6-e7, e7-e8, 2e0-e1-e3-e5-e6-e7-e8, 2e0-e2-e4-e5-e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   557    9     2A1        2A1+[D4]    6   24   75    2    14     23                                                        [e1-e2, e3-e4]                                                 [e0-e1-e3-e6, e0-e2-e4-e6, e6-e7, e7-e8, 2e0-e2-e3-e5-e6-e7-e8, 2e0-e1-e4-e5-e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   558    9     2A1      2{A1}+[D4]    6   24   75    4     8     15                                                        [e1-e2, e3-e4]                                                    [e0-e1-e3-e6, e0-e2-e4-e6, e6-e7, e7-e8, e0-e6-e7-e8, 3e0-e1-e2-e3-e4-2e5-e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   559    9     2A1        2A1+{D4}    6   24   75    4     6     11                                                        [e1-e2, e3-e4]                                             [e5-e6, 2e0-e1-e2-e3-e4-e5-e6, e6-e7, e7-e8, 2e0-e1-e3-e5-e6-e7-e8, 2e0-e2-e4-e5-e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   560    9     2A1      2{A1}+{D4}    6   24   75    6     4      7                                                        [e1-e2, e3-e4]                                             [e5-e6, 2e0-e1-e2-e3-e4-e5-e6, e6-e7, e7-e8, 2e0-e1-e2-e5-e6-e7-e8, 2e0-e3-e4-e5-e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   561    9     2A1           2[A3]    6   23   79    2    15     27                                                        [e1-e2, e3-e4]                                                               [e0-e1-e3-e6, e0-e2-e4-e6, e0-e2-e3-e7, e0-e1-e4-e7, e7-e8, e0-e5-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   562    9     2A1       {A3}+[A3]    6   23   79    4     7     15                                                        [e1-e2, e3-e4]                                                           [e0-e1-e3-e6, e0-e2-e4-e6, e5-e7, 2e0-e1-e2-e3-e4-e5-e7, e7-e8, e0-e5-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   563    9     2A1       [A3]+{A3}    6   22   79    4     6     15                                                        [e1-e2, e3-e4]                                                                     [e0-e1-e2-e5, e5-e6, e0-e1-e3-e7, e0-e2-e4-e7, e7-e8, e0-e5-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   564    9     2A1           2{A3}    6   23   79    6     3      7                                                        [e1-e2, e3-e4]                                                           [e5-e6, 2e0-e1-e2-e3-e4-e5-e6, e0-e1-e2-e7, e0-e3-e4-e7, e7-e8, e0-e5-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   565    9     2A1   2A1+{A1}+[A3]    6   31  122    2    17     36                                                        [e1-e2, e3-e4]                                                 [e5-e6, e0-e1-e3-e7, e0-e2-e4-e7, e7-e8, 2e0-e2-e3-e5-e6-e7-e8, 2e0-e1-e4-e5-e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   566    9     2A1      3{A1}+[A3]    6   31  122    4    11     24                                                        [e1-e2, e3-e4]                                                 [e5-e6, e0-e1-e3-e7, e0-e2-e4-e7, e7-e8, 2e0-e1-e2-e5-e6-e7-e8, 2e0-e3-e4-e5-e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   567    9     2A1   2A1+{A1}+{A3}    6   31  122    4     9     18                                                        [e1-e2, e3-e4]                                                 [e5-e6, e0-e1-e2-e7, e0-e3-e4-e7, e7-e8, 2e0-e1-e3-e5-e6-e7-e8, 2e0-e2-e4-e5-e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   568    9     2A1        4A1+{A2}    6   36  161    2    16     41                                                        [e1-e2, e3-e4]                                                 [e5-e6, e6-e7, e0-e1-e3-e8, e0-e2-e4-e8, 2e0-e2-e3-e5-e6-e7-e8, 2e0-e1-e4-e5-e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   569    9     2A1  2A1+2{A1}+{A2}    6   36  161    4    10     25                                                        [e1-e2, e3-e4]                                                 [e5-e6, e6-e7, e0-e1-e2-e8, e0-e3-e4-e8, 2e0-e1-e3-e5-e6-e7-e8, 2e0-e2-e4-e5-e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   570    9     2A1       4A1+2{A1}    6   41  193    2    21     49                                                        [e1-e2, e3-e4]                                 [e0-e1-e3-e7, e0-e2-e4-e7, e6-e8, 2e0-e1-e2-e3-e4-e6-e8, 2e0-e2-e3-e5-e6-e7-e8, 2e0-e1-e4-e5-e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   571    9     2A1       4A1+2{A1}    6   41  193    2    19     49                                                        [e1-e2, e3-e4]                                           [e5-e6, e0-e1-e2-e7, e0-e1-e3-e8, e0-e2-e4-e8, 2e0-e2-e3-e5-e6-e7-e8, 2e0-e1-e4-e5-e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   572    9     2A1       4{A1}+2A1    6   41  193    4    13     31                                                        [e1-e2, e3-e4]                                    [e0-e1-e3-e7, e0-e2-e4-e7, e6-e8, e0-e6-e7-e8, 2e0-e1-e2-e3-e4-e6-e8, 3e0-e1-e2-e3-e4-2e5-e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   573    9     2A1           6{A1}    6   41  193    6     9     21                                                        [e1-e2, e3-e4]                             [e6-e7, 2e0-e1-e2-e3-e4-e6-e7, e5-e8, 2e0-e1-e2-e3-e4-e5-e8, 2e0-e1-e2-e5-e6-e7-e8, 2e0-e3-e4-e5-e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   574    9     2A1       {A1}+[D5]    6   18   43    4     6      9                                                        [e1-e2, e3-e4]                                                                 [e0-e1-e3-e5, e0-e2-e4-e5, e5-e6, e6-e7, e7-e8, 2e0-e1-e2-e5-e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   575    9     2A1       {A2}+[D4]    6   20   64    4     6     12                                                        [e1-e2, e3-e4]                                                                     [e0-e1-e2-e5, e0-e1-e3-e6, e0-e2-e4-e6, e6-e7, e7-e8, e0-e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   576    9     2A1            [D6]    6   13   26    4     3      6                                                        [e1-e2, e3-e4]                                                                           [e0-e1-e3-e5, e0-e2-e4-e5, e5-e6, e6-e7, e0-e5-e6-e7, e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   577    9     2A1            {D6}    6   13   26    6     1      2                                                        [e1-e2, e3-e4]                                                                           [e0-e1-e2-e5, e0-e3-e4-e5, e5-e6, e6-e7, e0-e5-e6-e7, e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   578    9     2A1   2A1+{A2}+[A3]    7   19   66    3     9     20                                                        [e1-e2, e3-e4]                                    [e0-e1-e2-e5, e5-e6, e0-e1-e3-e7, e0-e2-e4-e7, e7-e8, 2e0-e2-e3-e5-e6-e7-e8, 2e0-e1-e4-e5-e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   579    9     2A1        2A1+[D5]    7   12   28    3     6     10                                                        [e1-e2, e3-e4]                                          [e0-e1-e3-e5, e0-e2-e4-e5, e5-e6, e6-e7, e7-e8, 2e0-e2-e3-e5-e6-e7-e8, 2e0-e1-e4-e5-e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   580    9     2A1      2{A1}+[D5]    7   12   28    5     4      6                                                        [e1-e2, e3-e4]                                          [e0-e1-e3-e5, e0-e2-e4-e5, e5-e6, e6-e7, e7-e8, 2e0-e1-e2-e5-e6-e7-e8, 2e0-e3-e4-e5-e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   581    9     2A1        2A1+{D5}    7   12   28    5     2      4                                                        [e1-e2, e3-e4]                                          [e0-e1-e2-e5, e0-e3-e4-e5, e5-e6, e6-e7, e7-e8, 2e0-e1-e3-e5-e6-e7-e8, 2e0-e2-e4-e5-e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   582    9     2A1   2A1+{A1}+[D4]    7   17   49    3     9     15                                                        [e1-e2, e3-e4]                                    [e0-e1-e2-e5, e0-e1-e3-e6, e0-e2-e4-e6, e6-e7, e7-e8, 2e0-e2-e3-e5-e6-e7-e8, 2e0-e1-e4-e5-e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   583    9     2A1  2A1+2{A1}+[A3]    7   22   80    3    12     24                                                        [e1-e2, e3-e4]                          [e0-e1-e3-e6, e0-e2-e4-e6, e6-e7, e5-e8, 2e0-e1-e2-e3-e4-e5-e8, 2e0-e2-e3-e5-e6-e7-e8, 2e0-e1-e4-e5-e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   584    9     2A1        4A1+{A3}    7   22   80    3    10     20                                                        [e1-e2, e3-e4]                          [e5-e6, 2e0-e1-e2-e3-e4-e5-e6, e6-e7, e0-e1-e3-e8, e0-e2-e4-e8, 2e0-e2-e3-e5-e6-e7-e8, 2e0-e1-e4-e5-e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   585    9     2A1        4A1+{A3}    7   22   80    3     8     20                                                        [e1-e2, e3-e4]                                    [e0-e1-e2-e5, e5-e6, e6-e7, e0-e1-e3-e8, e0-e2-e4-e8, 2e0-e2-e3-e5-e6-e7-e8, 2e0-e1-e4-e5-e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   586    9     2A1      4{A1}+[A3]    7   22   80    5     8     16                                                        [e1-e2, e3-e4]                          [e0-e1-e3-e6, e0-e2-e4-e6, e6-e7, e5-e8, 2e0-e1-e2-e3-e4-e5-e8, 2e0-e1-e2-e5-e6-e7-e8, 2e0-e3-e4-e5-e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   587    9     2A1  2A1+2{A1}+{A3}    7   22   80    5     6     12                                                        [e1-e2, e3-e4]                          [e5-e6, 2e0-e1-e2-e3-e4-e5-e6, e6-e7, e0-e1-e2-e8, e0-e3-e4-e8, 2e0-e1-e3-e5-e6-e7-e8, 2e0-e2-e4-e5-e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   588    9     2A1       4A1+3{A1}    7   30  128    3    14     32                                                        [e1-e2, e3-e4]                              [e5-e6, e0-e1-e3-e7, e0-e2-e4-e7, e0-e1-e2-e8, e0-e3-e4-e8, 2e0-e2-e3-e5-e6-e7-e8, 2e0-e1-e4-e5-e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   589    9     2A1      {A1}+2[A3]    7   16   50    3    10     18                                                        [e1-e2, e3-e4]                                              [e0-e1-e3-e5, e0-e2-e4-e5, e5-e6, e0-e2-e3-e7, e0-e1-e4-e7, e7-e8, 2e0-e1-e2-e5-e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   590    9     2A1       [A3]+[D4]    7   11   32    3     7     12                                                        [e1-e2, e3-e4]                                                        [e0-e1-e3-e5, e0-e2-e4-e5, e5-e6, e0-e2-e3-e7, e0-e1-e4-e7, e7-e8, e0-e5-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   591    9     2A1       {A3}+[D4]    7   11   32    5     3      6                                                        [e1-e2, e3-e4]                                                        [e0-e1-e3-e5, e0-e2-e4-e5, e5-e6, e0-e1-e2-e7, e0-e3-e4-e7, e7-e8, e0-e5-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   592    9     2A1       [A3]+{D4}    7   11   32    5     3      6                                                        [e1-e2, e3-e4]                                                        [e0-e1-e2-e5, e0-e3-e4-e5, e5-e6, e0-e1-e3-e7, e0-e2-e4-e7, e7-e8, e0-e5-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   593    9     2A1            [D7]    7    5   10    5     1      2                                                        [e1-e2, e3-e4]                                                                          [e2-e3, e1-e4, e0-e1-e2-e5, e5-e6, e6-e7, e0-e5-e6-e7, e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   594    9     2A1     2{A1}+2[A3]    8   11   32    4     7     12                                                        [e1-e2, e3-e4]                       [e0-e1-e3-e5, e0-e2-e4-e5, e5-e6, e0-e2-e3-e7, e0-e1-e4-e7, e7-e8, 2e0-e1-e2-e5-e6-e7-e8, 2e0-e3-e4-e5-e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   595    9     2A1   2A1+{A3}+[A3]    8   11   32    4     5     10                                                        [e1-e2, e3-e4]                       [e0-e1-e3-e5, e0-e2-e4-e5, e5-e6, e0-e1-e2-e7, e0-e3-e4-e7, e7-e8, 2e0-e2-e3-e5-e6-e7-e8, 2e0-e1-e4-e5-e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   596    9     2A1        2A1+[D6]    8    6   10    4     2      4                                                        [e1-e2, e3-e4]                                         [e2-e3, e1-e4, e0-e1-e2-e5, e5-e6, e6-e7, e7-e8, 2e0-e2-e3-e5-e6-e7-e8, 2e0-e1-e4-e5-e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   597    9     2A1           2[D4]    8    5   13    4     3      5                                                        [e1-e2, e3-e4]                                                       [e2-e3, e1-e4, e0-e1-e2-e5, e0-e2-e3-e6, e0-e1-e4-e6, e6-e7, e7-e8, e0-e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   598    9     2A1  2A1+2{A1}+[D4]    8   12   32    4     6     10                                                        [e1-e2, e3-e4]                       [e0-e1-e3-e5, e0-e2-e4-e5, e5-e6, e6-e7, e0-e1-e2-e8, e0-e3-e4-e8, 2e0-e2-e3-e5-e6-e7-e8, 2e0-e1-e4-e5-e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   599    9     2A1        4A1+{D4}    8   12   32    4     4      8                                                        [e1-e2, e3-e4]                       [e0-e1-e2-e5, e0-e3-e4-e5, e5-e6, e6-e7, e0-e1-e3-e8, e0-e2-e4-e8, 2e0-e2-e3-e5-e6-e7-e8, 2e0-e1-e4-e5-e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   600    9     2A1       4{A1}+4A1    8   22   85    4    10     21                                                        [e1-e2, e3-e4]       [e0-e1-e3-e6, e0-e2-e4-e6, e0-e2-e3-e7, e0-e1-e4-e7, e5-e8, 2e0-e1-e2-e3-e4-e5-e8, 2e0-e1-e2-e5-e6-e7-e8, 2e0-e3-e4-e5-e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   601    9     2A1       [A3]+[D5]    8    5   11    4     3      5                                                        [e1-e2, e3-e4]                                                       [e2-e3, e1-e4, e0-e1-e2-e5, e5-e6, e0-e2-e3-e7, e0-e1-e4-e7, e7-e8, e0-e5-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   602    9     3A1              A0    0  240 2160    0    26     72                                                 [e1-e2, e3-e4, e5-e6]                                                                                                                                     []                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   603    9     3A1            {A1}    1  183 1458    1    25     48                                                 [e1-e2, e3-e4, e5-e6]                                                                                                                [2e0-e1-e2-e3-e4-e5-e6]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   604    9     3A1            {A1}    1  183 1458    1    17     48                                                 [e1-e2, e3-e4, e5-e6]                                                                                                                                [e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   605    9     3A1             2A1    2  138  981    0    20     51                                                 [e1-e2, e3-e4, e5-e6]                                                                                                             [e0-e1-e3-e8, e0-e2-e4-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   606    9     3A1           2{A1}    2  138  981    2    16     33                                                 [e1-e2, e3-e4, e5-e6]                                                                                                         [2e0-e1-e2-e3-e4-e5-e6, e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   607    9     3A1           2{A1}    2  138  981    2    12     33                                                 [e1-e2, e3-e4, e5-e6]                                                                                                         [e7-e8, 2e0-e1-e2-e3-e4-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   608    9     3A1            [A2]    2  127  828    0    25     48                                                 [e1-e2, e3-e4, e5-e6]                                                                                                             [e0-e1-e3-e5, e0-e2-e4-e6]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   609    9     3A1            {A2}    2  127  828    2     9     26                                                 [e1-e2, e3-e4, e5-e6]                                                                                                  [e7-e8, 3e0-e1-e2-e3-e4-e5-e6-2e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   610    9     3A1        2A1+{A1}    3  103  657    1    19     33                                                 [e1-e2, e3-e4, e5-e6]                                                                                      [2e0-e1-e2-e3-e4-e5-e6, e0-e1-e3-e8, e0-e2-e4-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   611    9     3A1        2A1+{A1}    3  103  657    1    13     33                                                 [e1-e2, e3-e4, e5-e6]                                                                                  [e7-e8, 2e0-e1-e2-e3-e5-e7-e8, 2e0-e1-e2-e4-e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   612    9     3A1           3{A1}    3  103  657    3    11     23                                                 [e1-e2, e3-e4, e5-e6]                                                                                  [2e0-e1-e2-e3-e4-e5-e6, e7-e8, 2e0-e1-e2-e3-e4-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   613    9     3A1           3{A1}    3  103  657    3     9     23                                                 [e1-e2, e3-e4, e5-e6]                                                                                  [e7-e8, 2e0-e1-e2-e3-e4-e7-e8, 2e0-e1-e2-e5-e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   614    9     3A1       {A1}+[A2]    3   94  555    1    16     33                                                 [e1-e2, e3-e4, e5-e6]                                                                                                      [e0-e1-e3-e5, e0-e2-e4-e6, e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   615    9     3A1       {A1}+{A2}    3   94  555    3     8     19                                                 [e1-e2, e3-e4, e5-e6]                                                                           [2e0-e1-e2-e3-e4-e5-e6, e7-e8, 3e0-e1-e2-e3-e4-e5-e6-2e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   616    9     3A1            [A3]    3   83  423    1    11     27                                                 [e1-e2, e3-e4, e5-e6]                                                                                                [e0-e1-e2-e7, e0-e3-e5-e8, e0-e4-e6-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   617    9     3A1            {A3}    3   83  423    3     5     13                                                 [e1-e2, e3-e4, e5-e6]                                                                                            [e0-e1-e2-e7, e7-e8, 2e0-e3-e4-e5-e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   618    9     3A1        2A1+[A2]    4   69  369    0    19     33                                                 [e1-e2, e3-e4, e5-e6]                                                                                   [e0-e1-e3-e5, e0-e2-e4-e6, e0-e2-e3-e8, e0-e1-e4-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   619    9     3A1      2{A1}+[A2]    4   69  369    2    11     23                                                 [e1-e2, e3-e4, e5-e6]                                                                               [e0-e1-e3-e5, e0-e2-e4-e6, e7-e8, 2e0-e1-e2-e3-e4-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   620    9     3A1        2A1+{A2}    4   69  369    2     7     17                                                 [e1-e2, e3-e4, e5-e6]                                                                     [e0-e1-e2-e7, e7-e8, 2e0-e1-e3-e4-e5-e7-e8, 2e0-e2-e3-e4-e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   621    9     3A1             2A2    4   62  313    0    14     31                                                 [e1-e2, e3-e4, e5-e6]                                                                                   [e0-e1-e3-e7, e0-e2-e4-e7, e0-e1-e5-e8, e0-e2-e6-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   622    9     3A1       {A2}+[A2]    4   62  313    2     8     19                                                 [e1-e2, e3-e4, e5-e6]                                                                        [e0-e1-e3-e5, e0-e2-e4-e6, e7-e8, 3e0-e1-e2-e3-e4-e5-e6-2e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   623    9     3A1             4A1    4   77  438    0    15     36                                                 [e1-e2, e3-e4, e5-e6]                                                               [e0-e1-e3-e8, e0-e2-e4-e8, 2e0-e2-e3-e5-e6-e7-e8, 2e0-e1-e4-e5-e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   624    9     3A1       2A1+2{A1}    4   76  438    2    12     22                                                 [e1-e2, e3-e4, e5-e6]                                                           [2e0-e1-e2-e3-e4-e5-e6, e7-e8, 2e0-e1-e2-e3-e5-e7-e8, 2e0-e1-e2-e4-e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   625    9     3A1       2A1+2{A1}    4   77  438    2     9     22                                                 [e1-e2, e3-e4, e5-e6]                                                           [e7-e8, 2e0-e1-e2-e3-e4-e7-e8, 2e0-e1-e3-e5-e6-e7-e8, 2e0-e2-e4-e5-e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   626    9     3A1           4{A1}    4   76  438    4     8     16                                                 [e1-e2, e3-e4, e5-e6]                                                           [2e0-e1-e2-e3-e4-e5-e6, e7-e8, 2e0-e1-e2-e3-e4-e7-e8, 2e0-e1-e2-e5-e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   627    9     3A1           4{A1}    4   77  438    4     7     16                                                 [e1-e2, e3-e4, e5-e6]                                                           [e7-e8, 2e0-e1-e2-e3-e4-e7-e8, 2e0-e1-e2-e5-e6-e7-e8, 2e0-e3-e4-e5-e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   628    9     3A1       {A1}+[A3]    4   60  282    2    10     18                                                 [e1-e2, e3-e4, e5-e6]                                                                         [2e0-e1-e2-e3-e4-e5-e6, e0-e1-e2-e7, e0-e3-e5-e8, e0-e4-e6-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   629    9     3A1       {A1}+[A3]    4   60  282    2     8     18                                                 [e1-e2, e3-e4, e5-e6]                                                                               [e0-e1-e3-e7, e0-e2-e4-e7, e7-e8, 2e0-e1-e2-e5-e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   630    9     3A1       {A1}+{A3}    4   60  282    4     4     10                                                 [e1-e2, e3-e4, e5-e6]                                                                     [2e0-e1-e2-e3-e4-e5-e6, e0-e1-e2-e7, e7-e8, 2e0-e3-e4-e5-e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   631    9     3A1            [D4]    4   49  171    2     5     11                                                 [e1-e2, e3-e4, e5-e6]                                                                                         [e0-e1-e2-e7, e0-e3-e5-e7, e0-e4-e6-e7, e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   632    9     3A1            {D4}    4   49  171    4     3      5                                                 [e1-e2, e3-e4, e5-e6]                                                                                         [e0-e1-e2-e7, e0-e3-e4-e7, e0-e5-e6-e7, e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   633    9     3A1        2A1+[A3]    5   44  186    1     8     18                                                 [e1-e2, e3-e4, e5-e6]                                                        [e0-e1-e3-e7, e0-e2-e4-e7, e7-e8, 2e0-e2-e3-e5-e6-e7-e8, 2e0-e1-e4-e5-e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   634    9     3A1      2{A1}+[A3]    5   43  186    3     7     12                                                 [e1-e2, e3-e4, e5-e6]                                                        [2e0-e1-e2-e3-e4-e5-e6, e0-e1-e3-e7, e0-e2-e4-e7, e7-e8, 2e0-e1-e2-e5-e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   635    9     3A1      2{A1}+[A3]    5   44  186    3     6     12                                                 [e1-e2, e3-e4, e5-e6]                                                        [e0-e1-e3-e7, e0-e2-e4-e7, e7-e8, 2e0-e1-e2-e5-e6-e7-e8, 2e0-e3-e4-e5-e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   636    9     3A1        2A1+{A3}    5   44  186    3     4      8                                                 [e1-e2, e3-e4, e5-e6]                                                        [e0-e1-e2-e7, e0-e3-e4-e7, e7-e8, 2e0-e1-e3-e5-e6-e7-e8, 2e0-e2-e4-e5-e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   637    9     3A1   2A1+{A1}+[A2]    5   50  244    1    12     22                                                 [e1-e2, e3-e4, e5-e6]                                                        [e0-e1-e3-e5, e0-e2-e4-e6, e7-e8, 2e0-e1-e2-e4-e5-e7-e8, 2e0-e1-e2-e3-e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   638    9     3A1      3{A1}+[A2]    5   50  244    3     8     16                                                 [e1-e2, e3-e4, e5-e6]                                                        [e0-e1-e3-e5, e0-e2-e4-e6, e7-e8, 2e0-e1-e2-e3-e4-e7-e8, 2e0-e1-e2-e5-e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   639    9     3A1   2A1+{A1}+{A2}    5   50  244    3     6     12                                                 [e1-e2, e3-e4, e5-e6]                                              [2e0-e1-e2-e3-e4-e5-e6, e0-e1-e2-e7, e7-e8, 2e0-e1-e3-e4-e5-e7-e8, 2e0-e2-e3-e4-e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   640    9     3A1        4A1+{A1}    5   56  291    1    14     23                                                 [e1-e2, e3-e4, e5-e6]                                        [2e0-e1-e2-e3-e4-e5-e6, e0-e1-e3-e8, e0-e2-e4-e8, 2e0-e2-e3-e5-e6-e7-e8, 2e0-e1-e4-e5-e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   641    9     3A1        4A1+{A1}    5   56  291    1    10     23                                                 [e1-e2, e3-e4, e5-e6]                                                  [e0-e1-e2-e7, e0-e1-e3-e8, e0-e2-e4-e8, 2e0-e2-e3-e5-e6-e7-e8, 2e0-e1-e4-e5-e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   642    9     3A1       2A1+3{A1}    5   56  291    3     8     15                                                 [e1-e2, e3-e4, e5-e6]                                    [2e0-e1-e2-e3-e4-e5-e6, e7-e8, 2e0-e1-e2-e3-e4-e7-e8, 2e0-e1-e3-e5-e6-e7-e8, 2e0-e2-e4-e5-e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   643    9     3A1           5{A1}    5   56  291    5     6     11                                                 [e1-e2, e3-e4, e5-e6]                                    [2e0-e1-e2-e3-e4-e5-e6, e7-e8, 2e0-e1-e2-e3-e4-e7-e8, 2e0-e1-e2-e5-e6-e7-e8, 2e0-e3-e4-e5-e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   644    9     3A1        {A1}+2A2    5   45  205    1    13     19                                                 [e1-e2, e3-e4, e5-e6]                                                            [2e0-e1-e2-e3-e4-e5-e6, e0-e1-e3-e7, e0-e2-e4-e7, e0-e1-e5-e8, e0-e2-e6-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   645    9     3A1        {A1}+2A2    5   45  205    1     9     19                                                 [e1-e2, e3-e4, e5-e6]                                                                      [e0-e1-e3-e7, e0-e2-e4-e7, e0-e1-e2-e8, e0-e3-e5-e8, e0-e4-e6-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   646    9     3A1       {A1}+[D4]    5   34  114    3     4      8                                                 [e1-e2, e3-e4, e5-e6]                                                                  [2e0-e1-e2-e3-e4-e5-e6, e0-e1-e2-e7, e0-e3-e5-e7, e0-e4-e6-e7, e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   647    9     3A1       {A1}+{D4}    5   34  114    5     2      4                                                 [e1-e2, e3-e4, e5-e6]                                                                  [2e0-e1-e2-e3-e4-e5-e6, e0-e1-e2-e7, e0-e3-e4-e7, e0-e5-e6-e7, e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   648    9     3A1       [A2]+[A3]    5   38  158    1    10     18                                                 [e1-e2, e3-e4, e5-e6]                                                                      [e0-e1-e3-e5, e0-e2-e4-e6, e0-e1-e2-e7, e0-e4-e5-e8, e0-e3-e6-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   649    9     3A1       [A2]+{A3}    5   38  158    3     4     10                                                 [e1-e2, e3-e4, e5-e6]                                                                  [e0-e1-e3-e5, e0-e2-e4-e6, e0-e1-e2-e7, e7-e8, 2e0-e3-e4-e5-e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   650    9     3A1            [A5]    5   29   91    1     7     13                                                 [e1-e2, e3-e4, e5-e6]                                                                                  [e2-e3, e1-e4, e0-e1-e2-e7, e0-e1-e5-e8, e0-e2-e6-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   651    9     3A1            [D5]    5   27   66    3     3      4                                                 [e1-e2, e3-e4, e5-e6]                                                                                        [e2-e3, e1-e4, e0-e1-e2-e7, e0-e5-e6-e7, e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   652    9     3A1       2{A1}+2A2    6   32  134    2     8     12                                                 [e1-e2, e3-e4, e5-e6]                                               [2e0-e1-e2-e3-e4-e5-e6, e0-e1-e3-e7, e0-e2-e4-e7, e0-e1-e2-e8, e0-e3-e5-e8, e0-e4-e6-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   653    9     3A1   2A1+{A2}+[A2]    6   32  134    2     6     12                                                 [e1-e2, e3-e4, e5-e6]                                           [e0-e1-e3-e5, e0-e2-e4-e6, e0-e1-e2-e7, e7-e8, 2e0-e2-e3-e4-e5-e7-e8, 2e0-e1-e3-e4-e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   654    9     3A1        2A1+[D4]    6   24   75    2     4      7                                                 [e1-e2, e3-e4, e5-e6]                                                       [e2-e3, e1-e4, e0-e1-e2-e7, e7-e8, 2e0-e2-e3-e5-e6-e7-e8, 2e0-e1-e4-e5-e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   655    9     3A1             2A3    6   23   79    0     9     17                                                 [e1-e2, e3-e4, e5-e6]                                                                     [e2-e3, e1-e4, e0-e1-e5-e7, e0-e2-e6-e7, e0-e2-e3-e8, e0-e1-e4-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   656    9     3A1           2[A3]    6   23   79    2     5      9                                                 [e1-e2, e3-e4, e5-e6]                                                                 [e2-e3, e1-e4, e0-e2-e3-e7, e0-e1-e4-e7, e7-e8, 2e0-e1-e2-e5-e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   657    9     3A1   2A1+{A1}+[A3]    6   31  122    2     7     12                                                 [e1-e2, e3-e4, e5-e6]                                 [2e0-e1-e2-e3-e4-e5-e6, e0-e1-e3-e7, e0-e2-e4-e7, e7-e8, 2e0-e2-e3-e5-e6-e7-e8, 2e0-e1-e4-e5-e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   658    9     3A1      3{A1}+[A3]    6   31  122    4     5      8                                                 [e1-e2, e3-e4, e5-e6]                                 [2e0-e1-e2-e3-e4-e5-e6, e0-e1-e3-e7, e0-e2-e4-e7, e7-e8, 2e0-e1-e2-e5-e6-e7-e8, 2e0-e3-e4-e5-e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   659    9     3A1   2A1+{A1}+{A3}    6   31  122    4     3      6                                                 [e1-e2, e3-e4, e5-e6]                                 [2e0-e1-e2-e3-e4-e5-e6, e0-e1-e2-e7, e0-e3-e4-e7, e7-e8, 2e0-e1-e3-e5-e6-e7-e8, 2e0-e2-e4-e5-e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   660    9     3A1        2A2+[A2]    6   29  111    0    13     19                                                 [e1-e2, e3-e4, e5-e6]                                                         [e0-e1-e3-e5, e0-e2-e4-e6, e0-e2-e3-e7, e0-e1-e4-e7, e0-e2-e5-e8, e0-e1-e6-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   661    9     3A1        2A2+{A2}    6   29  111    2     5      9                                                 [e1-e2, e3-e4, e5-e6]                                                         [e0-e1-e2-e7, e0-e3-e5-e7, e0-e4-e6-e7, e0-e3-e4-e8, e0-e1-e5-e8, e0-e2-e6-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   662    9     3A1  2A1+2{A1}+[A2]    6   36  161    2     8     15                                                 [e1-e2, e3-e4, e5-e6]                                 [e0-e1-e3-e5, e0-e2-e4-e6, e7-e8, 2e0-e1-e2-e3-e4-e7-e8, 2e0-e2-e3-e5-e6-e7-e8, 2e0-e1-e4-e5-e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   663    9     3A1      4{A1}+[A2]    6   36  161    4     6     11                                                 [e1-e2, e3-e4, e5-e6]                                 [e0-e1-e3-e5, e0-e2-e4-e6, e7-e8, 2e0-e1-e2-e3-e4-e7-e8, 2e0-e1-e2-e5-e6-e7-e8, 2e0-e3-e4-e5-e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   664    9     3A1       4A1+2{A1}    6   41  193    2     9     15                                                 [e1-e2, e3-e4, e5-e6]                           [2e0-e1-e2-e3-e4-e5-e6, e0-e1-e2-e7, e0-e1-e3-e8, e0-e2-e4-e8, 2e0-e2-e3-e5-e6-e7-e8, 2e0-e1-e4-e5-e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   665    9     3A1       4A1+2{A1}    6   41  193    2     7     15                                                 [e1-e2, e3-e4, e5-e6]                                     [e0-e1-e3-e7, e0-e2-e4-e7, e0-e1-e2-e8, e0-e3-e4-e8, 2e0-e2-e3-e5-e6-e7-e8, 2e0-e1-e4-e5-e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   666    9     3A1  {A1}+[A2]+[A3]    6   27  102    2     7     12                                                 [e1-e2, e3-e4, e5-e6]                                                     [e0-e1-e3-e5, e0-e2-e4-e6, e0-e2-e3-e7, e0-e1-e4-e7, e7-e8, 2e0-e1-e2-e5-e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   667    9     3A1       {A1}+[A5]    6   20   58    2     6      8                                                 [e1-e2, e3-e4, e5-e6]                                                           [2e0-e1-e2-e3-e4-e5-e6, e2-e3, e1-e4, e0-e1-e2-e7, e0-e1-e5-e8, e0-e2-e6-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   668    9     3A1       {A1}+[A5]    6   21   58    2     5      8                                                 [e1-e2, e3-e4, e5-e6]                                                                 [e2-e3, e1-e4, e0-e1-e5-e7, e0-e2-e6-e7, e7-e8, 2e0-e1-e2-e3-e4-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   669    9     3A1       {A1}+[D5]    6   18   43    4     2      3                                                 [e1-e2, e3-e4, e5-e6]                                                                 [2e0-e1-e2-e3-e4-e5-e6, e2-e3, e1-e4, e0-e1-e2-e7, e0-e5-e6-e7, e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   670    9     3A1       [A2]+[D4]    6   20   64    2     4      8                                                 [e1-e2, e3-e4, e5-e6]                                                               [e0-e1-e3-e5, e0-e2-e4-e6, e0-e1-e2-e7, e0-e4-e5-e7, e0-e3-e6-e7, e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   671    9     3A1       [A2]+{D4}    6   20   64    4     2      4                                                 [e1-e2, e3-e4, e5-e6]                                                               [e0-e1-e3-e5, e0-e2-e4-e6, e0-e1-e2-e7, e0-e3-e4-e7, e0-e5-e6-e7, e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   672    9     3A1            [E6]    6   13   19    2     3      3                                                 [e1-e2, e3-e4, e5-e6]                                                                                       [e2-e3, e1-e4, e4-e5, e3-e6, e0-e1-e2-e7, e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   673    9     3A1 2{A1}+[A2]+[A3]    7   19   66    3     5      8                                                 [e1-e2, e3-e4, e5-e6]                              [e0-e1-e3-e5, e0-e2-e4-e6, e0-e2-e3-e7, e0-e1-e4-e7, e7-e8, 2e0-e1-e2-e5-e6-e7-e8, 2e0-e3-e4-e5-e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   674    9     3A1   2A1+[A2]+{A3}    7   19   66    3     3      6                                                 [e1-e2, e3-e4, e5-e6]                              [e0-e1-e3-e5, e0-e2-e4-e6, e0-e1-e2-e7, e0-e3-e4-e7, e7-e8, 2e0-e2-e3-e5-e6-e7-e8, 2e0-e1-e4-e5-e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   675    9     3A1      2{A1}+[A5]    7   14   37    3     4      5                                                 [e1-e2, e3-e4, e5-e6]                                              [2e0-e1-e2-e3-e4-e5-e6, e2-e3, e1-e4, e0-e1-e2-e7, e0-e5-e6-e7, e0-e1-e5-e8, e0-e2-e6-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   676    9     3A1   2A1+{A1}+[D4]    7   17   49    3     3      5                                                 [e1-e2, e3-e4, e5-e6]                                [2e0-e1-e2-e3-e4-e5-e6, e2-e3, e1-e4, e0-e1-e2-e7, e7-e8, 2e0-e2-e3-e5-e6-e7-e8, 2e0-e1-e4-e5-e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   677    9     3A1       4A1+3{A1}    7   30  128    3     6     10                                                 [e1-e2, e3-e4, e5-e6]              [2e0-e1-e2-e3-e4-e5-e6, e0-e1-e3-e7, e0-e2-e4-e7, e0-e1-e2-e8, e0-e3-e4-e8, 2e0-e2-e3-e5-e6-e7-e8, 2e0-e1-e4-e5-e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   678    9     3A1        {A1}+2A3    7   16   50    1     8     10                                                 [e1-e2, e3-e4, e5-e6]                                              [2e0-e1-e2-e3-e4-e5-e6, e2-e3, e1-e4, e0-e2-e3-e7, e0-e1-e4-e7, e0-e1-e5-e8, e0-e2-e6-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   679    9     3A1        {A1}+2A3    7   16   50    1     6     10                                                 [e1-e2, e3-e4, e5-e6]                                                        [e2-e3, e1-e4, e0-e1-e5-e7, e0-e2-e6-e7, e0-e5-e6-e8, e0-e2-e3-e8, e0-e1-e4-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   680    9     3A1      {A1}+2[A3]    7   16   50    3     4      6                                                 [e1-e2, e3-e4, e5-e6]                                              [2e0-e1-e2-e3-e4-e5-e6, e2-e3, e1-e4, e0-e1-e2-e7, e0-e5-e6-e7, e0-e2-e3-e8, e0-e1-e4-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   681    9     3A1   {A1}+2A2+[A2]    7   20   72    1     8     12                                                 [e1-e2, e3-e4, e5-e6]                                            [e0-e1-e3-e5, e0-e2-e4-e6, e0-e2-e3-e7, e0-e1-e4-e7, e0-e1-e2-e8, e0-e4-e5-e8, e0-e3-e6-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   682    9     3A1   {A1}+2A2+{A2}    7   20   72    3     4      6                                                 [e1-e2, e3-e4, e5-e6]                                  [2e0-e1-e2-e3-e4-e5-e6, e0-e1-e2-e7, e0-e3-e5-e7, e0-e4-e6-e7, e0-e3-e4-e8, e0-e1-e5-e8, e0-e2-e6-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   683    9     3A1       {A1}+[E6]    7    8   12    3     2      2                                                 [e1-e2, e3-e4, e5-e6]                                                                [2e0-e1-e2-e3-e4-e5-e6, e2-e3, e1-e4, e4-e5, e3-e6, e0-e1-e2-e7, e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   684    9     3A1       [A2]+[A5]    7   12   30    1     6      8                                                 [e1-e2, e3-e4, e5-e6]                                                        [e2-e3, e1-e4, e0-e2-e3-e5, e0-e1-e4-e6, e0-e1-e2-e7, e0-e1-e5-e8, e0-e2-e6-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   685    9     3A1       [A2]+[D5]    7   10   23    3     2      3                                                 [e1-e2, e3-e4, e5-e6]                                                              [e2-e3, e1-e4, e0-e2-e3-e5, e0-e1-e4-e6, e0-e1-e2-e7, e0-e5-e6-e7, e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   686    9     3A1            [A7]    7    8   15    1     4      5                                                 [e1-e2, e3-e4, e5-e6]                                                                    [e2-e3, e1-e4, e4-e5, e3-e6, e0-e1-e2-e7, e0-e2-e3-e8, e0-e1-e4-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   687    9     3A1       2{A1}+2A3    8   11   32    2     5      6                                                 [e1-e2, e3-e4, e5-e6]                                 [2e0-e1-e2-e3-e4-e5-e6, e2-e3, e1-e4, e0-e1-e5-e7, e0-e2-e6-e7, e0-e5-e6-e8, e0-e2-e3-e8, e0-e1-e4-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   688    9     3A1   2A2+{A2}+[A2]    8   12   38    2     4      6                                                 [e1-e2, e3-e4, e5-e6]                               [e0-e1-e3-e5, e0-e2-e4-e6, e0-e1-e2-e7, e0-e4-e5-e7, e0-e3-e6-e7, e0-e3-e4-e8, e0-e2-e5-e8, e0-e1-e6-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   689    9     3A1  {A1}+[A2]+[A5]    8    8   19    2     4      5                                                 [e1-e2, e3-e4, e5-e6]                                       [e2-e3, e1-e4, e0-e2-e3-e5, e0-e1-e4-e6, e0-e1-e5-e7, e0-e2-e6-e7, e7-e8, 2e0-e1-e2-e3-e4-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   690    9     3A1       {A1}+[A7]    8    5    9    2     3      3                                                 [e1-e2, e3-e4, e5-e6]                                             [2e0-e1-e2-e3-e4-e5-e6, e2-e3, e1-e4, e4-e5, e3-e6, e0-e1-e2-e7, e0-e2-e3-e8, e0-e1-e4-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   691    9     3A1       [A2]+[E6]    8    4    6    2     2      2                                                 [e1-e2, e3-e4, e5-e6]                                                             [e2-e3, e1-e4, e4-e5, e3-e6, e0-e1-e4-e5, e0-e2-e3-e6, e0-e1-e2-e7, e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   692    9     4A1              A0    0  240 2160    0     8     24                                          [e1-e2, e3-e4, e5-e6, e7-e8]                                                                                                                                     []                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 0, 0, 1, 0)]
   693    9     4A1            {A1}    1  183 1458    1     7     18                                          [e1-e2, e3-e4, e5-e6, e7-e8]                                                                                                                [2e0-e1-e2-e3-e4-e5-e6]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 0, 0, 1, 0)]
   694    9     4A1             2A1    2  138  981    0     6     15                                          [e1-e2, e3-e4, e5-e6, e7-e8]                                                                                                                         [e2-e3, e1-e4]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 0, 0, 1, 0)]
   695    9     4A1           2{A1}    2  138  981    2     6     13                                          [e1-e2, e3-e4, e5-e6, e7-e8]                                                                                         [2e0-e1-e2-e3-e4-e5-e6, 2e0-e1-e2-e3-e4-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 0, 0, 1, 0)]
   696    9     4A1            [A2]    2  127  828    0     7     18                                          [e1-e2, e3-e4, e5-e6, e7-e8]                                                                                                             [e0-e1-e3-e5, e0-e2-e4-e6]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 0, 0, 1, 0)]
   697    9     4A1        2A1+{A1}    3  103  657    1     5     11                                          [e1-e2, e3-e4, e5-e6, e7-e8]                                                                                                  [2e0-e1-e2-e3-e4-e5-e6, e2-e3, e1-e4]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 0, 0, 1, 0)]
   698    9     4A1           3{A1}    3  103  657    3     5      9                                          [e1-e2, e3-e4, e5-e6, e7-e8]                                                                  [2e0-e1-e2-e3-e4-e5-e6, 2e0-e1-e2-e3-e4-e7-e8, 2e0-e1-e2-e5-e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 0, 0, 1, 0)]
   699    9     4A1       {A1}+[A2]    3   94  555    1     6     13                                          [e1-e2, e3-e4, e5-e6, e7-e8]                                                                                      [2e0-e1-e2-e3-e4-e5-e6, e0-e1-e3-e7, e0-e2-e4-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 0, 0, 1, 0)]
   700    9     4A1            [A3]    3   83  423    1     5      9                                          [e1-e2, e3-e4, e5-e6, e7-e8]                                                                                                  [2e0-e1-e2-e3-e4-e5-e6, e6-e7, e5-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 0, 0, 1, 0)]
   701    9     4A1        2A1+[A2]    4   69  369    0     5     11                                          [e1-e2, e3-e4, e5-e6, e7-e8]                                                                                               [e2-e3, e1-e4, e0-e2-e3-e5, e0-e1-e4-e6]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 0, 0, 1, 0)]
   702    9     4A1      2{A1}+[A2]    4   69  369    2     5      9                                          [e1-e2, e3-e4, e5-e6, e7-e8]                                                               [2e0-e1-e2-e3-e4-e5-e6, 2e0-e1-e2-e3-e4-e7-e8, e0-e1-e5-e7, e0-e2-e6-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 0, 0, 1, 0)]
   703    9     4A1           2[A2]    4   62  313    0     6     13                                          [e1-e2, e3-e4, e5-e6, e7-e8]                                                                                   [e0-e1-e3-e5, e0-e2-e4-e6, e0-e2-e3-e7, e0-e1-e4-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 0, 0, 1, 0)]
   704    9     4A1             2A2    4   62  313    0     4      7                                          [e1-e2, e3-e4, e5-e6, e7-e8]                                                                                                           [e2-e3, e1-e4, e4-e5, e3-e6]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 0, 0, 1, 0)]
   705    9     4A1             4A1    4   77  438    0     5     10                                          [e1-e2, e3-e4, e5-e6, e7-e8]                                                                           [e2-e3, e1-e4, 2e0-e2-e3-e5-e6-e7-e8, 2e0-e1-e4-e5-e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 0, 0, 1, 0)]
   706    9     4A1             4A1    4   76  438    0     4     10                                          [e1-e2, e3-e4, e5-e6, e7-e8]                                                                                                           [e2-e3, e1-e4, e6-e7, e5-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 0, 0, 1, 0)]
   707    9     4A1       2A1+2{A1}    4   76  438    2     4      8                                          [e1-e2, e3-e4, e5-e6, e7-e8]                                                                           [2e0-e1-e2-e3-e4-e5-e6, 2e0-e1-e2-e3-e4-e7-e8, e2-e3, e1-e4]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 0, 0, 1, 0)]
   708    9     4A1           4{A1}    4   76  438    4     4      6                                          [e1-e2, e3-e4, e5-e6, e7-e8]                                           [2e0-e1-e2-e3-e4-e5-e6, 2e0-e1-e2-e3-e4-e7-e8, 2e0-e1-e2-e5-e6-e7-e8, 2e0-e3-e4-e5-e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 0, 0, 1, 0)]
   709    9     4A1       {A1}+[A3]    4   60  282    2     4      6                                          [e1-e2, e3-e4, e5-e6, e7-e8]                                                                           [2e0-e1-e2-e3-e4-e5-e6, 2e0-e1-e2-e3-e4-e7-e8, e4-e5, e3-e6]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 0, 0, 1, 0)]
   710    9     4A1            [A4]    4   51  201    0     5      9                                          [e1-e2, e3-e4, e5-e6, e7-e8]                                                                                               [e2-e3, e1-e4, e0-e1-e5-e7, e0-e2-e6-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 0, 0, 1, 0)]
   711    9     4A1        2A1+[A3]    5   43  186    1     3      6                                          [e1-e2, e3-e4, e5-e6, e7-e8]                                                                                    [2e0-e1-e2-e3-e4-e5-e6, e2-e3, e1-e4, e6-e7, e5-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 0, 0, 1, 0)]
   712    9     4A1      2{A1}+[A3]    5   43  186    3     3      4                                          [e1-e2, e3-e4, e5-e6, e7-e8]                                                    [2e0-e1-e2-e3-e4-e5-e6, 2e0-e1-e2-e3-e4-e7-e8, 2e0-e1-e2-e5-e6-e7-e8, e2-e3, e1-e4]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 0, 0, 1, 0)]
   713    9     4A1   2A1+{A1}+[A2]    5   50  244    1     4      8                                          [e1-e2, e3-e4, e5-e6, e7-e8]                                                                        [2e0-e1-e2-e3-e4-e5-e6, e2-e3, e1-e4, e0-e2-e3-e7, e0-e1-e4-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 0, 0, 1, 0)]
   714    9     4A1      3{A1}+[A2]    5   50  244    3     4      6                                          [e1-e2, e3-e4, e5-e6, e7-e8]                                        [2e0-e1-e2-e3-e4-e5-e6, 2e0-e1-e2-e3-e4-e7-e8, 2e0-e1-e2-e5-e6-e7-e8, e0-e3-e5-e7, e0-e4-e6-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 0, 0, 1, 0)]
   715    9     4A1        4A1+{A1}    5   56  291    1     4      7                                          [e1-e2, e3-e4, e5-e6, e7-e8]                                                    [2e0-e1-e2-e3-e4-e5-e6, e2-e3, e1-e4, 2e0-e2-e3-e5-e6-e7-e8, 2e0-e1-e4-e5-e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 0, 0, 1, 0)]
   716    9     4A1      {A1}+2[A2]    5   45  205    1     5      9                                          [e1-e2, e3-e4, e5-e6, e7-e8]                                                            [2e0-e1-e2-e3-e4-e5-e6, e0-e1-e3-e7, e0-e2-e5-e7, e0-e2-e4-e8, e0-e1-e6-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 0, 0, 1, 0)]
   717    9     4A1        {A1}+2A2    5   45  205    1     3      5                                          [e1-e2, e3-e4, e5-e6, e7-e8]                                                                                    [2e0-e1-e2-e3-e4-e5-e6, e2-e3, e1-e4, e4-e5, e3-e6]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 0, 0, 1, 0)]
   718    9     4A1       {A1}+[A4]    5   36  132    1     4      6                                          [e1-e2, e3-e4, e5-e6, e7-e8]                                                                        [2e0-e1-e2-e3-e4-e5-e6, e2-e3, e1-e4, e0-e1-e5-e7, e0-e2-e6-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 0, 0, 1, 0)]
   719    9     4A1       [A2]+[A3]    5   38  158    1     4      6                                          [e1-e2, e3-e4, e5-e6, e7-e8]                                                                        [2e0-e1-e2-e3-e4-e5-e6, e6-e7, e5-e8, e0-e1-e6-e7, e0-e2-e5-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 0, 0, 1, 0)]
   720    9     4A1            [A5]    5   29   91    1     3      3                                          [e1-e2, e3-e4, e5-e6, e7-e8]                                                                                    [2e0-e1-e2-e3-e4-e5-e6, e2-e3, e1-e4, e4-e7, e3-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 0, 0, 1, 0)]
   721    9     4A1     2{A1}+2[A2]    6   32  134    2     4      6                                          [e1-e2, e3-e4, e5-e6, e7-e8]                                     [2e0-e1-e2-e3-e4-e5-e6, 2e0-e1-e2-e3-e4-e7-e8, e0-e1-e5-e7, e0-e3-e6-e7, e0-e4-e5-e8, e0-e2-e6-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 0, 0, 1, 0)]
   722    9     4A1        2A1+[A4]    6   25   86    0     3      6                                          [e1-e2, e3-e4, e5-e6, e7-e8]                                                                                 [e2-e3, e1-e4, e6-e7, e5-e8, e0-e2-e3-e5, e0-e1-e4-e6]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 0, 0, 1, 0)]
   723    9     4A1      2{A1}+[A4]    6   25   86    2     3      4                                          [e1-e2, e3-e4, e5-e6, e7-e8]                                                 [2e0-e1-e2-e3-e4-e5-e6, 2e0-e1-e2-e3-e4-e7-e8, e2-e3, e1-e4, e0-e1-e5-e7, e0-e2-e6-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 0, 0, 1, 0)]
   724    9     4A1             2A3    6   23   79    0     3      3                                          [e1-e2, e3-e4, e5-e6, e7-e8]                                                             [e2-e3, e1-e4, e3-e5, e4-e6, 2e0-e1-e2-e3-e5-e7-e8, 2e0-e1-e2-e4-e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 0, 0, 1, 0)]
   725    9     4A1             2A3    6   22   79    0     2      3                                          [e1-e2, e3-e4, e5-e6, e7-e8]                                                                                             [e2-e3, e1-e4, e4-e5, e3-e6, e6-e7, e5-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 0, 0, 1, 0)]
   726    9     4A1           2[A3]    6   22   79    2     2      3                                          [e1-e2, e3-e4, e5-e6, e7-e8]                                                             [2e0-e1-e2-e3-e4-e5-e6, 2e0-e1-e2-e3-e4-e7-e8, e4-e5, e3-e6, e2-e7, e1-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 0, 0, 1, 0)]
   727    9     4A1           3[A2]    6   29  111    0     5      9                                          [e1-e2, e3-e4, e5-e6, e7-e8]                                                         [e0-e1-e3-e5, e0-e2-e4-e6, e0-e2-e3-e7, e0-e4-e5-e7, e0-e1-e4-e8, e0-e3-e6-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 0, 0, 1, 0)]
   728    9     4A1        [A2]+2A2    6   29  111    0     3      5                                          [e1-e2, e3-e4, e5-e6, e7-e8]                                                                                 [e2-e3, e1-e4, e4-e5, e3-e6, e0-e1-e4-e5, e0-e2-e3-e6]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 0, 0, 1, 0)]
   729    9     4A1             6A1    6   41  193    0     3      7                                          [e1-e2, e3-e4, e5-e6, e7-e8]                                                             [e2-e3, e1-e4, e6-e7, e5-e8, 2e0-e1-e2-e3-e4-e6-e7, 2e0-e1-e2-e3-e4-e5-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 0, 0, 1, 0)]
   730    9     4A1       4A1+2{A1}    6   41  193    2     3      5                                          [e1-e2, e3-e4, e5-e6, e7-e8]                             [2e0-e1-e2-e3-e4-e5-e6, 2e0-e1-e2-e3-e4-e7-e8, e2-e3, e1-e4, 2e0-e2-e3-e5-e6-e7-e8, 2e0-e1-e4-e5-e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 0, 0, 1, 0)]
   731    9     4A1  {A1}+[A2]+[A3]    6   27  102    2     3      4                                          [e1-e2, e3-e4, e5-e6, e7-e8]                                                 [2e0-e1-e2-e3-e4-e5-e6, 2e0-e1-e2-e3-e4-e7-e8, e4-e5, e3-e6, e0-e4-e5-e7, e0-e3-e6-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 0, 0, 1, 0)]
   732    9     4A1       {A1}+[A5]    6   20   58    2     2      2                                          [e1-e2, e3-e4, e5-e6, e7-e8]                                                             [2e0-e1-e2-e3-e4-e5-e6, 2e0-e1-e2-e3-e4-e7-e8, e2-e3, e1-e4, e4-e5, e3-e6]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 0, 0, 1, 0)]
   733    9     4A1       [A2]+[A4]    6   22   72    0     4      6                                          [e1-e2, e3-e4, e5-e6, e7-e8]                                                                     [e2-e3, e1-e4, e0-e2-e3-e5, e0-e1-e4-e6, e0-e1-e5-e7, e0-e2-e6-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 0, 0, 1, 0)]
   734    9     4A1            [A6]    6   15   39    0     3      3                                          [e1-e2, e3-e4, e5-e6, e7-e8]                                                                                 [e2-e3, e1-e4, e4-e5, e3-e6, e0-e2-e3-e7, e0-e1-e4-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 0, 0, 1, 0)]
   735    9     4A1        4A1+[A3]    7   22   80    1     2      4                                          [e1-e2, e3-e4, e5-e6, e7-e8]                                      [2e0-e1-e2-e3-e4-e5-e6, e2-e3, e1-e4, e6-e7, e5-e8, 2e0-e2-e3-e5-e6-e7-e8, 2e0-e1-e4-e5-e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 0, 0, 1, 0)]
   736    9     4A1        {A1}+2A3    7   16   50    1     2      2                                          [e1-e2, e3-e4, e5-e6, e7-e8]                                      [2e0-e1-e2-e3-e4-e5-e6, e2-e3, e1-e4, e3-e5, e4-e6, 2e0-e1-e2-e3-e5-e7-e8, 2e0-e1-e2-e4-e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 0, 0, 1, 0)]
   737    9     4A1      {A1}+3[A2]    7   20   72    1     4      6                                          [e1-e2, e3-e4, e5-e6, e7-e8]                                  [2e0-e1-e2-e3-e4-e5-e6, e0-e1-e3-e7, e0-e2-e5-e7, e0-e4-e6-e7, e0-e2-e4-e8, e0-e3-e5-e8, e0-e1-e6-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 0, 0, 1, 0)]
   738    9     4A1  {A1}+[A2]+[A4]    7   15   46    1     3      4                                          [e1-e2, e3-e4, e5-e6, e7-e8]                                              [2e0-e1-e2-e3-e4-e5-e6, e2-e3, e1-e4, e0-e2-e3-e7, e0-e1-e5-e7, e0-e1-e4-e8, e0-e2-e6-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 0, 0, 1, 0)]
   739    9     4A1       {A1}+[A6]    7   10   24    1     2      2                                          [e1-e2, e3-e4, e5-e6, e7-e8]                                                          [2e0-e1-e2-e3-e4-e5-e6, e2-e3, e1-e4, e4-e5, e3-e6, e0-e2-e3-e7, e0-e1-e4-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 0, 0, 1, 0)]
   740    9     4A1       [A2]+[A5]    7   12   30    1     2      2                                          [e1-e2, e3-e4, e5-e6, e7-e8]                                                          [2e0-e1-e2-e3-e4-e5-e6, e2-e3, e1-e4, e4-e7, e3-e8, e0-e1-e4-e7, e0-e2-e3-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 0, 0, 1, 0)]
   741    9     4A1       [A3]+[A4]    7   12   35    1     2      3                                          [e1-e2, e3-e4, e5-e6, e7-e8]                                                          [2e0-e1-e2-e3-e4-e5-e6, e2-e3, e1-e4, e6-e7, e5-e8, e0-e1-e6-e7, e0-e2-e5-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 0, 0, 1, 0)]
   742    9     4A1            [A7]    7    7   15    1     1      1                                          [e1-e2, e3-e4, e5-e6, e7-e8]                                                                      [2e0-e1-e2-e3-e4-e5-e6, e2-e3, e1-e4, e4-e5, e3-e6, e6-e7, e5-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 0, 0, 1, 0)]
   743    9     4A1           2[A4]    8    6   15    0     2      3                                          [e1-e2, e3-e4, e5-e6, e7-e8]                                                       [e2-e3, e1-e4, e6-e7, e5-e8, e0-e2-e3-e5, e0-e1-e4-e6, e0-e2-e6-e7, e0-e1-e5-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 0, 0, 1, 0)]
   744    9     4A1             2D4    8    5   13    0     1      1                                          [e1-e2, e3-e4, e5-e6, e7-e8]                                               [e2-e3, e1-e4, e4-e5, e3-e6, e5-e7, e6-e8, 2e0-e1-e2-e3-e4-e5-e7, 2e0-e1-e2-e3-e4-e6-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 0, 0, 1, 0)]
   745    9     4A1           4[A2]    8   12   38    0     4      6                                          [e1-e2, e3-e4, e5-e6, e7-e8]                               [e0-e1-e3-e5, e0-e2-e4-e6, e0-e2-e3-e7, e0-e4-e5-e7, e0-e1-e6-e7, e0-e1-e4-e8, e0-e2-e5-e8, e0-e3-e6-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 0, 0, 1, 0)]
   746    9     4A1             8A1    8   22   85    0     2      5                                          [e1-e2, e3-e4, e5-e6, e7-e8]               [e2-e3, e1-e4, e6-e7, e5-e8, 2e0-e1-e2-e3-e4-e6-e7, 2e0-e1-e2-e3-e4-e5-e8, 2e0-e2-e3-e5-e6-e7-e8, 2e0-e1-e4-e5-e6-e7-e8]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 0, 0, 1, 0)]
   747    9     4A1            [A8]    8    3    5    0     1      1                                          [e1-e2, e3-e4, e5-e6, e7-e8]                                                                   [e2-e3, e1-e4, e3-e5, e4-e6, e6-e7, e5-e8, e0-e2-e3-e5, e0-e1-e4-e6]                                                                               [(1, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 1, 0, 0, 0, 0, 0, 0), (0, 1, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 1, 0, 0, 0, 0), (0, 0, 0, 1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 0, 0, 1, 0)]
   748    9      D4              A0    0  240 2160    0    24     24                                    [e2-e3, e3-e4, e4-e5, e0-e1-e2-e3]                                                                                                                                     []                                                             [(3, 2, 1, 1, 1, 1, 0, 0, 0), (-2, -1, -1, -1, -1, -1, 0, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0, 0), (-1, -1, 0, 0, -1, 0, 0, 0, 0), (-1, -1, 0, 0, 0, -1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   749    9      D4            {A1}    1  183 1458    1    15     18                                    [e2-e3, e3-e4, e4-e5, e0-e1-e2-e3]                                                                                                                                [e7-e8]                                                             [(3, 2, 1, 1, 1, 1, 0, 0, 0), (-2, -1, -1, -1, -1, -1, 0, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0, 0), (-1, -1, 0, 0, -1, 0, 0, 0, 0), (-1, -1, 0, 0, 0, -1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   750    9      D4             2A1    2  138  981    0    18     15                                    [e2-e3, e3-e4, e4-e5, e0-e1-e2-e3]                                                                                                                   [e5-e8, e0-e1-e5-e8]                                                             [(3, 2, 1, 1, 1, 1, 0, 0, 0), (-2, -1, -1, -1, -1, -1, 0, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0, 0), (-1, -1, 0, 0, -1, 0, 0, 0, 0), (-1, -1, 0, 0, 0, -1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   751    9      D4           2{A1}    2  138  981    2    10     13                                    [e2-e3, e3-e4, e4-e5, e0-e1-e2-e3]                                                                                                                   [e7-e8, e0-e1-e7-e8]                                                             [(3, 2, 1, 1, 1, 1, 0, 0, 0), (-2, -1, -1, -1, -1, -1, 0, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0, 0), (-1, -1, 0, 0, -1, 0, 0, 0, 0), (-1, -1, 0, 0, 0, -1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   752    9      D4            {A2}    2  127  828    2     7     12                                    [e2-e3, e3-e4, e4-e5, e0-e1-e2-e3]                                                                                                  [e7-e8, 3e0-e1-e2-e3-e4-e5-e6-2e7-e8]                                                             [(3, 2, 1, 1, 1, 1, 0, 0, 0), (-2, -1, -1, -1, -1, -1, 0, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0, 0), (-1, -1, 0, 0, -1, 0, 0, 0, 0), (-1, -1, 0, 0, 0, -1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   753    9      D4        2A1+{A1}    3  103  657    1    11     11                                    [e2-e3, e3-e4, e4-e5, e0-e1-e2-e3]                                                                                            [e7-e8, e0-e2-e7-e8, 2e0-e1-e3-e4-e5-e7-e8]                                                             [(3, 2, 1, 1, 1, 1, 0, 0, 0), (-2, -1, -1, -1, -1, -1, 0, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0, 0), (-1, -1, 0, 0, -1, 0, 0, 0, 0), (-1, -1, 0, 0, 0, -1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   754    9      D4           3{A1}    3  103  657    3     7      9                                    [e2-e3, e3-e4, e4-e5, e0-e1-e2-e3]                                                                                            [e7-e8, e0-e1-e7-e8, 2e0-e2-e3-e4-e5-e7-e8]                                                             [(3, 2, 1, 1, 1, 1, 0, 0, 0), (-2, -1, -1, -1, -1, -1, 0, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0, 0), (-1, -1, 0, 0, -1, 0, 0, 0, 0), (-1, -1, 0, 0, 0, -1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   755    9      D4            [A3]    3   83  423    1     9      9                                    [e2-e3, e3-e4, e4-e5, e0-e1-e2-e3]                                                                                            [e6-e7, e0-e2-e6-e8, 2e0-e1-e3-e4-e5-e6-e8]                                                             [(3, 2, 1, 1, 1, 1, 0, 0, 0), (-2, -1, -1, -1, -1, -1, 0, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0, 0), (-1, -1, 0, 0, -1, 0, 0, 0, 0), (-1, -1, 0, 0, 0, -1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   756    9      D4            {A3}    3   83  423    3     3      7                                    [e2-e3, e3-e4, e4-e5, e0-e1-e2-e3]                                                                                           [e6-e7, e7-e8, 3e0-e1-e2-e3-e4-e5-2e6-e7-e8]                                                             [(3, 2, 1, 1, 1, 1, 0, 0, 0), (-2, -1, -1, -1, -1, -1, 0, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0, 0), (-1, -1, 0, 0, -1, 0, 0, 0, 0), (-1, -1, 0, 0, 0, -1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   757    9      D4        2A1+{A2}    4   69  369    2     5      7                                    [e2-e3, e3-e4, e4-e5, e0-e1-e2-e3]                                                                              [e6-e7, e7-e8, e0-e6-e7-e8, 3e0-2e1-e2-e3-e4-e5-e6-e7-e8]                                                             [(3, 2, 1, 1, 1, 1, 0, 0, 0), (-2, -1, -1, -1, -1, -1, 0, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0, 0), (-1, -1, 0, 0, -1, 0, 0, 0, 0), (-1, -1, 0, 0, 0, -1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   758    9      D4             2A2    4   62  313    0    12      7                                    [e2-e3, e3-e4, e4-e5, e0-e1-e2-e3]                                                                                     [e5-e7, e0-e1-e5-e7, e1-e8, 2e0-e1-e2-e3-e4-e5-e8]                                                             [(3, 2, 1, 1, 1, 1, 0, 0, 0), (-2, -1, -1, -1, -1, -1, 0, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0, 0), (-1, -1, 0, 0, -1, 0, 0, 0, 0), (-1, -1, 0, 0, 0, -1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   759    9      D4             4A1    4   77  438    0    13     10                                    [e2-e3, e3-e4, e4-e5, e0-e1-e2-e3]                                                              [e5-e8, e0-e1-e5-e8, 2e0-e2-e3-e5-e6-e7-e8, 3e0-e1-e2-e3-2e4-e5-e6-e7-e8]                                                             [(3, 2, 1, 1, 1, 1, 0, 0, 0), (-2, -1, -1, -1, -1, -1, 0, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0, 0), (-1, -1, 0, 0, -1, 0, 0, 0, 0), (-1, -1, 0, 0, 0, -1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   760    9      D4       2A1+2{A1}    4   77  438    2     7      8                                    [e2-e3, e3-e4, e4-e5, e0-e1-e2-e3]                                                              [e7-e8, e0-e1-e7-e8, 2e0-e2-e3-e4-e6-e7-e8, 3e0-e1-e2-e3-e4-2e5-e6-e7-e8]                                                             [(3, 2, 1, 1, 1, 1, 0, 0, 0), (-2, -1, -1, -1, -1, -1, 0, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0, 0), (-1, -1, 0, 0, -1, 0, 0, 0, 0), (-1, -1, 0, 0, 0, -1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   761    9      D4           4{A1}    4   77  438    4     5      6                                    [e2-e3, e3-e4, e4-e5, e0-e1-e2-e3]                                                              [e7-e8, e0-e1-e7-e8, 2e0-e2-e3-e4-e5-e7-e8, 3e0-e1-e2-e3-e4-e5-2e6-e7-e8]                                                             [(3, 2, 1, 1, 1, 1, 0, 0, 0), (-2, -1, -1, -1, -1, -1, 0, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0, 0), (-1, -1, 0, 0, -1, 0, 0, 0, 0), (-1, -1, 0, 0, 0, -1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   762    9      D4       {A1}+[A3]    4   60  282    2     6      6                                    [e2-e3, e3-e4, e4-e5, e0-e1-e2-e3]                                                                                     [e5-e7, e0-e1-e5-e7, e7-e8, 2e0-e2-e3-e4-e5-e7-e8]                                                             [(3, 2, 1, 1, 1, 1, 0, 0, 0), (-2, -1, -1, -1, -1, -1, 0, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0, 0), (-1, -1, 0, 0, -1, 0, 0, 0, 0), (-1, -1, 0, 0, 0, -1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   763    9      D4            [D4]    4   49  171    2     3      5                                    [e2-e3, e3-e4, e4-e5, e0-e1-e2-e3]                                                                                     [e6-e7, e0-e2-e6-e7, 2e0-e1-e3-e4-e5-e6-e7, e7-e8]                                                             [(3, 2, 1, 1, 1, 1, 0, 0, 0), (-2, -1, -1, -1, -1, -1, 0, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0, 0), (-1, -1, 0, 0, -1, 0, 0, 0, 0), (-1, -1, 0, 0, 0, -1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   764    9      D4            {D4}    4   49  171    4     1      3                                    [e2-e3, e3-e4, e4-e5, e0-e1-e2-e3]                                                                                     [e6-e7, e0-e1-e6-e7, 2e0-e2-e3-e4-e5-e6-e7, e7-e8]                                                             [(3, 2, 1, 1, 1, 1, 0, 0, 0), (-2, -1, -1, -1, -1, -1, 0, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0, 0), (-1, -1, 0, 0, -1, 0, 0, 0, 0), (-1, -1, 0, 0, 0, -1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   765    9      D4        2A1+[A3]    5   44  186    1     6      6                                    [e2-e3, e3-e4, e4-e5, e0-e1-e2-e3]                                                       [e5-e7, e0-e1-e5-e7, e7-e8, 2e0-e2-e3-e5-e6-e7-e8, 3e0-e1-e2-e3-2e4-e5-e6-e7-e8]                                                             [(3, 2, 1, 1, 1, 1, 0, 0, 0), (-2, -1, -1, -1, -1, -1, 0, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0, 0), (-1, -1, 0, 0, -1, 0, 0, 0, 0), (-1, -1, 0, 0, 0, -1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   766    9      D4      2{A1}+[A3]    5   44  186    3     4      4                                    [e2-e3, e3-e4, e4-e5, e0-e1-e2-e3]                                                       [e5-e7, e0-e1-e5-e7, e7-e8, 2e0-e2-e3-e4-e5-e7-e8, 3e0-e1-e2-e3-e4-e5-2e6-e7-e8]                                                             [(3, 2, 1, 1, 1, 1, 0, 0, 0), (-2, -1, -1, -1, -1, -1, 0, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0, 0), (-1, -1, 0, 0, -1, 0, 0, 0, 0), (-1, -1, 0, 0, 0, -1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   767    9      D4        2A1+{A3}    5   44  186    3     2      4                                    [e2-e3, e3-e4, e4-e5, e0-e1-e2-e3]                                                       [e6-e7, e0-e1-e6-e7, e7-e8, 2e0-e2-e3-e4-e6-e7-e8, 3e0-e1-e2-e3-e4-2e5-e6-e7-e8]                                                             [(3, 2, 1, 1, 1, 1, 0, 0, 0), (-2, -1, -1, -1, -1, -1, 0, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0, 0), (-1, -1, 0, 0, -1, 0, 0, 0, 0), (-1, -1, 0, 0, 0, -1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   768    9      D4        4A1+{A1}    5   56  291    1     8      7                                    [e2-e3, e3-e4, e4-e5, e0-e1-e2-e3]                                                       [e6-e7, e5-e8, e0-e1-e5-e8, 2e0-e2-e3-e5-e6-e7-e8, 3e0-e1-e2-e3-2e4-e5-e6-e7-e8]                                                             [(3, 2, 1, 1, 1, 1, 0, 0, 0), (-2, -1, -1, -1, -1, -1, 0, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0, 0), (-1, -1, 0, 0, -1, 0, 0, 0, 0), (-1, -1, 0, 0, 0, -1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   769    9      D4        {A1}+2A2    5   45  205    1     7      5                                    [e2-e3, e3-e4, e4-e5, e0-e1-e2-e3]                                                                        [e5-e7, e0-e1-e5-e7, e6-e8, e0-e2-e6-e8, 2e0-e1-e3-e4-e5-e6-e8]                                                             [(3, 2, 1, 1, 1, 1, 0, 0, 0), (-2, -1, -1, -1, -1, -1, 0, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0, 0), (-1, -1, 0, 0, -1, 0, 0, 0, 0), (-1, -1, 0, 0, 0, -1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   770    9      D4            [A5]    5   29   91    1     5      3                                    [e2-e3, e3-e4, e4-e5, e0-e1-e2-e3]                                                                              [e5-e6, e0-e1-e5-e6, e6-e7, e1-e8, 2e0-e1-e2-e3-e4-e5-e8]                                                             [(3, 2, 1, 1, 1, 1, 0, 0, 0), (-2, -1, -1, -1, -1, -1, 0, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0, 0), (-1, -1, 0, 0, -1, 0, 0, 0, 0), (-1, -1, 0, 0, 0, -1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   771    9      D4            [D5]    5   27   66    3     1      2                                    [e2-e3, e3-e4, e4-e5, e0-e1-e2-e3]                                                                              [e5-e6, e0-e1-e5-e6, e6-e7, 2e0-e2-e3-e4-e5-e6-e7, e7-e8]                                                             [(3, 2, 1, 1, 1, 1, 0, 0, 0), (-2, -1, -1, -1, -1, -1, 0, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0, 0), (-1, -1, 0, 0, -1, 0, 0, 0, 0), (-1, -1, 0, 0, 0, -1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   772    9      D4        2A1+[D4]    6   24   75    2     2      3                                    [e2-e3, e3-e4, e4-e5, e0-e1-e2-e3]                                                [e5-e6, e0-e1-e5-e6, e6-e7, e7-e8, 2e0-e2-e3-e5-e6-e7-e8, 3e0-e1-e2-e3-2e4-e5-e6-e7-e8]                                                             [(3, 2, 1, 1, 1, 1, 0, 0, 0), (-2, -1, -1, -1, -1, -1, 0, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0, 0), (-1, -1, 0, 0, -1, 0, 0, 0, 0), (-1, -1, 0, 0, 0, -1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   773    9      D4             2A3    6   23   79    0     7      3                                    [e2-e3, e3-e4, e4-e5, e0-e1-e2-e3]                                                                 [e5-e6, e0-e1-e5-e6, e1-e7, 2e0-e1-e2-e3-e4-e5-e7, e4-e8, e0-e1-e4-e8]                                                             [(3, 2, 1, 1, 1, 1, 0, 0, 0), (-2, -1, -1, -1, -1, -1, 0, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0, 0), (-1, -1, 0, 0, -1, 0, 0, 0, 0), (-1, -1, 0, 0, 0, -1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   774    9      D4           2[A3]    6   23   79    2     3      3                                    [e2-e3, e3-e4, e4-e5, e0-e1-e2-e3]                                                                 [e5-e6, e0-e1-e5-e6, e4-e7, e0-e1-e4-e7, e7-e8, 2e0-e2-e3-e4-e5-e7-e8]                                                             [(3, 2, 1, 1, 1, 1, 0, 0, 0), (-2, -1, -1, -1, -1, -1, 0, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0, 0), (-1, -1, 0, 0, -1, 0, 0, 0, 0), (-1, -1, 0, 0, 0, -1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   775    9      D4        2A2+{A2}    6   29  111    2     3      3                                    [e2-e3, e3-e4, e4-e5, e0-e1-e2-e3]                                                 [e6-e7, e0-e2-e6-e7, 2e0-e1-e3-e4-e5-e6-e7, e0-e1-e6-e8, e1-e8, 2e0-e1-e2-e3-e4-e5-e8]                                                             [(3, 2, 1, 1, 1, 1, 0, 0, 0), (-2, -1, -1, -1, -1, -1, 0, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0, 0), (-1, -1, 0, 0, -1, 0, 0, 0, 0), (-1, -1, 0, 0, 0, -1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   776    9      D4             6A1    6   41  193    0     9      7                                    [e2-e3, e3-e4, e4-e5, e0-e1-e2-e3]                                          [e5-e7, e0-e1-e5-e7, e4-e8, e0-e1-e4-e8, 2e0-e2-e4-e5-e6-e7-e8, 3e0-e1-e2-2e3-e4-e5-e6-e7-e8]                                                             [(3, 2, 1, 1, 1, 1, 0, 0, 0), (-2, -1, -1, -1, -1, -1, 0, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0, 0), (-1, -1, 0, 0, -1, 0, 0, 0, 0), (-1, -1, 0, 0, 0, -1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   777    9      D4       4A1+2{A1}    6   41  193    2     5      5                                    [e2-e3, e3-e4, e4-e5, e0-e1-e2-e3]                                          [e5-e7, e0-e1-e5-e7, e6-e8, e0-e1-e6-e8, 2e0-e2-e3-e5-e6-e7-e8, 3e0-e1-e2-e3-2e4-e5-e6-e7-e8]                                                             [(3, 2, 1, 1, 1, 1, 0, 0, 0), (-2, -1, -1, -1, -1, -1, 0, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0, 0), (-1, -1, 0, 0, -1, 0, 0, 0, 0), (-1, -1, 0, 0, 0, -1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   778    9      D4       {A1}+[A5]    6   21   58    2     3      2                                    [e2-e3, e3-e4, e4-e5, e0-e1-e2-e3]                                                                 [e5-e6, e0-e1-e5-e6, e1-e7, 2e0-e1-e2-e3-e4-e5-e7, e7-e8, e0-e1-e7-e8]                                                             [(3, 2, 1, 1, 1, 1, 0, 0, 0), (-2, -1, -1, -1, -1, -1, 0, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0, 0), (-1, -1, 0, 0, -1, 0, 0, 0, 0), (-1, -1, 0, 0, 0, -1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   779    9      D4            [E6]    6   13   19    2     1      1                                    [e2-e3, e3-e4, e4-e5, e0-e1-e2-e3]                                                                                 [e1-e2, e0-e3-e4-e5, e5-e6, e0-e1-e5-e6, e6-e7, e7-e8]                                                             [(3, 2, 1, 1, 1, 1, 0, 0, 0), (-2, -1, -1, -1, -1, -1, 0, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0, 0), (-1, -1, 0, 0, -1, 0, 0, 0, 0), (-1, -1, 0, 0, 0, -1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   780    9      D4        4A1+[A3]    7   22   80    1     4      4                                    [e2-e3, e3-e4, e4-e5, e0-e1-e2-e3]                                   [e5-e6, e0-e1-e5-e6, e6-e7, e4-e8, e0-e1-e4-e8, 2e0-e2-e4-e5-e6-e7-e8, 3e0-e1-e2-2e3-e4-e5-e6-e7-e8]                                                             [(3, 2, 1, 1, 1, 1, 0, 0, 0), (-2, -1, -1, -1, -1, -1, 0, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0, 0), (-1, -1, 0, 0, -1, 0, 0, 0, 0), (-1, -1, 0, 0, 0, -1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   781    9      D4        {A1}+2A3    7   16   50    1     4      2                                    [e2-e3, e3-e4, e4-e5, e0-e1-e2-e3]                                              [e5-e6, e0-e1-e5-e6, e1-e7, 2e0-e1-e2-e3-e4-e5-e7, e0-e1-e7-e8, e0-e2-e3-e8, e0-e4-e5-e8]                                                             [(3, 2, 1, 1, 1, 1, 0, 0, 0), (-2, -1, -1, -1, -1, -1, 0, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0, 0), (-1, -1, 0, 0, -1, 0, 0, 0, 0), (-1, -1, 0, 0, 0, -1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   782    9      D4            [A7]    7    8   15    1     2      1                                    [e2-e3, e3-e4, e4-e5, e0-e1-e2-e3]                                                                    [e1-e2, e0-e3-e4-e5, e5-e6, e0-e1-e5-e6, e6-e7, e4-e8, e0-e1-e4-e8]                                                             [(3, 2, 1, 1, 1, 1, 0, 0, 0), (-2, -1, -1, -1, -1, -1, 0, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0, 0), (-1, -1, 0, 0, -1, 0, 0, 0, 0), (-1, -1, 0, 0, 0, -1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   783    9      D4             2D4    8    5   13    0     3      1                                    [e2-e3, e3-e4, e4-e5, e0-e1-e2-e3]                                                       [e1-e2, e0-e3-e4-e5, e5-e6, e0-e1-e5-e6, e4-e7, e0-e1-e4-e7, e3-e8, e0-e1-e3-e8]                                                             [(3, 2, 1, 1, 1, 1, 0, 0, 0), (-2, -1, -1, -1, -1, -1, 0, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0, 0), (-1, -1, 0, 0, -1, 0, 0, 0, 0), (-1, -1, 0, 0, 0, -1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   784    9      D4             8A1    8   22   85    0     6      5                                    [e2-e3, e3-e4, e4-e5, e0-e1-e2-e3]                      [e5-e6, e0-e1-e5-e6, e4-e7, e0-e1-e4-e7, e3-e8, e0-e1-e3-e8, 2e0-e3-e4-e5-e6-e7-e8, 3e0-e1-2e2-e3-e4-e5-e6-e7-e8]                                                             [(3, 2, 1, 1, 1, 1, 0, 0, 0), (-2, -1, -1, -1, -1, -1, 0, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0, 0), (-1, -1, 0, 0, -1, 0, 0, 0, 0), (-1, -1, 0, 0, 0, -1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   785    9   A1+D4              A0    0  240 2160    0     6     12                             [e2-e3, e3-e4, e4-e5, e6-e7, e0-e1-e2-e3]                                                                                                                                     []                                                             [(3, 2, 1, 1, 1, 1, 0, 0, 0), (-2, -1, -1, -1, -1, -1, 0, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0, 0), (-1, -1, 0, 0, -1, 0, 0, 0, 0), (-1, -1, 0, 0, 0, -1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   786    9   A1+D4            {A1}    1  183 1458    1     5      8                             [e2-e3, e3-e4, e4-e5, e6-e7, e0-e1-e2-e3]                                                                                                         [3e0-e1-e2-e3-e4-e5-e6-e7-2e8]                                                             [(3, 2, 1, 1, 1, 1, 0, 0, 0), (-2, -1, -1, -1, -1, -1, 0, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0, 0), (-1, -1, 0, 0, -1, 0, 0, 0, 0), (-1, -1, 0, 0, 0, -1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   787    9   A1+D4             2A1    2  138  981    0     4      7                             [e2-e3, e3-e4, e4-e5, e6-e7, e0-e1-e2-e3]                                                                                                                   [e5-e8, e0-e1-e5-e8]                                                             [(3, 2, 1, 1, 1, 1, 0, 0, 0), (-2, -1, -1, -1, -1, -1, 0, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0, 0), (-1, -1, 0, 0, -1, 0, 0, 0, 0), (-1, -1, 0, 0, 0, -1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   788    9   A1+D4           2{A1}    2  138  981    2     4      5                             [e2-e3, e3-e4, e4-e5, e6-e7, e0-e1-e2-e3]                                                                                            [e0-e1-e6-e7, 3e0-e1-e2-e3-e4-e5-e6-e7-2e8]                                                             [(3, 2, 1, 1, 1, 1, 0, 0, 0), (-2, -1, -1, -1, -1, -1, 0, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0, 0), (-1, -1, 0, 0, -1, 0, 0, 0, 0), (-1, -1, 0, 0, 0, -1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   789    9   A1+D4            [A2]    2  127  828    0     5      8                             [e2-e3, e3-e4, e4-e5, e6-e7, e0-e1-e2-e3]                                                                                                   [e0-e2-e6-e8, 2e0-e1-e3-e4-e5-e7-e8]                                                             [(3, 2, 1, 1, 1, 1, 0, 0, 0), (-2, -1, -1, -1, -1, -1, 0, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0, 0), (-1, -1, 0, 0, -1, 0, 0, 0, 0), (-1, -1, 0, 0, 0, -1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   790    9   A1+D4        2A1+{A1}    3  103  657    1     3      5                             [e2-e3, e3-e4, e4-e5, e6-e7, e0-e1-e2-e3]                                                                                                      [e0-e1-e6-e7, e5-e8, e0-e1-e5-e8]                                                             [(3, 2, 1, 1, 1, 1, 0, 0, 0), (-2, -1, -1, -1, -1, -1, 0, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0, 0), (-1, -1, 0, 0, -1, 0, 0, 0, 0), (-1, -1, 0, 0, 0, -1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   791    9   A1+D4           3{A1}    3  103  657    3     3      3                             [e2-e3, e3-e4, e4-e5, e6-e7, e0-e1-e2-e3]                                                                     [e0-e1-e6-e7, 2e0-e2-e3-e4-e5-e6-e7, 3e0-e1-e2-e3-e4-e5-e6-e7-2e8]                                                             [(3, 2, 1, 1, 1, 1, 0, 0, 0), (-2, -1, -1, -1, -1, -1, 0, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0, 0), (-1, -1, 0, 0, -1, 0, 0, 0, 0), (-1, -1, 0, 0, 0, -1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   792    9   A1+D4       {A1}+[A2]    3   94  555    1     4      5                             [e2-e3, e3-e4, e4-e5, e6-e7, e0-e1-e2-e3]                                                                                      [e0-e1-e6-e7, e0-e2-e6-e8, 2e0-e1-e3-e4-e5-e7-e8]                                                             [(3, 2, 1, 1, 1, 1, 0, 0, 0), (-2, -1, -1, -1, -1, -1, 0, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0, 0), (-1, -1, 0, 0, -1, 0, 0, 0, 0), (-1, -1, 0, 0, 0, -1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   793    9   A1+D4            [A3]    3   83  423    1     3      3                             [e2-e3, e3-e4, e4-e5, e6-e7, e0-e1-e2-e3]                                                                                            [e0-e1-e6-e7, e1-e8, 2e0-e1-e2-e3-e4-e5-e8]                                                             [(3, 2, 1, 1, 1, 1, 0, 0, 0), (-2, -1, -1, -1, -1, -1, 0, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0, 0), (-1, -1, 0, 0, -1, 0, 0, 0, 0), (-1, -1, 0, 0, 0, -1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   794    9   A1+D4        2A1+[A2]    4   69  369    0     3      5                             [e2-e3, e3-e4, e4-e5, e6-e7, e0-e1-e2-e3]                                                                               [e1-e2, e0-e3-e4-e5, e0-e3-e6-e8, 2e0-e1-e2-e4-e5-e7-e8]                                                             [(3, 2, 1, 1, 1, 1, 0, 0, 0), (-2, -1, -1, -1, -1, -1, 0, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0, 0), (-1, -1, 0, 0, -1, 0, 0, 0, 0), (-1, -1, 0, 0, 0, -1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   795    9   A1+D4      2{A1}+[A2]    4   69  369    2     3      3                             [e2-e3, e3-e4, e4-e5, e6-e7, e0-e1-e2-e3]                                                               [e0-e1-e6-e7, 2e0-e2-e3-e4-e5-e6-e7, e0-e2-e6-e8, 2e0-e1-e3-e4-e5-e7-e8]                                                             [(3, 2, 1, 1, 1, 1, 0, 0, 0), (-2, -1, -1, -1, -1, -1, 0, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0, 0), (-1, -1, 0, 0, -1, 0, 0, 0, 0), (-1, -1, 0, 0, 0, -1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   796    9   A1+D4           2[A2]    4   62  313    0     4      5                             [e2-e3, e3-e4, e4-e5, e6-e7, e0-e1-e2-e3]                                                                               [e5-e6, e0-e1-e5-e7, e0-e5-e6-e8, 2e0-e1-e2-e3-e4-e7-e8]                                                             [(3, 2, 1, 1, 1, 1, 0, 0, 0), (-2, -1, -1, -1, -1, -1, 0, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0, 0), (-1, -1, 0, 0, -1, 0, 0, 0, 0), (-1, -1, 0, 0, 0, -1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   797    9   A1+D4             2A2    4   62  313    0     2      3                             [e2-e3, e3-e4, e4-e5, e6-e7, e0-e1-e2-e3]                                                                                               [e1-e2, e0-e3-e4-e5, e5-e8, e0-e1-e5-e8]                                                             [(3, 2, 1, 1, 1, 1, 0, 0, 0), (-2, -1, -1, -1, -1, -1, 0, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0, 0), (-1, -1, 0, 0, -1, 0, 0, 0, 0), (-1, -1, 0, 0, 0, -1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   798    9   A1+D4             4A1    4   77  438    0     3      4                             [e2-e3, e3-e4, e4-e5, e6-e7, e0-e1-e2-e3]                                                              [e5-e8, e0-e1-e5-e8, 2e0-e2-e3-e5-e6-e7-e8, 3e0-e1-e2-e3-2e4-e5-e6-e7-e8]                                                             [(3, 2, 1, 1, 1, 1, 0, 0, 0), (-2, -1, -1, -1, -1, -1, 0, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0, 0), (-1, -1, 0, 0, -1, 0, 0, 0, 0), (-1, -1, 0, 0, 0, -1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   799    9   A1+D4       {A1}+[A3]    4   60  282    2     2      2                             [e2-e3, e3-e4, e4-e5, e6-e7, e0-e1-e2-e3]                                                                               [e0-e1-e6-e7, 2e0-e2-e3-e4-e5-e6-e7, e5-e8, e0-e1-e5-e8]                                                             [(3, 2, 1, 1, 1, 1, 0, 0, 0), (-2, -1, -1, -1, -1, -1, 0, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0, 0), (-1, -1, 0, 0, -1, 0, 0, 0, 0), (-1, -1, 0, 0, 0, -1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   800    9   A1+D4            [A4]    4   51  201    0     3      3                             [e2-e3, e3-e4, e4-e5, e6-e7, e0-e1-e2-e3]                                                                                     [e5-e6, e0-e1-e5-e7, e1-e8, 2e0-e1-e2-e3-e4-e5-e8]                                                             [(3, 2, 1, 1, 1, 1, 0, 0, 0), (-2, -1, -1, -1, -1, -1, 0, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0, 0), (-1, -1, 0, 0, -1, 0, 0, 0, 0), (-1, -1, 0, 0, 0, -1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   801    9   A1+D4        4A1+{A1}    5   56  291    1     2      3                             [e2-e3, e3-e4, e4-e5, e6-e7, e0-e1-e2-e3]                                                 [e0-e1-e6-e7, e5-e8, e0-e1-e5-e8, 2e0-e2-e3-e5-e6-e7-e8, 3e0-e1-e2-e3-2e4-e5-e6-e7-e8]                                                             [(3, 2, 1, 1, 1, 1, 0, 0, 0), (-2, -1, -1, -1, -1, -1, 0, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0, 0), (-1, -1, 0, 0, -1, 0, 0, 0, 0), (-1, -1, 0, 0, 0, -1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   802    9   A1+D4      {A1}+2[A2]    5   45  205    1     3      3                             [e2-e3, e3-e4, e4-e5, e6-e7, e0-e1-e2-e3]                                                        [e0-e1-e6-e7, e1-e6, 2e0-e1-e2-e3-e4-e5-e7, e0-e2-e7-e8, 2e0-e1-e3-e4-e5-e6-e8]                                                             [(3, 2, 1, 1, 1, 1, 0, 0, 0), (-2, -1, -1, -1, -1, -1, 0, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0, 0), (-1, -1, 0, 0, -1, 0, 0, 0, 0), (-1, -1, 0, 0, 0, -1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   803    9   A1+D4       {A1}+[A4]    5   36  132    1     2      2                             [e2-e3, e3-e4, e4-e5, e6-e7, e0-e1-e2-e3]                                                                        [e0-e1-e6-e7, e1-e6, 2e0-e1-e2-e3-e4-e5-e7, e5-e8, e0-e1-e5-e8]                                                             [(3, 2, 1, 1, 1, 1, 0, 0, 0), (-2, -1, -1, -1, -1, -1, 0, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0, 0), (-1, -1, 0, 0, -1, 0, 0, 0, 0), (-1, -1, 0, 0, 0, -1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   804    9   A1+D4       [A2]+[A3]    5   38  158    1     2      2                             [e2-e3, e3-e4, e4-e5, e6-e7, e0-e1-e2-e3]                                                                  [e0-e1-e6-e7, e1-e6, 2e0-e1-e2-e3-e4-e5-e7, e0-e2-e3-e8, e0-e4-e5-e8]                                                             [(3, 2, 1, 1, 1, 1, 0, 0, 0), (-2, -1, -1, -1, -1, -1, 0, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0, 0), (-1, -1, 0, 0, -1, 0, 0, 0, 0), (-1, -1, 0, 0, 0, -1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   805    9   A1+D4            [A5]    5   29   91    1     1      1                             [e2-e3, e3-e4, e4-e5, e6-e7, e0-e1-e2-e3]                                                                                  [e0-e1-e6-e7, e1-e2, e0-e3-e4-e5, e5-e8, e0-e1-e5-e8]                                                             [(3, 2, 1, 1, 1, 1, 0, 0, 0), (-2, -1, -1, -1, -1, -1, 0, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0, 0), (-1, -1, 0, 0, -1, 0, 0, 0, 0), (-1, -1, 0, 0, 0, -1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   806    9   A1+D4             2A3    6   23   79    0     1      1                             [e2-e3, e3-e4, e4-e5, e6-e7, e0-e1-e2-e3]                                                           [e1-e2, e0-e3-e4-e5, e0-e3-e6-e7, 2e0-e1-e2-e4-e5-e6-e7, e5-e8, e0-e1-e5-e8]                                                             [(3, 2, 1, 1, 1, 1, 0, 0, 0), (-2, -1, -1, -1, -1, -1, 0, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0, 0), (-1, -1, 0, 0, -1, 0, 0, 0, 0), (-1, -1, 0, 0, 0, -1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   807    9   A1+D4           3[A2]    6   29  111    0     3      3                             [e2-e3, e3-e4, e4-e5, e6-e7, e0-e1-e2-e3]                                                 [e5-e6, e1-e7, e0-e1-e5-e7, 2e0-e1-e2-e3-e4-e5-e6, e0-e5-e6-e8, 2e0-e1-e2-e3-e4-e7-e8]                                                             [(3, 2, 1, 1, 1, 1, 0, 0, 0), (-2, -1, -1, -1, -1, -1, 0, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0, 0), (-1, -1, 0, 0, -1, 0, 0, 0, 0), (-1, -1, 0, 0, 0, -1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   808    9   A1+D4        4A1+[A2]    6   36  161    0     2      3                             [e2-e3, e3-e4, e4-e5, e6-e7, e0-e1-e2-e3]                                          [e5-e6, e0-e1-e5-e7, e4-e8, e0-e1-e4-e8, 2e0-e2-e4-e5-e6-e7-e8, 3e0-e1-e2-2e3-e4-e5-e6-e7-e8]                                                             [(3, 2, 1, 1, 1, 1, 0, 0, 0), (-2, -1, -1, -1, -1, -1, 0, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0, 0), (-1, -1, 0, 0, -1, 0, 0, 0, 0), (-1, -1, 0, 0, 0, -1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   809    9   A1+D4       [A2]+[A4]    6   22   72    0     2      2                             [e2-e3, e3-e4, e4-e5, e6-e7, e0-e1-e2-e3]                                                                 [e5-e6, e1-e7, e0-e1-e5-e7, 2e0-e1-e2-e3-e4-e5-e6, e4-e8, e0-e1-e4-e8]                                                             [(3, 2, 1, 1, 1, 1, 0, 0, 0), (-2, -1, -1, -1, -1, -1, 0, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0, 0), (-1, -1, 0, 0, -1, 0, 0, 0, 0), (-1, -1, 0, 0, 0, -1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   810    9   A1+D4            [A6]    6   15   39    0     1      1                             [e2-e3, e3-e4, e4-e5, e6-e7, e0-e1-e2-e3]                                                                           [e1-e2, e5-e6, e0-e3-e4-e5, e0-e1-e5-e7, e4-e8, e0-e1-e4-e8]                                                             [(3, 2, 1, 1, 1, 1, 0, 0, 0), (-2, -1, -1, -1, -1, -1, 0, 0, 0), (-1, -1, -1, 0, 0, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0, 0), (-1, -1, 0, 0, -1, 0, 0, 0, 0), (-1, -1, 0, 0, 0, -1, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   811    9      D6              A0    0  240 2160    0     4      4                      [e2-e3, e3-e4, e4-e5, e5-e6, e6-e7, e0-e1-e2-e3]                                                                                                                                     []                                                     [(4, 3, 1, 1, 1, 1, 1, 1, 0), (-3, -2, -1, -1, -1, -1, -1, -1, 0), (-1, -1, -1, 0, 0, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0, 0), (-1, -1, 0, 0, -1, 0, 0, 0, 0), (-1, -1, 0, 0, 0, -1, 0, 0, 0), (-1, -1, 0, 0, 0, 0, -1, 0, 0), (-1, -1, 0, 0, 0, 0, 0, -1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   812    9      D6            {A1}    1  183 1458    1     3      2                      [e2-e3, e3-e4, e4-e5, e5-e6, e6-e7, e0-e1-e2-e3]                                                                                                         [3e0-e1-e2-e3-e4-e5-e6-e7-2e8]                                                     [(4, 3, 1, 1, 1, 1, 1, 1, 0), (-3, -2, -1, -1, -1, -1, -1, -1, 0), (-1, -1, -1, 0, 0, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0, 0), (-1, -1, 0, 0, -1, 0, 0, 0, 0), (-1, -1, 0, 0, 0, -1, 0, 0, 0), (-1, -1, 0, 0, 0, 0, -1, 0, 0), (-1, -1, 0, 0, 0, 0, 0, -1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   813    9      D6             2A1    2  138  981    0     2      3                      [e2-e3, e3-e4, e4-e5, e5-e6, e6-e7, e0-e1-e2-e3]                                                                                                                   [e7-e8, e0-e1-e7-e8]                                                     [(4, 3, 1, 1, 1, 1, 1, 1, 0), (-3, -2, -1, -1, -1, -1, -1, -1, 0), (-1, -1, -1, 0, 0, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0, 0), (-1, -1, 0, 0, -1, 0, 0, 0, 0), (-1, -1, 0, 0, 0, -1, 0, 0, 0), (-1, -1, 0, 0, 0, 0, -1, 0, 0), (-1, -1, 0, 0, 0, 0, 0, -1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   814    9      D6           2{A1}    2  138  981    2     2      1                      [e2-e3, e3-e4, e4-e5, e5-e6, e6-e7, e0-e1-e2-e3]                                                                                  [2e0-e2-e3-e4-e5-e6-e7, 3e0-e1-e2-e3-e4-e5-e6-e7-2e8]                                                     [(4, 3, 1, 1, 1, 1, 1, 1, 0), (-3, -2, -1, -1, -1, -1, -1, -1, 0), (-1, -1, -1, 0, 0, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0, 0), (-1, -1, 0, 0, -1, 0, 0, 0, 0), (-1, -1, 0, 0, 0, -1, 0, 0, 0), (-1, -1, 0, 0, 0, 0, -1, 0, 0), (-1, -1, 0, 0, 0, 0, 0, -1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   815    9      D6            [A2]    2  127  828    0     3      2                      [e2-e3, e3-e4, e4-e5, e5-e6, e6-e7, e0-e1-e2-e3]                                                                                                  [e1-e8, 3e0-2e1-e2-e3-e4-e5-e6-e7-e8]                                                     [(4, 3, 1, 1, 1, 1, 1, 1, 0), (-3, -2, -1, -1, -1, -1, -1, -1, 0), (-1, -1, -1, 0, 0, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0, 0), (-1, -1, 0, 0, -1, 0, 0, 0, 0), (-1, -1, 0, 0, 0, -1, 0, 0, 0), (-1, -1, 0, 0, 0, 0, -1, 0, 0), (-1, -1, 0, 0, 0, 0, 0, -1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   816    9      D6       {A1}+[A2]    3   94  555    1     2      1                      [e2-e3, e3-e4, e4-e5, e5-e6, e6-e7, e0-e1-e2-e3]                                                                           [2e0-e2-e3-e4-e5-e6-e7, e1-e8, 3e0-2e1-e2-e3-e4-e5-e6-e7-e8]                                                     [(4, 3, 1, 1, 1, 1, 1, 1, 0), (-3, -2, -1, -1, -1, -1, -1, -1, 0), (-1, -1, -1, 0, 0, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0, 0), (-1, -1, 0, 0, -1, 0, 0, 0, 0), (-1, -1, 0, 0, 0, -1, 0, 0, 0), (-1, -1, 0, 0, 0, 0, -1, 0, 0), (-1, -1, 0, 0, 0, 0, 0, -1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   817    9      D6            [A3]    3   83  423    1     1      1                      [e2-e3, e3-e4, e4-e5, e5-e6, e6-e7, e0-e1-e2-e3]                                                                                            [2e0-e2-e3-e4-e5-e6-e7, e7-e8, e0-e1-e7-e8]                                                     [(4, 3, 1, 1, 1, 1, 1, 1, 0), (-3, -2, -1, -1, -1, -1, -1, -1, 0), (-1, -1, -1, 0, 0, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0, 0), (-1, -1, 0, 0, -1, 0, 0, 0, 0), (-1, -1, 0, 0, 0, -1, 0, 0, 0), (-1, -1, 0, 0, 0, 0, -1, 0, 0), (-1, -1, 0, 0, 0, 0, 0, -1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   818    9      D6           2[A2]    4   62  313    0     2      1                      [e2-e3, e3-e4, e4-e5, e5-e6, e6-e7, e0-e1-e2-e3]                                                                     [e1-e2, 2e0-e1-e3-e4-e5-e6-e7, e0-e3-e4-e8, 2e0-e1-e2-e5-e6-e7-e8]                                                     [(4, 3, 1, 1, 1, 1, 1, 1, 0), (-3, -2, -1, -1, -1, -1, -1, -1, 0), (-1, -1, -1, 0, 0, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0, 0), (-1, -1, 0, 0, -1, 0, 0, 0, 0), (-1, -1, 0, 0, 0, -1, 0, 0, 0), (-1, -1, 0, 0, 0, 0, -1, 0, 0), (-1, -1, 0, 0, 0, 0, 0, -1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   819    9      D6             4A1    4   77  438    0     1      2                      [e2-e3, e3-e4, e4-e5, e5-e6, e6-e7, e0-e1-e2-e3]                                                              [e7-e8, e0-e1-e7-e8, 2e0-e2-e3-e4-e5-e7-e8, 3e0-e1-e2-e3-e4-e5-2e6-e7-e8]                                                     [(4, 3, 1, 1, 1, 1, 1, 1, 0), (-3, -2, -1, -1, -1, -1, -1, -1, 0), (-1, -1, -1, 0, 0, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0, 0), (-1, -1, 0, 0, -1, 0, 0, 0, 0), (-1, -1, 0, 0, 0, -1, 0, 0, 0), (-1, -1, 0, 0, 0, 0, -1, 0, 0), (-1, -1, 0, 0, 0, 0, 0, -1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   820    9      D6            [A4]    4   51  201    0     1      1                      [e2-e3, e3-e4, e4-e5, e5-e6, e6-e7, e0-e1-e2-e3]                                                                                     [e1-e2, 2e0-e1-e3-e4-e5-e6-e7, e7-e8, e0-e1-e7-e8]                                                     [(4, 3, 1, 1, 1, 1, 1, 1, 0), (-3, -2, -1, -1, -1, -1, -1, -1, 0), (-1, -1, -1, 0, 0, 0, 0, 0, 0), (-1, -1, 0, -1, 0, 0, 0, 0, 0), (-1, -1, 0, 0, -1, 0, 0, 0, 0), (-1, -1, 0, 0, 0, -1, 0, 0, 0), (-1, -1, 0, 0, 0, 0, -1, 0, 0), (-1, -1, 0, 0, 0, 0, 0, -1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   821    9      E7              A0    0  240 2160    0     2      0               [e1-e2, e2-e3, e3-e4, e4-e5, e5-e6, e6-e7, e0-e1-e2-e3]                                                                                                                                     []                       [(8, 3, 3, 3, 3, 3, 3, 3, 0), (-3, -2, -1, -1, -1, -1, -1, -1, 0), (-3, -1, -2, -1, -1, -1, -1, -1, 0), (-3, -1, -1, -2, -1, -1, -1, -1, 0), (-3, -1, -1, -1, -2, -1, -1, -1, 0), (-3, -1, -1, -1, -1, -2, -1, -1, 0), (-3, -1, -1, -1, -1, -1, -2, -1, 0), (-3, -1, -1, -1, -1, -1, -1, -2, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   822    9      E7            {A1}    1  183 1458    1     1      0               [e1-e2, e2-e3, e3-e4, e4-e5, e5-e6, e6-e7, e0-e1-e2-e3]                                                                                                         [3e0-e1-e2-e3-e4-e5-e6-e7-2e8]                       [(8, 3, 3, 3, 3, 3, 3, 3, 0), (-3, -2, -1, -1, -1, -1, -1, -1, 0), (-3, -1, -2, -1, -1, -1, -1, -1, 0), (-3, -1, -1, -2, -1, -1, -1, -1, 0), (-3, -1, -1, -1, -2, -1, -1, -1, 0), (-3, -1, -1, -1, -1, -2, -1, -1, 0), (-3, -1, -1, -1, -1, -1, -2, -1, 0), (-3, -1, -1, -1, -1, -1, -1, -2, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   823    9      E7            [A2]    2  127  828    0     1      0               [e1-e2, e2-e3, e3-e4, e4-e5, e5-e6, e6-e7, e0-e1-e2-e3]                                                                                                  [e7-e8, 3e0-e1-e2-e3-e4-e5-e6-2e7-e8]                       [(8, 3, 3, 3, 3, 3, 3, 3, 0), (-3, -2, -1, -1, -1, -1, -1, -1, 0), (-3, -1, -2, -1, -1, -1, -1, -1, 0), (-3, -1, -1, -2, -1, -1, -1, -1, 0), (-3, -1, -1, -1, -2, -1, -1, -1, 0), (-3, -1, -1, -1, -1, -2, -1, -1, 0), (-3, -1, -1, -1, -1, -1, -2, -1, 0), (-3, -1, -1, -1, -1, -1, -1, -2, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1)]
   824    9      E8              A0    0  240 2160    0     0      0        [e1-e2, e2-e3, e3-e4, e4-e5, e5-e6, e6-e7, e7-e8, e0-e1-e2-e3]                                                                                                                                     []      [(17, 6, 6, 6, 6, 6, 6, 6, 6), (-6, -3, -2, -2, -2, -2, -2, -2, -2), (-6, -2, -3, -2, -2, -2, -2, -2, -2), (-6, -2, -2, -3, -2, -2, -2, -2, -2), (-6, -2, -2, -2, -3, -2, -2, -2, -2), (-6, -2, -2, -2, -2, -3, -2, -2, -2), (-6, -2, -2, -2, -2, -2, -3, -2, -2), (-6, -2, -2, -2, -2, -2, -2, -3, -2), (-6, -2, -2, -2, -2, -2, -2, -2, -3)]
 
usecase__get_cls(69): rank = 9 , len = 438 
usecase__get_cls(70): ################################################################################ 
usecase__get_cls(73): rank = 3 , len = 3 
usecase__get_cls(73): rank = 4 , len = 12 
usecase__get_cls(73): rank = 5 , len = 12 
usecase__get_cls(73): rank = 6 , len = 52 
usecase__get_cls(73): rank = 7 , len = 56 
usecase__get_cls(73): rank = 8 , len = 252 
usecase__get_cls(73): rank = 9 , len = 438 
usecase__get_cls(74): ################################################################################ 
3e0-e1-e2-e3-e4-e5-e6-e7-e8
usecase__get_classes_dp1(103): (dc, cc) = (2, 0) 
usecase__get_classes_dp1(106): 		 e0-e1 		 e0 
usecase__get_classes_dp1(106): 		 2e0-e1-e2-e3-e4 		 e0+e1-e2-e3 
usecase__get_classes_dp1(106): 		 3e0-2e1-e2-e3-e4-e5-e6 		 2e0+e1-e2-e3-e4-e5 
usecase__get_classes_dp1(106): 		 4e0-2e1-2e2-2e3-e4-e5-e6-e7 		 2e0+2e1-2e2-e3-e4-e5-e6 
usecase__get_classes_dp1(106): 		 4e0-3e1-e2-e3-e4-e5-e6-e7-e8 		 3e0+e1-e2-e3-e4-e5-e6-e7 
usecase__get_classes_dp1(106): 		 5e0-2e1-2e2-2e3-2e4-2e5-2e6-e7 		 3e0+3e1-2e2-2e3-2e4-2e5-e6-e8 
usecase__get_classes_dp1(106): 		 5e0-3e1-2e2-2e3-2e4-e5-e6-e7-e8 		 3e0+2e1-2e2-2e3-e4-e5-e6-e7 
usecase__get_classes_dp1(106): 		 6e0-3e1-3e2-2e3-2e4-2e5-2e6-e7-e8 		 3e0+3e1-2e2-2e3-2e4-2e5-e6-e7 
usecase__get_classes_dp1(106): 		 7e0-3e1-3e2-3e3-3e4-2e5-2e6-2e7-e8 		 4e0+4e1-3e2-3e3-2e4-2e5-2e6-e7-e8 
usecase__get_classes_dp1(106): 		 7e0-4e1-3e2-2e3-2e4-2e5-2e6-2e7-2e8 		 4e0+3e1-2e2-2e3-2e4-2e5-2e6-2e7 
usecase__get_classes_dp1(106): 		 8e0-3e1-3e2-3e3-3e4-3e5-3e6-3e7-e8 		 5e0+5e1-3e2-3e3-3e4-3e5-3e6-e7-2e8 
usecase__get_classes_dp1(106): 		 8e0-4e1-3e2-3e3-3e4-3e5-2e6-2e7-2e8 		 5e0+4e1-3e2-3e3-3e4-2e5-2e6-2e7-e8 
usecase__get_classes_dp1(106): 		 9e0-4e1-4e2-3e3-3e4-3e5-3e6-3e7-2e8 		 5e0+5e1-3e2-3e3-3e4-3e5-3e6-2e7-e8 
usecase__get_classes_dp1(106): 		 10e0-4e1-4e2-4e3-4e4-3e5-3e6-3e7-3e8 		 6e0+6e1-4e2-4e3-3e4-3e5-3e6-3e7-2e8 
usecase__get_classes_dp1(106): 		 11e0-4e1-4e2-4e3-4e4-4e5-4e6-4e7-3e8 		 7e0+7e1-4e2-4e3-4e4-4e5-4e6-3e7-3e8 
usecase__get_classes_dp1(103): (dc, cc) = (1, -1) 
usecase__get_classes_dp1(106): 		 e1 		 e1-e8 
usecase__get_classes_dp1(106): 		 e0-e1-e2 		 e8 
usecase__get_classes_dp1(106): 		 2e0-e1-e2-e3-e4-e5 		 e0+e1-e2-e3-e4 
usecase__get_classes_dp1(106): 		 3e0-2e1-e2-e3-e4-e5-e6-e7 		 2e0+e1-e2-e3-e4-e5-e6 
usecase__get_classes_dp1(106): 		 4e0-2e1-2e2-2e3-e4-e5-e6-e7-e8 		 2e0+2e1-2e2-e3-e4-e5-e6-e7 
usecase__get_classes_dp1(106): 		 5e0-2e1-2e2-2e3-2e4-2e5-2e6-e7-e8 		 3e0+3e1-2e2-2e3-2e4-2e5-e6-e7-e8 
usecase__get_classes_dp1(106): 		 6e0-3e1-2e2-2e3-2e4-2e5-2e6-2e7-2e8 		 4e0+3e1-2e2-2e3-2e4-2e5-2e6-2e7-e8 
usecase__get_classes_dp1(103): (dc, cc) = (0, -2) 
usecase__get_classes_dp1(106): 		 e1-e2 		 -e0+e1 
usecase__get_classes_dp1(106): 		 e0-e1-e2-e3 		 -e2+e8 
usecase__get_classes_dp1(106): 		 2e0-e1-e2-e3-e4-e5-e6 		 e0+e1-e2-e3-e4-e5 
usecase__get_classes_dp1(106): 		 3e0-2e1-e2-e3-e4-e5-e6-e7-e8 		 2e0+e1-e2-e3-e4-e5-e6-e7 
usecase__get_classes_dp1(103): (dc, cc) = (2, 2) 
usecase__get_classes_dp1(106): 		 3e0-e1-e2-e3-e4-e5-e6-e7 		 2e0+2e1-e2-e3-e4-e5-e6-e8 
usecase__get_classes_dp1(106): 		 4e0-2e1-2e2-e3-e4-e5-e6-e7-e8 		 2e0+2e1-e2-e3-e4-e5-e6-e7 
usecase__get_classes_dp1(106): 		 5e0-2e1-2e2-2e3-2e4-2e5-e6-e7-e8 		 3e0+3e1-2e2-2e3-2e4-e5-e6-e7-e8 
usecase__get_classes_dp1(106): 		 6e0-3e1-2e2-2e3-2e4-2e5-2e6-2e7-e8 		 4e0+3e1-2e2-2e3-2e4-2e5-2e6-e7-e8 
usecase__get_classes_dp1(106): 		 7e0-3e1-3e2-3e3-2e4-2e5-2e6-2e7-2e8 		 4e0+4e1-3e2-2e3-2e4-2e5-2e6-2e7-e8 
usecase__get_classes_dp1(106): 		 8e0-3e1-3e2-3e3-3e4-3e5-3e6-2e7-2e8 		 5e0+5e1-3e2-3e3-3e4-3e5-2e6-2e7-2e8 
usecase__get_classes_dp1(106): 		 9e0-4e1-3e2-3e3-3e4-3e5-3e6-3e7-3e8 		 6e0+5e1-3e2-3e3-3e4-3e5-3e6-3e7-2e8 
usecase__get_classes_dp1(103): (dc, cc) = (2, 4) 
usecase__get_classes_dp1(106): 		 6e0-2e1-2e2-2e3-2e4-2e5-2e6-2e7-2e8 		 4e0+4e1-2e2-2e3-2e4-2e5-2e6-2e7-2e8 
usecase__get_classes_dp1(103): (dc, cc) = (3, 1) 
usecase__get_classes_dp1(106): 		 e0 		 e0+e1-e8 
usecase__get_classes_dp1(106): 		 2e0-e1-e2-e3 		 e0+e1-e2 
usecase__get_classes_dp1(106): 		 3e0-2e1-e2-e3-e4-e5 		 2e0+e1-e2-e3-e4 
usecase__get_classes_dp1(106): 		 4e0-2e1-2e2-2e3-e4-e5-e6 		 2e0+2e1-2e2-e3-e4-e5 
usecase__get_classes_dp1(106): 		 4e0-3e1-e2-e3-e4-e5-e6-e7 		 3e0+e1-e2-e3-e4-e5-e6 
usecase__get_classes_dp1(106): 		 5e0-2e1-2e2-2e3-2e4-2e5-2e6 		 3e0+3e1-2e2-2e3-2e4-2e5-e8 
usecase__get_classes_dp1(106): 		 5e0-3e1-2e2-2e3-2e4-e5-e6-e7 		 3e0+2e1-2e2-2e3-e4-e5-e6 
usecase__get_classes_dp1(106): 		 5e0-3e1-3e2-e3-e4-e5-e6-e7-e8 		 2e0+2e1-e2-e3-e4-e5-e6-e7+e8 
usecase__get_classes_dp1(106): 		 6e0-3e1-3e2-2e3-2e4-2e5-2e6-e7 		 3e0+3e1-2e2-2e3-2e4-2e5-e6 
usecase__get_classes_dp1(106): 		 6e0-3e1-3e2-3e3-2e4-e5-e6-e7-e8 		 3e0+3e1-3e2-2e3-e4-e5-e6-e7 
usecase__get_classes_dp1(106): 		 6e0-4e1-2e2-2e3-2e4-2e5-e6-e7-e8 		 4e0+2e1-2e2-2e3-2e4-e5-e6-e7 
usecase__get_classes_dp1(106): 		 7e0-3e1-3e2-3e3-3e4-2e5-2e6-2e7 		 4e0+4e1-3e2-3e3-2e4-2e5-2e6-e8 
usecase__get_classes_dp1(106): 		 7e0-3e1-3e2-3e3-3e4-3e5-e6-e7-e8 		 4e0+4e1-3e2-3e3-3e4-e5-e6-e7-e8 
usecase__get_classes_dp1(106): 		 7e0-4e1-3e2-3e3-2e4-2e5-2e6-e7-e8 		 4e0+3e1-3e2-2e3-2e4-2e5-e6-e7 
usecase__get_classes_dp1(106): 		 8e0-3e1-3e2-3e3-3e4-3e5-3e6-3e7 		 5e0+5e1-3e2-3e3-3e4-3e5-3e6-2e8 
usecase__get_classes_dp1(106): 		 8e0-4e1-3e2-3e3-3e4-3e5-3e6-e7-e8 		 5e0+4e1-3e2-3e3-3e4-3e5-e6-e7-e8 
usecase__get_classes_dp1(106): 		 8e0-4e1-4e2-3e3-3e4-2e5-2e6-2e7-e8 		 4e0+4e1-3e2-3e3-2e4-2e5-2e6-e7 
usecase__get_classes_dp1(106): 		 8e0-5e1-3e2-3e3-2e4-2e5-2e6-2e7-2e8 		 5e0+3e1-3e2-2e3-2e4-2e5-2e6-2e7 
usecase__get_classes_dp1(106): 		 9e0-4e1-4e2-4e3-3e4-3e5-3e6-2e7-e8 		 5e0+5e1-4e2-3e3-3e4-3e5-2e6-e7-e8 
usecase__get_classes_dp1(106): 		 9e0-5e1-3e2-3e3-3e4-3e5-3e6-3e7-e8 		 6e0+4e1-3e2-3e3-3e4-3e5-3e6-e7-e8 
usecase__get_classes_dp1(106): 		 9e0-4e1-4e2-4e3-4e4-2e5-2e6-2e7-2e8 		 5e0+5e1-4e2-4e3-2e4-2e5-2e6-2e7-e8 
usecase__get_classes_dp1(106): 		 9e0-5e1-4e2-3e3-3e4-3e5-2e6-2e7-2e8 		 5e0+4e1-3e2-3e3-3e4-2e5-2e6-2e7 
usecase__get_classes_dp1(106): 		 10e0-4e1-4e2-4e3-4e4-4e5-3e6-3e7-e8 		 6e0+6e1-4e2-4e3-4e4-3e5-3e6-e7-2e8 
usecase__get_classes_dp1(106): 		 10e0-5e1-4e2-4e3-4e4-3e5-3e6-2e7-2e8 		 6e0+5e1-4e2-4e3-3e4-3e5-2e6-2e7-e8 
usecase__get_classes_dp1(106): 		 10e0-5e1-5e2-3e3-3e4-3e5-3e6-3e7-2e8 		 5e0+5e1-3e2-3e3-3e4-3e5-3e6-2e7 
usecase__get_classes_dp1(106): 		 10e0-6e1-3e2-3e3-3e4-3e5-3e6-3e7-3e8 		 7e0+4e1-3e2-3e3-3e4-3e5-3e6-3e7-e8 
usecase__get_classes_dp1(106): 		 11e0-5e1-5e2-4e3-4e4-4e5-3e6-3e7-2e8 		 6e0+6e1-4e2-4e3-4e4-3e5-3e6-2e7-e8 
usecase__get_classes_dp1(106): 		 11e0-5e1-5e2-5e3-3e4-3e5-3e6-3e7-3e8 		 6e0+6e1-5e2-3e3-3e4-3e5-3e6-3e7-e8 
usecase__get_classes_dp1(106): 		 11e0-6e1-4e2-4e3-4e4-3e5-3e6-3e7-3e8 		 7e0+5e1-4e2-4e3-3e4-3e5-3e6-3e7-e8 
usecase__get_classes_dp1(106): 		 12e0-5e1-5e2-5e3-4e4-4e5-4e6-4e7-2e8 		 7e0+7e1-5e2-4e3-4e4-4e5-4e6-2e7-2e8 
usecase__get_classes_dp1(106): 		 12e0-5e1-5e2-5e3-5e4-4e5-3e6-3e7-3e8 		 7e0+7e1-5e2-5e3-4e4-3e5-3e6-3e7-2e8 
usecase__get_classes_dp1(106): 		 12e0-6e1-5e2-4e3-4e4-4e5-4e6-3e7-3e8 		 7e0+6e1-4e2-4e3-4e4-4e5-3e6-3e7-e8 
usecase__get_classes_dp1(106): 		 13e0-5e1-5e2-5e3-5e4-5e5-5e6-3e7-3e8 		 8e0+8e1-5e2-5e3-5e4-5e5-3e6-3e7-3e8 
usecase__get_classes_dp1(106): 		 13e0-6e1-5e2-5e3-5e4-4e5-4e6-4e7-3e8 		 8e0+7e1-5e2-5e3-4e4-4e5-4e6-3e7-2e8 
usecase__get_classes_dp1(106): 		 13e0-6e1-6e2-4e3-4e4-4e5-4e6-4e7-4e8 		 7e0+7e1-4e2-4e3-4e4-4e5-4e6-4e7-e8 
usecase__get_classes_dp1(106): 		 14e0-6e1-5e2-5e3-5e4-5e5-5e6-5e7-3e8 		 9e0+8e1-5e2-5e3-5e4-5e5-5e6-3e7-3e8 
usecase__get_classes_dp1(106): 		 14e0-6e1-6e2-5e3-5e4-5e5-4e6-4e7-4e8 		 8e0+8e1-5e2-5e3-5e4-4e5-4e6-4e7-2e8 
usecase__get_classes_dp1(106): 		 15e0-6e1-6e2-6e3-5e4-5e5-5e6-5e7-4e8 		 9e0+9e1-6e2-5e3-5e4-5e5-5e6-4e7-3e8 
usecase__get_classes_dp1(106): 		 15e0-7e1-5e2-5e3-5e4-5e5-5e6-5e7-5e8 		 10e0+8e1-5e2-5e3-5e4-5e5-5e6-5e7-3e8 
usecase__get_classes_dp1(106): 		 16e0-6e1-6e2-6e3-6e4-6e5-5e6-5e7-5e8 		 10e0+10e1-6e2-6e3-6e4-5e5-5e6-5e7-4e8 
usecase__get_classes_dp1(106): 		 17e0-6e1-6e2-6e3-6e4-6e5-6e6-6e7-6e8 		 11e0+11e1-6e2-6e3-6e4-6e5-6e6-6e7-5e8 
usecase__graphs(125): rank = 3 
usecase__graphs(125): rank = 4 
usecase__graphs(125): rank = 5 
usecase__graphs(125): rank = 6 
usecase__graphs(125): rank = 7 
usecase__graphs(125): rank = 8 
usecase__graphs(125): rank = 9 
get_SG(526): Initializing simple family graph of current DPLattice object... 9 A0 A0 
usecase__graphs(135): 		rownr = 388 
get_SG(526): Initializing simple family graph of current DPLattice object... 9 A0 {A1} 
usecase__graphs(135): 		rownr = 389 
get_SG(526): Initializing simple family graph of current DPLattice object... 9 A0 2{A1} 
usecase__graphs(135): 		rownr = 390 
get_SG(526): Initializing simple family graph of current DPLattice object... 9 A0 {A2} 
usecase__graphs(135): 		rownr = 400 
usecase__graphs(135): 		rownr = 500 
usecase__graphs(135): 		rownr = 600 
usecase__graphs(135): 		rownr = 700 
usecase__graphs(135): 		rownr = 800 
usecase__graphs(142): Classification of simple family graphs:
rownr deg  Mtype   type            #vert  #edges degrees                                                                                   labels                                                                                    complete       connected      vert-xfer      edge-xfer      
0     7    A0      A0              2      0      [0]                                                                                       []                                                                                        0              0              1              1              
1     7    A0      {A1}            1      0      [0]                                                                                       []                                                                                        1              1              1              1              
2     7    A1      A0              0      0      []                                                                                        []                                                                                        1              1              0              1              
3     6    A0      A0              3      0      [0]                                                                                       []                                                                                        0              0              1              1              
4     6    A0      {A1}            2      0      [0]                                                                                       []                                                                                        0              0              1              1              
5     6    A0      {A1}            3      0      [0]                                                                                       []                                                                                        0              0              1              1              
6     6    A0      2{A1}           2      0      [0]                                                                                       []                                                                                        0              0              1              1              
7     6    A0      {A2}            1      0      [0]                                                                                       []                                                                                        1              1              1              1              
8     6    A0      {A1}+{A2}       1      0      [0]                                                                                       []                                                                                        1              1              1              1              
9     6    A1      A0              1      0      [0]                                                                                       []                                                                                        1              1              1              1              
10    6    A1      {A1}            1      0      [0]                                                                                       []                                                                                        1              1              1              1              
11    6    A1'     A0              3      0      [0]                                                                                       []                                                                                        0              0              1              1              
12    6    A1'     {A1}            2      0      [0]                                                                                       []                                                                                        0              0              1              1              
13    6    A1'     {A2}            1      0      [0]                                                                                       []                                                                                        1              1              1              1              
14    6    2A1     A0              1      0      [0]                                                                                       []                                                                                        1              1              1              1              
15    5    A0      A0              5      0      [0]                                                                                       []                                                                                        0              0              1              1              
16    5    A0      {A1}            4      0      [0]                                                                                       []                                                                                        0              0              1              1              
17    5    A0      2{A1}           3      0      [0]                                                                                       []                                                                                        0              0              1              1              
18    5    A0      {A2}            3      0      [0]                                                                                       []                                                                                        0              0              1              1              
19    5    A0      {A1}+{A2}       2      0      [0]                                                                                       []                                                                                        0              0              1              1              
20    5    A0      {A3}            2      0      [0]                                                                                       []                                                                                        0              0              1              1              
21    5    A0      {A4}            1      0      [0]                                                                                       []                                                                                        1              1              1              1              
22    5    A1      A0              3      0      [0]                                                                                       []                                                                                        0              0              1              1              
23    5    A1      {A1}            2      0      [0]                                                                                       []                                                                                        0              0              1              1              
24    5    A1      {A2}            1      0      [0]                                                                                       []                                                                                        1              1              1              1              
25    5    2A1     A0              1      0      [0]                                                                                       []                                                                                        1              1              1              1              
26    5    2A1     2A1             1      0      [0]                                                                                       []                                                                                        1              1              1              1              
27    4    A0      A0              10     5      [1]                                                                                       [2]                                                                                       0              0              1              1              
28    4    A0      {A1}            8      3      [0, 1]                                                                                    [2]                                                                                       0              0              0              1              
29    4    A0      2{A1}           6      1      [0, 1]                                                                                    [2]                                                                                       0              0              0              1              
30    4    A0      2{A1}           7      3      [0, 1]                                                                                    [2]                                                                                       0              0              0              1              
31    4    A0      {A2}            6      2      [0, 1]                                                                                    [2]                                                                                       0              0              0              1              
32    4    A0      3{A1}           5      1      [0, 1]                                                                                    [2]                                                                                       0              0              0              1              
33    4    A0      {A1}+{A2}       4      0      [0]                                                                                       []                                                                                        0              0              1              1              
34    4    A0      {A3}            4      1      [0, 1]                                                                                    [2]                                                                                       0              0              0              1              
35    4    A0      {A3}            5      2      [0, 1]                                                                                    [2]                                                                                       0              0              0              1              
36    4    A0      2{A1}+{A2}      3      0      [0]                                                                                       []                                                                                        0              0              1              1              
37    4    A0      4{A1}           4      1      [0, 1]                                                                                    [2]                                                                                       0              0              0              1              
38    4    A0      {A1}+{A3}       3      0      [0]                                                                                       []                                                                                        0              0              1              1              
39    4    A0      {A4}            2      0      [0]                                                                                       []                                                                                        0              0              1              1              
40    4    A0      {D4}            3      1      [0, 1]                                                                                    [2]                                                                                       0              0              0              1              
41    4    A0      2{A1}+{A3}      2      0      [0]                                                                                       []                                                                                        0              0              1              1              
42    4    A0      {D5}            1      0      [0]                                                                                       []                                                                                        1              1              1              1              
43    4    A1      A0              6      3      [1]                                                                                       [2]                                                                                       0              0              1              1              
44    4    A1      {A1}            4      1      [0, 1]                                                                                    [2]                                                                                       0              0              0              1              
45    4    A1      {A1}            6      3      [1]                                                                                       [2]                                                                                       0              0              1              1              
46    4    A1      2{A1}           3      1      [0, 1]                                                                                    [2]                                                                                       0              0              0              1              
47    4    A1      2{A1}           4      1      [0, 1]                                                                                    [2]                                                                                       0              0              0              1              
48    4    A1      {A2}            2      0      [0]                                                                                       []                                                                                        0              0              1              1              
49    4    A1      3{A1}           3      1      [0, 1]                                                                                    [2]                                                                                       0              0              0              1              
50    4    A1      {A1}+{A2}       2      0      [0]                                                                                       []                                                                                        0              0              1              1              
51    4    A1      {A3}            1      0      [0]                                                                                       []                                                                                        1              1              1              1              
52    4    A1      {A1}+{A3}       1      0      [0]                                                                                       []                                                                                        1              1              1              1              
53    4    2A1     A0              2      1      [1]                                                                                       [2]                                                                                       1              1              1              1              
54    4    2A1     {A1}            2      1      [1]                                                                                       [2]                                                                                       1              1              1              1              
55    4    2A1     2A1             2      1      [1]                                                                                       [2]                                                                                       1              1              1              1              
56    4    2A1     2{A1}           2      1      [1]                                                                                       [2]                                                                                       1              1              1              1              
57    4    2A1     [A3]            2      1      [1]                                                                                       [2]                                                                                       1              1              1              1              
58    4    2A1     4A1             2      1      [1]                                                                                       [2]                                                                                       1              1              1              1              
59    4    2A1'    A0              6      3      [1]                                                                                       [2]                                                                                       0              0              1              1              
60    4    2A1'    {A1}            4      1      [0, 1]                                                                                    [2]                                                                                       0              0              0              1              
61    4    2A1'    2A1             5      2      [0, 1]                                                                                    [2]                                                                                       0              0              0              1              
62    4    2A1'    2{A1}           3      1      [0, 1]                                                                                    [2]                                                                                       0              0              0              1              
63    4    2A1'    {A2}            2      0      [0]                                                                                       []                                                                                        0              0              1              1              
64    4    2A1'    2A1+{A1}        3      0      [0]                                                                                       []                                                                                        0              0              1              1              
65    4    2A1'    [A3]            3      1      [0, 1]                                                                                    [2]                                                                                       0              0              0              1              
66    4    2A1'    {A3}            1      0      [0]                                                                                       []                                                                                        1              1              1              1              
67    4    2A1'    4A1             4      1      [0, 1]                                                                                    [2]                                                                                       0              0              0              1              
68    4    2A1'    2A1+2{A1}       2      0      [0]                                                                                       []                                                                                        0              0              1              1              
69    4    2A1'    [D4]            1      0      [0]                                                                                       []                                                                                        1              1              1              1              
70    4    2A1'    2A1+[A3]        2      0      [0]                                                                                       []                                                                                        0              0              1              1              
71    4    3A1     A0              2      1      [1]                                                                                       [2]                                                                                       1              1              1              1              
72    4    3A1     {A1}            2      1      [1]                                                                                       [2]                                                                                       1              1              1              1              
73    4    3A1     2A1             1      0      [0]                                                                                       []                                                                                        1              1              1              1              
74    4    3A1     [A2]            2      1      [1]                                                                                       [2]                                                                                       1              1              1              1              
75    4    3A1     2A1+{A1}        1      0      [0]                                                                                       []                                                                                        1              1              1              1              
76    4    3A1     2A1+[A2]        1      0      [0]                                                                                       []                                                                                        1              1              1              1              
77    4    D4      A0              2      1      [1]                                                                                       [2]                                                                                       1              1              1              1              
78    4    D4      2A1             1      0      [0]                                                                                       []                                                                                        1              1              1              1              
79    3    A0      A0              27     135    [10]                                                                                      [2]                                                                                       0              1              1              1              
80    3    A0      {A1}            21     75     [5, 8]                                                                                    [2]                                                                                       0              1              0              0              
81    3    A0      2{A1}           16     38     [1, 4, 6, 7]                                                                              [2]                                                                                       0              1              0              0              
82    3    A0      {A2}            15     36     [3, 6]                                                                                    [2]                                                                                       0              1              0              0              
83    3    A0      3{A1}           12     18     [1, 3, 5]                                                                                 [2]                                                                                       0              1              0              0              
84    3    A0      {A1}+{A2}       11     15     [0, 2, 3, 4]                                                                              [2]                                                                                       0              0              0              0              
85    3    A0      {A3}            10     15     [1, 2, 4, 5]                                                                              [2]                                                                                       0              1              0              0              
86    3    A0      2{A1}+{A2}      8      6      [0, 1, 2, 3]                                                                              [2]                                                                                       0              0              0              0              
87    3    A0      2{A2}           7      3      [0, 1]                                                                                    [2]                                                                                       0              0              0              1              
88    3    A0      4{A1}           9      9      [1, 4]                                                                                    [2]                                                                                       0              1              0              0              
89    3    A0      {A1}+{A3}       7      5      [0, 1, 2, 3]                                                                              [2]                                                                                       0              0              0              0              
90    3    A0      {A4}            6      4      [0, 1, 2]                                                                                 [2]                                                                                       0              0              0              0              
91    3    A0      {D4}            6      6      [1, 3]                                                                                    [2]                                                                                       0              1              0              0              
92    3    A0      2{A1}+{A3}      5      2      [0, 1, 2]                                                                                 [2]                                                                                       0              0              0              1              
93    3    A0      {A1}+2{A2}      5      1      [0, 1]                                                                                    [2]                                                                                       0              0              0              1              
94    3    A0      {A1}+{A4}       4      1      [0, 1]                                                                                    [2]                                                                                       0              0              0              1              
95    3    A0      {A5}            3      0      [0]                                                                                       []                                                                                        0              0              1              1              
96    3    A0      {D5}            3      1      [0, 1]                                                                                    [2]                                                                                       0              0              0              1              
97    3    A0      3{A2}           3      0      [0]                                                                                       []                                                                                        0              0              1              1              
98    3    A0      {A1}+{A5}       2      0      [0]                                                                                       []                                                                                        0              0              1              1              
99    3    A0      {E6}            1      0      [0]                                                                                       []                                                                                        1              1              1              1              
100   3    A1      A0              15     45     [6]                                                                                       [2]                                                                                       0              1              1              1              
101   3    A1      {A1}            11     21     [3, 4, 6]                                                                                 [2]                                                                                       0              1              0              0              
102   3    A1      2{A1}           8      10     [1, 2, 3, 4]                                                                              [2]                                                                                       0              1              0              0              
103   3    A1      {A2}            7      6      [1, 2, 3]                                                                                 [2]                                                                                       0              1              0              0              
104   3    A1      3{A1}           6      6      [1, 3]                                                                                    [2]                                                                                       0              1              0              0              
105   3    A1      {A1}+{A2}       5      3      [0, 1, 2]                                                                                 [2]                                                                                       0              0              0              0              
106   3    A1      {A3}            4      1      [0, 1]                                                                                    [2]                                                                                       0              0              0              1              
107   3    A1      2{A2}           3      1      [0, 1]                                                                                    [2]                                                                                       0              0              0              1              
108   3    A1      {A1}+{A3}       3      1      [0, 1]                                                                                    [2]                                                                                       0              0              0              1              
109   3    A1      {A4}            2      0      [0]                                                                                       []                                                                                        0              0              1              1              
110   3    A1      {A5}            1      0      [0]                                                                                       []                                                                                        1              1              1              1              
111   3    2A1     A0              7      9      [2, 6]                                                                                    [2]                                                                                       0              1              0              0              
112   3    2A1     {A1}            5      5      [1, 2, 4]                                                                                 [2]                                                                                       0              1              0              0              
113   3    2A1     2A1             6      7      [1, 2, 5]                                                                                 [2]                                                                                       0              1              0              0              
114   3    2A1     2{A1}           4      4      [1, 2, 3]                                                                                 [2]                                                                                       0              1              0              0              
115   3    2A1     {A2}            3      2      [1, 2]                                                                                    [2]                                                                                       0              1              0              1              
116   3    2A1     2A1+{A1}        4      3      [1, 3]                                                                                    [2]                                                                                       0              1              0              1              
117   3    2A1     [A3]            4      4      [1, 2, 3]                                                                                 [2]                                                                                       0              1              0              0              
118   3    2A1     {A3}            2      1      [1]                                                                                       [2]                                                                                       1              1              1              1              
119   3    2A1     4A1             5      5      [1, 2, 4]                                                                                 [2]                                                                                       0              1              0              0              
120   3    2A1     2{A1}+2A1       3      2      [1, 2]                                                                                    [2]                                                                                       0              1              0              1              
121   3    2A1     [D4]            2      1      [1]                                                                                       [2]                                                                                       1              1              1              1              
122   3    2A1     2A1+[A3]        3      2      [1, 2]                                                                                    [2]                                                                                       0              1              0              1              
123   3    3A1     A0              3      3      [2]                                                                                       [2]                                                                                       1              1              1              1              
124   3    3A1     {A1}            3      3      [2]                                                                                       [2]                                                                                       1              1              1              1              
125   3    3A1     2A1             2      1      [1]                                                                                       [2]                                                                                       1              1              1              1              
126   3    3A1     [A2]            3      3      [2]                                                                                       [2]                                                                                       1              1              1              1              
127   3    3A1     2A1+{A1}        2      1      [1]                                                                                       [2]                                                                                       1              1              1              1              
128   3    3A1     2A1+[A2]        2      1      [1]                                                                                       [2]                                                                                       1              1              1              1              
129   3    3A1     2A2             1      0      [0]                                                                                       []                                                                                        1              1              1              1              
130   3    3A1     {A1}+2A2        1      0      [0]                                                                                       []                                                                                        1              1              1              1              
131   3    3A1     [A2]+2A2        1      0      [0]                                                                                       []                                                                                        1              1              1              1              
132   3    D4      A0              3      3      [2]                                                                                       [2]                                                                                       1              1              1              1              
133   3    D4      2A1             2      1      [1]                                                                                       [2]                                                                                       1              1              1              1              
134   3    D4      2A2             1      0      [0]                                                                                       []                                                                                        1              1              1              1              
135   2    A0      A0              126    5859   [93]                                                                                      [2, 3, 4]                                                                                 0              1              1              0              
136   2    A0      {A1}            93     3046   [60, 61, 68]                                                                              [2, 3, 4]                                                                                 0              1              0              0              
137   2    A0      2{A1}           68     1534   [37, 43, 44, 49, 51]                                                                      [2, 3, 4]                                                                                 0              1              0              0              
138   2    A0      {A2}            61     1230   [30, 37, 44]                                                                              [2, 3, 4]                                                                                 0              1              0              0              
139   2    A0      3{A1}           49     735    [19, 26, 30, 31, 35, 36]                                                                  [2, 3, 4]                                                                                 0              1              0              0              
140   2    A0      3{A1}           51     819    [28, 34, 36]                                                                              [2, 3, 4]                                                                                 0              1              0              0              
141   2    A0      {A1}+{A2}       44     590    [21, 26, 27, 28, 31]                                                                      [2, 3, 4]                                                                                 0              1              0              0              
142   2    A0      {A3}            37     416    [14, 19, 21, 26, 28]                                                                      [2, 3, 4]                                                                                 0              1              0              0              
143   2    A0      2{A1}+{A2}      31     260    [9, 14, 16, 18, 19, 22]                                                                   [2, 3, 4]                                                                                 0              1              0              0              
144   2    A0      2{A2}           28     212    [11, 13, 16, 19]                                                                          [2, 3, 4]                                                                                 0              1              0              0              
145   2    A0      4{A1}           35     339    [6, 18, 21, 26]                                                                           [2, 3, 4]                                                                                 0              1              0              0              
146   2    A0      4{A1}           36     367    [14, 19, 21, 22, 23, 26]                                                                  [2, 3, 4]                                                                                 0              1              0              0              
147   2    A0      {A1}+{A3}       26     182    [9, 11, 14, 15, 16, 18, 19]                                                               [2, 3, 4]                                                                                 0              1              0              0              
148   2    A0      {A1}+{A3}       28     224    [13, 14, 19]                                                                              [2, 3, 4]                                                                                 0              1              0              0              
149   2    A0      {A4}            21     118    [6, 9, 11, 13, 14]                                                                        [2, 3, 4]                                                                                 0              1              0              0              
150   2    A0      {D4}            19     99     [6, 9, 14]                                                                                [2, 3, 4]                                                                                 0              1              0              0              
151   2    A0      2{A1}+{A3}      18     74     [2, 6, 7, 9, 10, 13]                                                                      [2, 3, 4]                                                                                 0              1              0              0              
152   2    A0      2{A1}+{A3}      19     87     [5, 6, 8, 10, 11, 12, 13]                                                                 [2, 3, 4]                                                                                 0              1              0              0              
153   2    A0      3{A1}+{A2}      22     114    [6, 9, 11, 13]                                                                            [2, 3]                                                                                    0              1              0              0              
154   2    A0      5{A1}           26     173    [5, 10, 13, 16, 17, 19]                                                                   [2, 3, 4]                                                                                 0              1              0              0              
155   2    A0      {A1}+2{A2}      19     80     [3, 7, 8, 10, 11]                                                                         [2, 3]                                                                                    0              1              0              0              
156   2    A0      {A1}+{A4}       14     42     [3, 5, 6, 7, 8]                                                                           [2, 3]                                                                                    0              1              0              0              
157   2    A0      {A1}+{D4}       14     49     [5, 6, 9, 10]                                                                             [2, 3, 4]                                                                                 0              1              0              0              
158   2    A0      {A2}+{A3}       16     57     [5, 7, 8, 9, 11]                                                                          [2, 3, 4]                                                                                 0              1              0              0              
159   2    A0      {A5}            11     26     [2, 3, 5, 7]                                                                              [2, 3, 4]                                                                                 0              1              0              0              
160   2    A0      {A5}            13     42     [5, 6, 8]                                                                                 [2, 3, 4]                                                                                 0              1              0              0              
161   2    A0      {D5}            9      18     [2, 3, 5, 6]                                                                              [2, 3, 4]                                                                                 0              1              0              0              
162   2    A0      2{A1}+{D4}      10     22     [2, 3, 4, 6, 7]                                                                           [2, 3, 4]                                                                                 0              1              0              0              
163   2    A0      2{A3}           9      14     [2, 3, 6]                                                                                 [2, 3, 4]                                                                                 0              1              0              0              
164   2    A0      3{A1}+{A3}      13     33     [1, 3, 5, 6, 7, 8]                                                                        [2, 3]                                                                                    0              1              0              0              
165   2    A0      3{A2}           11     18     [0, 4]                                                                                    [2]                                                                                       0              0              0              0              
166   2    A0      6{A1}           19     84     [4, 7, 12, 14]                                                                            [2, 3, 4]                                                                                 0              1              0              0              
167   2    A0      {A1}+{A2}+{A3}  11     21     [1, 3, 4, 6]                                                                              [2, 3]                                                                                    0              1              0              0              
168   2    A0      {A1}+{A5}       7      7      [0, 1, 2, 3]                                                                              [2]                                                                                       0              0              0              0              
169   2    A0      {A1}+{A5}       8      11     [1, 3, 4]                                                                                 [2, 3]                                                                                    0              1              0              0              
170   2    A0      {A1}+{D5}       6      6      [1, 3]                                                                                    [2]                                                                                       0              1              0              0              
171   2    A0      {A2}+{A4}       8      9      [1, 2, 3, 4]                                                                              [2, 3]                                                                                    0              1              0              0              
172   2    A0      {A6}            5      3      [0, 1, 2]                                                                                 [2, 3]                                                                                    0              0              0              0              
173   2    A0      {D6}            5      5      [1, 2, 3]                                                                                 [2, 3, 4]                                                                                 0              1              0              0              
174   2    A0      {E6}            3      1      [0, 1]                                                                                    [2]                                                                                       0              0              0              1              
175   2    A0      3{A1}+{D4}      7      9      [1, 3, 4]                                                                                 [2]                                                                                       0              1              0              0              
176   2    A0      7{A1}           14     42     [3, 9]                                                                                    [2]                                                                                       0              1              0              0              
177   2    A0      {A1}+2{A3}      6      4      [0, 1, 2, 3]                                                                              [2]                                                                                       0              0              0              0              
178   2    A0      {A1}+{D6}       3      1      [0, 1]                                                                                    [2]                                                                                       0              0              0              1              
179   2    A0      {A2}+{A5}       4      1      [0, 1]                                                                                    [2]                                                                                       0              0              0              1              
180   2    A0      {A7}            2      0      [0]                                                                                       []                                                                                        0              0              1              1              
181   2    A0      {E7}            1      0      [0]                                                                                       []                                                                                        1              1              1              1              
182   2    A1      A0              60     1290   [43]                                                                                      [2, 3, 4]                                                                                 0              1              1              0              
183   2    A1      {A1}            43     623    [26, 27, 30, 34]                                                                          [2, 3, 4]                                                                                 0              1              0              0              
184   2    A1      2{A1}           30     279    [15, 17, 18, 21, 23]                                                                      [2, 3, 4]                                                                                 0              1              0              0              
185   2    A1      2{A1}           34     377    [19, 23, 25]                                                                              [2, 3, 4]                                                                                 0              1              0              0              
186   2    A1      {A2}            27     223    [12, 15, 18, 19]                                                                          [2, 3, 4]                                                                                 0              1              0              0              
187   2    A1      3{A1}           21     126    [10, 12, 16]                                                                              [2, 3, 4]                                                                                 0              1              0              0              
188   2    A1      3{A1}           21     126    [10, 12, 16]                                                                              [2, 3, 4]                                                                                 0              1              0              0              
189   2    A1      3{A1}           23     156    [9, 12, 13, 16, 17]                                                                       [2, 3, 4]                                                                                 0              1              0              0              
190   2    A1      {A1}+{A2}       18     87     [7, 9, 10, 12, 13]                                                                        [2, 3, 4]                                                                                 0              1              0              0              
191   2    A1      {A3}            15     59     [4, 7, 9, 10]                                                                             [2, 3, 4]                                                                                 0              1              0              0              
192   2    A1      {A3}            19     105    [9, 12]                                                                                   [2, 3, 4]                                                                                 0              1              0              0              
193   2    A1      2{A1}+{A2}      13     41     [3, 4, 6, 7, 8]                                                                           [2, 3]                                                                                    0              1              0              0              
194   2    A1      2{A2}           10     21     [3, 6]                                                                                    [2, 3]                                                                                    0              1              0              0              
195   2    A1      4{A1}           16     70     [6, 7, 9, 11, 12]                                                                         [2, 3, 4]                                                                                 0              1              0              0              
196   2    A1      4{A1}           17     80     [4, 8, 11, 12]                                                                            [2, 3, 4]                                                                                 0              1              0              0              
197   2    A1      {A1}+{A3}       10     23     [3, 5, 6, 7]                                                                              [2, 3, 4]                                                                                 0              1              0              0              
198   2    A1      {A1}+{A3}       10     23     [3, 5, 6, 7]                                                                              [2, 3, 4]                                                                                 0              1              0              0              
199   2    A1      {A1}+{A3}       12     35     [3, 5, 6, 7, 8]                                                                           [2, 3, 4]                                                                                 0              1              0              0              
200   2    A1      {A4}            7      9      [0, 3]                                                                                    [2, 3]                                                                                    0              0              0              0              
201   2    A1      {D4}            9      20     [3, 4, 6]                                                                                 [2, 3, 4]                                                                                 0              1              0              0              
202   2    A1      2{A1}+{A3}      7      10     [1, 2, 4]                                                                                 [2]                                                                                       0              1              0              0              
203   2    A1      2{A1}+{A3}      8      13     [0, 3, 4]                                                                                 [2, 3]                                                                                    0              0              0              0              
204   2    A1      5{A1}           12     38     [3, 4, 7, 8, 9]                                                                           [2, 3, 4]                                                                                 0              1              0              0              
205   2    A1      {A1}+{D4}       6      8      [1, 3, 4]                                                                                 [2, 3, 4]                                                                                 0              1              0              0              
206   2    A1      {A2}+{A3}       6      6      [1, 3]                                                                                    [2, 3]                                                                                    0              1              0              0              
207   2    A1      {A5}            3      1      [0, 1]                                                                                    [2]                                                                                       0              0              0              1              
208   2    A1      {A5}            3      1      [0, 1]                                                                                    [2]                                                                                       0              0              0              1              
209   2    A1      {D5}            3      1      [0, 1]                                                                                    [2]                                                                                       0              0              0              1              
210   2    A1      2{A1}+{D4}      4      3      [0, 2]                                                                                    [2]                                                                                       0              0              0              1              
211   2    A1      2{A3}           3      1      [0, 1]                                                                                    [2]                                                                                       0              0              0              1              
212   2    A1      6{A1}           9      21     [2, 6]                                                                                    [2]                                                                                       0              1              0              0              
213   2    A1      {D6}            1      0      [0]                                                                                       []                                                                                        1              1              1              1              
214   2    2A1     A0              26     229    [17, 25]                                                                                  [2, 3, 4]                                                                                 0              1              0              0              
215   2    2A1     {A1}            17     92     [8, 9, 12, 16]                                                                            [2, 3, 4]                                                                                 0              1              0              0              
216   2    2A1     {A1}            25     204    [16, 24]                                                                                  [2, 3, 4]                                                                                 0              1              0              0              
217   2    2A1     2A1             20     130    [11, 13, 19]                                                                              [2, 3, 4]                                                                                 0              1              0              0              
218   2    2A1     2{A1}           12     46     [5, 7, 9, 11]                                                                             [2, 3, 4]                                                                                 0              1              0              0              
219   2    2A1     2{A1}           12     46     [5, 7, 9, 11]                                                                             [2, 3, 4]                                                                                 0              1              0              0              
220   2    2A1     2{A1}           16     76     [7, 8, 11, 15]                                                                            [2, 3, 4]                                                                                 0              1              0              0              
221   2    2A1     {A2}            9      24     [2, 5, 8]                                                                                 [2, 3, 4]                                                                                 0              1              0              0              
222   2    2A1     2A1+{A1}        13     51     [5, 6, 7, 8, 9, 12]                                                                       [2, 3, 4]                                                                                 0              1              0              0              
223   2    2A1     2A1+{A1}        19     111    [10, 12, 18]                                                                              [2, 3, 4]                                                                                 0              1              0              0              
224   2    2A1     3{A1}           9      27     [3, 6, 7, 8]                                                                              [2, 3, 4]                                                                                 0              1              0              0              
225   2    2A1     3{A1}           11     35     [4, 6, 8, 10]                                                                             [2, 3, 4]                                                                                 0              1              0              0              
226   2    2A1     3{A1}           11     35     [4, 6, 8, 10]                                                                             [2, 3, 4]                                                                                 0              1              0              0              
227   2    2A1     {A1}+{A2}       8      16     [1, 4, 7]                                                                                 [2, 3]                                                                                    0              1              0              0              
228   2    2A1     [A3]            11     39     [5, 6, 8, 10]                                                                             [2, 3, 4]                                                                                 0              1              0              0              
229   2    2A1     {A3}            5      8      [2, 3, 4]                                                                                 [2, 4]                                                                                    0              1              0              0              
230   2    2A1     {A3}            5      8      [2, 3, 4]                                                                                 [2, 4]                                                                                    0              1              0              0              
231   2    2A1     2A1+{A2}        7      14     [2, 3, 4, 6]                                                                              [2, 3, 4]                                                                                 0              1              0              0              
232   2    2A1     4A1             15     69     [6, 8, 10, 14]                                                                            [2, 3, 4]                                                                                 0              1              0              0              
233   2    2A1     2{A1}+2A1       9      24     [2, 4, 5, 6, 8]                                                                           [2, 3, 4]                                                                                 0              1              0              0              
234   2    2A1     2A1+2{A1}       12     39     [4, 5, 6, 7, 8, 11]                                                                       [2, 3, 4]                                                                                 0              1              0              0              
235   2    2A1     4{A1}           7      17     [2, 5, 6]                                                                                 [2, 4]                                                                                    0              1              0              0              
236   2    2A1     4{A1}           8      19     [2, 5, 6, 7]                                                                              [2, 3, 4]                                                                                 0              1              0              0              
237   2    2A1     {A1}+[A3]       8      21     [3, 5, 6, 7]                                                                              [2, 3, 4]                                                                                 0              1              0              0              
238   2    2A1     {A1}+[A3]       10     29     [4, 5, 7, 9]                                                                              [2, 3, 4]                                                                                 0              1              0              0              
239   2    2A1     {A1}+{A3}       4      4      [1, 2, 3]                                                                                 [2]                                                                                       0              1              0              0              
240   2    2A1     {A1}+{A3}       4      4      [1, 2, 3]                                                                                 [2]                                                                                       0              1              0              0              
241   2    2A1     [D4]            5      8      [2, 3, 4]                                                                                 [2, 4]                                                                                    0              1              0              0              
242   2    2A1     {D4}            3      3      [2]                                                                                       [2, 4]                                                                                    1              1              1              1              
243   2    2A1     2A1+[A3]        8      19     [2, 4, 5, 7]                                                                              [2, 3, 4]                                                                                 0              1              0              0              
244   2    2A1     2{A1}+[A3]      6      12     [2, 4, 5]                                                                                 [2, 4]                                                                                    0              1              0              0              
245   2    2A1     2A1+{A3}        4      5      [2, 3]                                                                                    [2, 4]                                                                                    0              1              0              0              
246   2    2A1     2{A1}+[A3]      7      14     [2, 4, 5, 6]                                                                              [2, 3, 4]                                                                                 0              1              0              0              
247   2    2A1     2A1+{A1}+{A2}   6      8      [1, 2, 3, 5]                                                                              [2, 3]                                                                                    0              1              0              0              
248   2    2A1     4A1+{A1}        10     29     [4, 5, 7, 9]                                                                              [2, 3, 4]                                                                                 0              1              0              0              
249   2    2A1     4A1+{A1}        14     55     [5, 7, 9, 13]                                                                             [2, 3, 4]                                                                                 0              1              0              0              
250   2    2A1     3{A1}+2A1       8      16     [1, 3, 4, 5, 7]                                                                           [2, 3]                                                                                    0              1              0              0              
251   2    2A1     5{A1}           6      11     [1, 4, 5]                                                                                 [2]                                                                                       0              1              0              0              
252   2    2A1     {A1}+[D4]       4      4      [1, 2, 3]                                                                                 [2]                                                                                       0              1              0              0              
253   2    2A1     {A1}+{D4}       2      1      [1]                                                                                       [2]                                                                                       1              1              1              1              
254   2    2A1     [D5]            3      3      [2]                                                                                       [2, 4]                                                                                    1              1              1              1              
255   2    2A1     2A1+[D4]        4      5      [2, 3]                                                                                    [2, 4]                                                                                    0              1              0              0              
256   2    2A1     2[A3]           5      8      [2, 3, 4]                                                                                 [2, 4]                                                                                    0              1              0              0              
257   2    2A1     2A1+{A1}+[A3]   7      12     [1, 3, 4, 6]                                                                              [2, 3]                                                                                    0              1              0              0              
258   2    2A1     3{A1}+[A3]      5      7      [1, 3, 4]                                                                                 [2]                                                                                       0              1              0              0              
259   2    2A1     2A1+{A1}+{A3}   3      2      [1, 2]                                                                                    [2]                                                                                       0              1              0              1              
260   2    2A1     2{A1}+4A1       7      14     [2, 4, 6]                                                                                 [2, 4]                                                                                    0              1              0              0              
261   2    2A1     4A1+2{A1}       9      20     [3, 4, 6, 8]                                                                              [2, 3, 4]                                                                                 0              1              0              0              
262   2    2A1     {A1}+[D5]       2      1      [1]                                                                                       [2]                                                                                       1              1              1              1              
263   2    2A1     2A1+{A1}+[D4]   3      2      [1, 2]                                                                                    [2]                                                                                       0              1              0              1              
264   2    2A1     3{A1}+4A1       6      8      [1, 3, 5]                                                                                 [2]                                                                                       0              1              0              0              
265   2    2A1     {A1}+2[A3]      4      4      [1, 2, 3]                                                                                 [2]                                                                                       0              1              0              0              
266   2    3A1     A0              8      28     [7]                                                                                       [2, 4]                                                                                    1              1              1              1              
267   2    3A1     {A1}            7      21     [6]                                                                                       [2, 4]                                                                                    1              1              1              1              
268   2    3A1     {A1}            7      21     [6]                                                                                       [2, 4]                                                                                    1              1              1              1              
269   2    3A1     2A1             6      15     [5]                                                                                       [2, 4]                                                                                    1              1              1              1              
270   2    3A1     2{A1}           6      15     [5]                                                                                       [2, 4]                                                                                    1              1              1              1              
271   2    3A1     2{A1}           6      15     [5]                                                                                       [2, 4]                                                                                    1              1              1              1              
272   2    3A1     [A2]            7      21     [6]                                                                                       [2, 4]                                                                                    1              1              1              1              
273   2    3A1     2A1+{A1}        5      10     [4]                                                                                       [2, 4]                                                                                    1              1              1              1              
274   2    3A1     2A1+{A1}        5      10     [4]                                                                                       [2, 4]                                                                                    1              1              1              1              
275   2    3A1     3{A1}           5      10     [4]                                                                                       [2, 4]                                                                                    1              1              1              1              
276   2    3A1     3{A1}           5      10     [4]                                                                                       [2, 4]                                                                                    1              1              1              1              
277   2    3A1     {A1}+[A2]       6      15     [5]                                                                                       [2, 4]                                                                                    1              1              1              1              
278   2    3A1     [A3]            5      10     [4]                                                                                       [2, 4]                                                                                    1              1              1              1              
279   2    3A1     2A1+[A2]        5      10     [4]                                                                                       [2, 4]                                                                                    1              1              1              1              
280   2    3A1     2{A1}+[A2]      5      10     [4]                                                                                       [2, 4]                                                                                    1              1              1              1              
281   2    3A1     2A2             4      6      [3]                                                                                       [2, 4]                                                                                    1              1              1              1              
282   2    3A1     4A1             5      10     [4]                                                                                       [2, 4]                                                                                    1              1              1              1              
283   2    3A1     2A1+2{A1}       4      6      [3]                                                                                       [2]                                                                                       1              1              1              1              
284   2    3A1     4{A1}           4      6      [3]                                                                                       [2]                                                                                       1              1              1              1              
285   2    3A1     {A1}+[A3]       4      6      [3]                                                                                       [2, 4]                                                                                    1              1              1              1              
286   2    3A1     {A1}+[A3]       4      6      [3]                                                                                       [2, 4]                                                                                    1              1              1              1              
287   2    3A1     2{A1}+[A3]      3      3      [2]                                                                                       [2]                                                                                       1              1              1              1              
288   2    3A1     2A1+{A1}+[A2]   4      6      [3]                                                                                       [2]                                                                                       1              1              1              1              
289   2    3A1     3{A1}+[A2]      4      6      [3]                                                                                       [2]                                                                                       1              1              1              1              
290   2    3A1     4A1+{A1}        4      6      [3]                                                                                       [2, 4]                                                                                    1              1              1              1              
291   2    3A1     4A1+{A1}        4      6      [3]                                                                                       [2, 4]                                                                                    1              1              1              1              
292   2    3A1     {A1}+2A2        3      3      [2]                                                                                       [2]                                                                                       1              1              1              1              
293   2    3A1     [A2]+[A3]       4      6      [3]                                                                                       [2, 4]                                                                                    1              1              1              1              
294   2    3A1     [A5]            3      3      [2]                                                                                       [2, 4]                                                                                    1              1              1              1              
295   2    3A1     2A3             3      3      [2]                                                                                       [2, 4]                                                                                    1              1              1              1              
296   2    3A1     [A2]+2A2        3      3      [2]                                                                                       [2]                                                                                       1              1              1              1              
297   2    3A1     4A1+2{A1}       3      3      [2]                                                                                       [2]                                                                                       1              1              1              1              
298   2    3A1     {A1}+[A2]+[A3]  3      3      [2]                                                                                       [2]                                                                                       1              1              1              1              
299   2    3A1     {A1}+[A5]       2      1      [1]                                                                                       [2]                                                                                       1              1              1              1              
300   2    3A1     {A1}+2A3        2      1      [1]                                                                                       [2]                                                                                       1              1              1              1              
301   2    3A1     [A2]+[A5]       2      1      [1]                                                                                       [2]                                                                                       1              1              1              1              
302   2    3A1'    A0              24     180    [15]                                                                                      [2, 3, 4]                                                                                 0              1              1              0              
303   2    3A1'    {A1}            15     61     [6, 7, 10]                                                                                [2, 3, 4]                                                                                 0              1              0              0              
304   2    3A1'    2A1             18     93     [9, 11]                                                                                   [2, 3, 4]                                                                                 0              1              0              0              
305   2    3A1'    2{A1}           10     25     [3, 5, 7]                                                                                 [2, 3, 4]                                                                                 0              1              0              0              
306   2    3A1'    {A2}            7      9      [0, 3]                                                                                    [2, 3]                                                                                    0              0              0              0              
307   2    3A1'    2A1+{A1}        11     28     [3, 4, 5, 6, 7]                                                                           [2, 3, 4]                                                                                 0              1              0              0              
308   2    3A1'    3{A1}           7      12     [1, 4, 5]                                                                                 [2, 3, 4]                                                                                 0              1              0              0              
309   2    3A1'    [A3]            9      20     [3, 4, 6]                                                                                 [2, 3, 4]                                                                                 0              1              0              0              
310   2    3A1'    {A3}            3      1      [0, 1]                                                                                    [2]                                                                                       0              0              0              1              
311   2    3A1'    2A1+{A2}        5      3      [0, 1, 2]                                                                                 [2, 3]                                                                                    0              0              0              0              
312   2    3A1'    2A2             12     36     [5, 7]                                                                                    [2, 3, 4]                                                                                 0              1              0              0              
313   2    3A1'    4A1             13     42     [4, 6, 8]                                                                                 [2, 3, 4]                                                                                 0              1              0              0              
314   2    3A1'    2A1+2{A1}       7      9      [0, 2, 3, 4]                                                                              [2, 3]                                                                                    0              0              0              0              
315   2    3A1'    4{A1}           5      6      [0, 3]                                                                                    [2]                                                                                       0              0              0              1              
316   2    3A1'    {A1}+[A3]       6      8      [1, 3, 4]                                                                                 [2, 3, 4]                                                                                 0              1              0              0              
317   2    3A1'    [D4]            3      1      [0, 1]                                                                                    [2]                                                                                       0              0              0              1              
318   2    3A1'    {D4}            1      0      [0]                                                                                       []                                                                                        1              1              1              1              
319   2    3A1'    2A1+[A3]        6      6      [0, 2, 3]                                                                                 [2, 3]                                                                                    0              0              0              0              
320   2    3A1'    2{A1}+[A3]      4      3      [0, 2]                                                                                    [2]                                                                                       0              0              0              1              
321   2    3A1'    2A1+{A3}        2      0      [0]                                                                                       []                                                                                        0              0              1              1              
322   2    3A1'    4A1+{A1}        8      12     [2, 3, 5]                                                                                 [2, 3, 4]                                                                                 0              1              0              0              
323   2    3A1'    {A1}+2A2        7      8      [1, 2, 3]                                                                                 [2, 3]                                                                                    0              1              0              0              
324   2    3A1'    [A5]            5      5      [1, 2, 3]                                                                                 [2, 3, 4]                                                                                 0              1              0              0              
325   2    3A1'    [D5]            1      0      [0]                                                                                       []                                                                                        1              1              1              1              
326   2    3A1'    2A1+[D4]        2      0      [0]                                                                                       []                                                                                        0              0              1              1              
327   2    3A1'    2A3             7      9      [2, 4]                                                                                    [2, 3, 4]                                                                                 0              1              0              0              
328   2    3A1'    2[A3]           3      1      [0, 1]                                                                                    [2]                                                                                       0              0              0              1              
329   2    3A1'    2A2+{A2}        3      0      [0]                                                                                       []                                                                                        0              0              1              1              
330   2    3A1'    4A1+2{A1}       5      3      [0, 2]                                                                                    [2]                                                                                       0              0              0              1              
331   2    3A1'    {A1}+[A5]       3      1      [0, 1]                                                                                    [2]                                                                                       0              0              0              1              
332   2    3A1'    [E6]            1      0      [0]                                                                                       []                                                                                        1              1              1              1              
333   2    3A1'    {A1}+2A3        4      1      [0, 1]                                                                                    [2]                                                                                       0              0              0              1              
334   2    3A1'    [A7]            2      0      [0]                                                                                       []                                                                                        0              0              1              1              
335   2    4A1     A0              6      15     [5]                                                                                       [2, 4]                                                                                    1              1              1              1              
336   2    4A1     {A1}            5      10     [4]                                                                                       [2, 4]                                                                                    1              1              1              1              
337   2    4A1     2A1             4      6      [3]                                                                                       [2, 4]                                                                                    1              1              1              1              
338   2    4A1     2{A1}           4      6      [3]                                                                                       [2, 4]                                                                                    1              1              1              1              
339   2    4A1     [A2]            5      10     [4]                                                                                       [2, 4]                                                                                    1              1              1              1              
340   2    4A1     2A1+{A1}        3      3      [2]                                                                                       [2]                                                                                       1              1              1              1              
341   2    4A1     3{A1}           3      3      [2]                                                                                       [2]                                                                                       1              1              1              1              
342   2    4A1     {A1}+[A2]       4      6      [3]                                                                                       [2, 4]                                                                                    1              1              1              1              
343   2    4A1     [A3]            3      3      [2]                                                                                       [2, 4]                                                                                    1              1              1              1              
344   2    4A1     2A1+[A2]        3      3      [2]                                                                                       [2]                                                                                       1              1              1              1              
345   2    4A1     2{A1}+[A2]      3      3      [2]                                                                                       [2]                                                                                       1              1              1              1              
346   2    4A1     2[A2]           4      6      [3]                                                                                       [2, 4]                                                                                    1              1              1              1              
347   2    4A1     2A2             2      1      [1]                                                                                       [2]                                                                                       1              1              1              1              
348   2    4A1     4A1             3      3      [2]                                                                                       [2, 4]                                                                                    1              1              1              1              
349   2    4A1     {A1}+[A3]       2      1      [1]                                                                                       [2]                                                                                       1              1              1              1              
350   2    4A1     [A4]            3      3      [2]                                                                                       [2, 4]                                                                                    1              1              1              1              
351   2    4A1     4A1+{A1}        2      1      [1]                                                                                       [2]                                                                                       1              1              1              1              
352   2    4A1     {A1}+2[A2]      3      3      [2]                                                                                       [2]                                                                                       1              1              1              1              
353   2    4A1     {A1}+[A4]       2      1      [1]                                                                                       [2]                                                                                       1              1              1              1              
354   2    4A1     [A2]+[A3]       2      1      [1]                                                                                       [2]                                                                                       1              1              1              1              
355   2    4A1     [A5]            1      0      [0]                                                                                       []                                                                                        1              1              1              1              
356   2    4A1     2A3             1      0      [0]                                                                                       []                                                                                        1              1              1              1              
357   2    4A1     3[A2]           3      3      [2]                                                                                       [2]                                                                                       1              1              1              1              
358   2    4A1     [A2]+[A4]       2      1      [1]                                                                                       [2]                                                                                       1              1              1              1              
359   2    4A1     [A6]            1      0      [0]                                                                                       []                                                                                        1              1              1              1              
360   2    D4      A0              6      15     [5]                                                                                       [2, 4]                                                                                    1              1              1              1              
361   2    D4      {A1}            5      10     [4]                                                                                       [2, 4]                                                                                    1              1              1              1              
362   2    D4      2A1             4      6      [3]                                                                                       [2, 4]                                                                                    1              1              1              1              
363   2    D4      2{A1}           4      6      [3]                                                                                       [2, 4]                                                                                    1              1              1              1              
364   2    D4      2A1+{A1}        3      3      [2]                                                                                       [2]                                                                                       1              1              1              1              
365   2    D4      3{A1}           3      3      [2]                                                                                       [2]                                                                                       1              1              1              1              
366   2    D4      [A3]            3      3      [2]                                                                                       [2, 4]                                                                                    1              1              1              1              
367   2    D4      2A2             2      1      [1]                                                                                       [2]                                                                                       1              1              1              1              
368   2    D4      4A1             3      3      [2]                                                                                       [2, 4]                                                                                    1              1              1              1              
369   2    D4      {A1}+[A3]       2      1      [1]                                                                                       [2]                                                                                       1              1              1              1              
370   2    D4      4A1+{A1}        2      1      [1]                                                                                       [2]                                                                                       1              1              1              1              
371   2    D4      [A5]            1      0      [0]                                                                                       []                                                                                        1              1              1              1              
372   2    D4      2A3             1      0      [0]                                                                                       []                                                                                        1              1              1              1              
373   2    A1+D4   A0              4      6      [3]                                                                                       [2, 4]                                                                                    1              1              1              1              
374   2    A1+D4   {A1}            3      3      [2]                                                                                       [2, 4]                                                                                    1              1              1              1              
375   2    A1+D4   2A1             2      1      [1]                                                                                       [2]                                                                                       1              1              1              1              
376   2    A1+D4   2{A1}           2      1      [1]                                                                                       [2]                                                                                       1              1              1              1              
377   2    A1+D4   [A2]            3      3      [2]                                                                                       [2, 4]                                                                                    1              1              1              1              
378   2    A1+D4   {A1}+[A2]       2      1      [1]                                                                                       [2]                                                                                       1              1              1              1              
379   2    A1+D4   [A3]            1      0      [0]                                                                                       []                                                                                        1              1              1              1              
380   2    A1+D4   2[A2]           2      1      [1]                                                                                       [2]                                                                                       1              1              1              1              
381   2    A1+D4   4A1             1      0      [0]                                                                                       []                                                                                        1              1              1              1              
382   2    A1+D4   [A4]            1      0      [0]                                                                                       []                                                                                        1              1              1              1              
383   2    D6      A0              2      1      [1]                                                                                       [4]                                                                                       1              1              1              1              
384   2    D6      {A1}            1      0      [0]                                                                                       []                                                                                        1              1              1              1              
385   2    D6      [A2]            1      0      [0]                                                                                       []                                                                                        1              1              1              1              
386   2    E7      A0              0      0      []                                                                                        []                                                                                        1              1              0              1              
387   1    A0      A0              2160   2262600[2095]                                                                                    [2, 3, 4, 5, 6, 7, 8]                                                                     0              1              1              0              
388   1    A0      {A1}            1458   1021833[1393, 1394, 1409]                                                                        [2, 3, 4, 5, 6, 7, 8]                                                                     0              1              0              0              
389   1    A0      2{A1}           981    457266 [916, 917, 918, 932, 933, 944, 948]                                                       [2, 3, 4, 5, 6, 7, 8]                                                                     0              1              0              0              
390   1    A0      {A2}            828    324378 [765, 779, 780, 795]                                                                      [2, 3, 4, 5, 6, 7, 8]                                                                     0              1              0              0              
391   1    A0      3{A1}           657    201960 [594, 595, 608, 609, 610, 620, 621, 624, 629, 632]                                        [2, 3, 4, 5, 6, 7, 8]                                                                     0              1              0              0              
392   1    A0      {A1}+{A2}       555    143341 [492, 493, 507, 508, 518, 519, 522, 523, 530]                                             [2, 3, 4, 5, 6, 7, 8]                                                                     0              1              0              0              
393   1    A0      {A3}            423    82501  [376, 387, 390, 391, 402, 406]                                                            [2, 3, 4, 5, 6, 7, 8]                                                                     0              1              0              0              
394   1    A0      2{A1}+{A2}      369    61940  [308, 322, 323, 333, 334, 336, 337, 338, 341, 342, 344, 345, 350, 352]                    [2, 3, 4, 5, 6, 7, 8]                                                                     0              1              0              0              
395   1    A0      2{A2}           313    44256  [252, 267, 277, 278, 282, 288, 289, 296]                                                  [2, 3, 4, 5, 6, 7, 8]                                                                     0              1              0              0              
396   1    A0      4{A1}           438    87927  [377, 391, 403, 405, 410, 421]                                                            [2, 3, 4, 5, 6, 7, 8]                                                                     0              1              0              0              
397   1    A0      4{A1}           438    87931  [376, 377, 391, 392, 401, 402, 403, 410, 411, 413, 419]                                   [2, 3, 4, 5, 6, 7, 8]                                                                     0              1              0              0              
398   1    A0      {A1}+{A3}       282    35759  [235, 236, 246, 247, 250, 251, 255, 257, 258, 261, 262, 265, 266, 269]                    [2, 3, 4, 5, 6, 7, 8]                                                                     0              1              0              0              
399   1    A0      {A4}            201    17870  [166, 170, 177, 180, 181, 185, 188]                                                       [2, 3, 4, 5, 6, 7, 8]                                                                     0              1              0              0              
400   1    A0      {D4}            171    12831  [140, 144, 151, 154, 162]                                                                 [2, 3, 4, 5, 6, 7, 8]                                                                     0              1              0              0              
401   1    A0      2{A1}+{A3}      186    15017  [141, 152, 155, 159, 160, 163, 167, 169, 170, 177]                                        [2, 3, 4, 5, 6, 7, 8]                                                                     0              1              0              0              
402   1    A0      2{A1}+{A3}      186    15020  [141, 151, 152, 155, 156, 160, 162, 163, 165, 166, 167, 168, 169, 170, 171, 173, 175, 176][2, 3, 4, 5, 6, 7, 8]                                                                     0              1              0              0              
403   1    A0      3{A1}+{A2}      244    26262  [184, 198, 199, 209, 210, 213, 217, 218, 219, 220, 221, 225, 226, 227, 231]               [2, 3, 4, 5, 6, 7, 8]                                                                     0              1              0              0              
404   1    A0      5{A1}           291    37763  [230, 231, 245, 246, 256, 257, 263, 264, 265, 266, 272, 274, 278]                         [2, 3, 4, 5, 6, 7, 8]                                                                     0              1              0              0              
405   1    A0      {A1}+2{A2}      205    18324  [160, 170, 171, 174, 175, 178, 179, 181, 182, 186, 187, 188, 189]                         [2, 3, 4, 5, 6, 7]                                                                        0              1              0              0              
406   1    A0      {A1}+{A4}       132    7392   [98, 101, 102, 106, 108, 109, 112, 113, 114, 116, 117, 119, 120, 122]                     [2, 3, 4, 5, 6, 7, 8]                                                                     0              1              0              0              
407   1    A0      {A1}+{D4}       114    5482   [84, 87, 88, 91, 94, 95, 96, 99, 101, 105, 107]                                           [2, 3, 4, 5, 6, 7, 8]                                                                     0              1              0              0              
408   1    A0      {A2}+{A3}       158    10729  [113, 124, 128, 131, 132, 134, 135, 139, 140, 141, 142, 143, 145, 147, 149]               [2, 3, 4, 5, 6, 7, 8]                                                                     0              1              0              0              
409   1    A0      {A5}            91     3431   [68, 72, 75, 76, 78, 79, 83]                                                              [2, 3, 4, 5, 6, 7, 8]                                                                     0              1              0              0              
410   1    A0      {D5}            66     1755   [47, 48, 51, 54, 57, 58, 61]                                                              [2, 3, 4, 5, 6, 7, 8]                                                                     0              1              0              0              
411   1    A0      2{A1}+2{A2}     134    7463   [90, 100, 101, 108, 109, 111, 112, 116, 117, 118, 119, 121, 122]                          [2, 3, 4, 5, 6, 7]                                                                        0              1              0              0              
412   1    A0      2{A1}+{A4}      86     2960   [53, 57, 61, 63, 64, 67, 69, 70, 71, 72, 73, 74, 75, 77, 79]                              [2, 3, 4, 5, 6, 7, 8]                                                                     0              1              0              0              
413   1    A0      2{A1}+{D4}      75     2243   [46, 50, 53, 56, 57, 58, 60, 61, 63, 65, 66, 68, 70]                                      [2, 3, 4, 5, 6, 7, 8]                                                                     0              1              0              0              
414   1    A0      2{A3}           79     2481   [50, 54, 57, 61, 64, 65, 68, 70, 74]                                                      [2, 3, 4, 5, 6, 7, 8]                                                                     0              1              0              0              
415   1    A0      2{A3}           79     2483   [46, 54, 57, 62, 63, 64, 65, 68, 69, 70, 73]                                              [2, 3, 4, 5, 6, 7, 8]                                                                     0              1              0              0              
416   1    A0      3{A1}+{A3}      122    6157   [78, 88, 89, 92, 96, 97, 99, 100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 115]  [2, 3, 4, 5, 6, 7, 8]                                                                     0              1              0              0              
417   1    A0      3{A2}           111    5007   [78, 82, 86, 88, 93, 96]                                                                  [2, 3, 4, 5, 6]                                                                           0              1              0              0              
418   1    A0      4{A1}+{A2}      161    10974  [102, 117, 127, 128, 135, 136, 138, 143, 144, 148, 152]                                   [2, 3, 4, 5, 6, 7, 8]                                                                     0              1              0              0              
419   1    A0      6{A1}           193    16020  [134, 148, 159, 160, 167, 168, 174, 176, 180, 184]                                        [2, 3, 4, 5, 6, 7, 8]                                                                     0              1              0              0              
420   1    A0      {A1}+{A2}+{A3}  102    4222   [69, 73, 77, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93]                              [2, 3, 4, 5, 6, 7]                                                                        0              1              0              0              
421   1    A0      {A1}+{A5}       58     1289   [36, 40, 41, 43, 44, 47, 48, 50]                                                          [2, 3, 4, 5, 6]                                                                           0              1              0              0              
422   1    A0      {A1}+{A5}       58     1291   [36, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51]                                      [2, 3, 4, 5, 6, 7]                                                                        0              1              0              0              
423   1    A0      {A1}+{D5}       43     691    [25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39]                                      [2, 3, 4, 5, 6, 7, 8]                                                                     0              1              0              0              
424   1    A0      {A2}+{A4}       72     2028   [43, 47, 50, 54, 55, 57, 58, 60, 61, 62, 63, 64]                                          [2, 3, 4, 5, 6, 7]                                                                        0              1              0              0              
425   1    A0      {A2}+{D4}       64     1611   [39, 42, 46, 47, 49, 50, 54, 55, 57, 59]                                                  [2, 3, 4, 5, 6, 7, 8]                                                                     0              1              0              0              
426   1    A0      {A6}            39     563    [24, 25, 28, 29, 30, 31, 32, 34]                                                          [2, 3, 4, 5, 6, 7, 8]                                                                     0              1              0              0              
427   1    A0      {D6}            26     243    [15, 16, 17, 19, 20, 21, 23]                                                              [2, 3, 4, 5, 6, 7, 8]                                                                     0              1              0              0              
428   1    A0      {E6}            19     117    [10, 12, 15]                                                                              [2, 3, 4, 5, 6]                                                                           0              1              0              0              
429   1    A0      2{A1}+{A2}+{A3} 66     1635   [34, 42, 44, 45, 49, 50, 51, 52, 54, 56, 57, 58, 59]                                      [2, 3, 4, 5, 6, 7]                                                                        0              1              0              0              
430   1    A0      2{A1}+{A5}      37     471    [16, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31]                                              [2, 3, 4, 5, 6]                                                                           0              1              0              0              
431   1    A0      2{A1}+{D5}      28     265    [12, 15, 17, 18, 20, 22, 23, 25]                                                          [2, 3, 4, 5, 6, 7, 8]                                                                     0              1              0              0              
432   1    A0      3{A1}+{D4}      49     885    [25, 28, 31, 33, 35, 36, 37, 41, 42, 44]                                                  [2, 3, 4, 5, 6]                                                                           0              1              0              0              
433   1    A0      4{A1}+{A3}      80     2482   [37, 48, 55, 56, 58, 63, 64, 66, 68, 69, 71, 75]                                          [2, 3, 4, 5, 6, 7, 8]                                                                     0              1              0              0              
434   1    A0      7{A1}           128    6720   [70, 95, 103, 104, 115, 119]                                                              [2, 3, 4, 5, 6]                                                                           0              1              0              0              
435   1    A0      {A1}+2{A3}      50     901    [26, 29, 34, 35, 36, 38, 39, 40, 41, 43, 45]                                              [2, 3, 4, 5, 6]                                                                           0              1              0              0              
436   1    A0      {A1}+3{A2}      72     1952   [40, 47, 48, 51, 55, 57, 58, 60, 61]                                                      [2, 3, 4, 5, 6]                                                                           0              1              0              0              
437   1    A0      {A1}+{A2}+{A4}  46     750    [22, 25, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40]                                          [2, 3, 4, 5, 6, 7]                                                                        0              1              0              0              
438   1    A0      {A1}+{A6}       24     184    [10, 11, 13, 15, 16, 17, 18, 20]                                                          [2, 3, 4, 5, 6, 7]                                                                        0              1              0              0              
439   1    A0      {A1}+{D6}       16     78     [6, 7, 8, 9, 10, 12, 13]                                                                  [2, 3, 4, 5, 6]                                                                           0              1              0              0              
440   1    A0      {A1}+{E6}       12     39     [4, 5, 6, 7, 8, 9]                                                                        [2, 3, 4, 5, 6]                                                                           0              1              0              0              
441   1    A0      {A2}+{A5}       30     291    [13, 14, 16, 19, 21, 23, 24]                                                              [2, 3, 4, 5, 6]                                                                           0              1              0              0              
442   1    A0      {A2}+{D5}       23     169    [10, 12, 13, 14, 15, 16, 17, 18, 19]                                                      [2, 3, 4, 5, 6]                                                                           0              1              0              0              
443   1    A0      {A3}+{A4}       35     415    [14, 19, 21, 22, 24, 25, 26, 27, 28, 29, 30]                                              [2, 3, 4, 5, 6, 7]                                                                        0              1              0              0              
444   1    A0      {A3}+{D4}       32     357    [16, 18, 19, 21, 22, 23, 26, 27, 29]                                                      [2, 3, 4, 5, 6, 7, 8]                                                                     0              1              0              0              
445   1    A0      {A7}            15     63     [6, 7, 8, 9, 10, 11]                                                                      [2, 3, 4, 5]                                                                              0              1              0              0              
446   1    A0      {A7}            15     64     [6, 7, 8, 9, 10, 11]                                                                      [2, 3, 4, 5, 6, 7]                                                                        0              1              0              0              
447   1    A0      {D7}            10     30     [4, 5, 6, 7, 8]                                                                           [2, 3, 4, 5, 6, 7, 8]                                                                     0              1              0              0              
448   1    A0      {E7}            5      5      [1, 2, 3]                                                                                 [2, 3, 4]                                                                                 0              1              0              0              
449   1    A0      2{A1}+2{A3}     32     323    [9, 17, 18, 21, 23, 24, 27]                                                               [2, 3, 4]                                                                                 0              1              0              0              
450   1    A0      2{A1}+{D6}      10     24     [2, 3, 4, 6, 7]                                                                           [2, 3, 4]                                                                                 0              1              0              0              
451   1    A0      2{A4}           15     55     [2, 5, 7, 10]                                                                             [2, 3, 4]                                                                                 0              1              0              0              
452   1    A0      2{D4}           13     48     [5, 6, 10]                                                                                [2, 3, 4]                                                                                 0              1              0              0              
453   1    A0      4{A1}+{D4}      32     339    [9, 17, 19, 24, 27]                                                                       [2, 3, 4]                                                                                 0              1              0              0              
454   1    A0      4{A2}           38     459    [15, 25, 27]                                                                              [2, 3, 4]                                                                                 0              1              0              0              
455   1    A0      8{A1}           85     2786   [28, 61, 76]                                                                              [2, 3, 4]                                                                                 0              1              0              0              
456   1    A0      {A1}+{A2}+{A5}  19     96     [4, 6, 7, 9, 10, 11, 12, 13]                                                              [2, 3, 4]                                                                                 0              1              0              0              
457   1    A0      {A1}+{A7}       9      16     [1, 3, 4, 5]                                                                              [2, 3]                                                                                    0              1              0              0              
458   1    A0      {A1}+{E7}       3      1      [0, 1]                                                                                    [2]                                                                                       0              0              0              1              
459   1    A0      {A2}+{E6}       6      6      [1, 3]                                                                                    [2]                                                                                       0              1              0              0              
460   1    A0      {A3}+{D5}       11     29     [3, 4, 7, 8]                                                                              [2, 3, 4]                                                                                 0              1              0              0              
461   1    A0      {A8}            5      3      [0, 1, 2]                                                                                 [2, 3]                                                                                    0              0              0              0              
462   1    A0      {D8}            3      1      [0, 1]                                                                                    [2]                                                                                       0              0              0              1              
463   1    A0      {E8}            1      0      [0]                                                                                       []                                                                                        1              1              1              1              
464   1    A1      A0              756    273294 [723]                                                                                     [2, 3, 4, 5, 6, 7, 8]                                                                     0              1              1              0              
465   1    A1      {A1}            504    119844 [471, 472, 479, 487]                                                                      [2, 3, 4, 5, 6, 7, 8]                                                                     0              1              0              0              
466   1    A1      2{A1}           333    51374  [300, 301, 302, 308, 309, 314, 316, 320]                                                  [2, 3, 4, 5, 6, 7, 8]                                                                     0              1              0              0              
467   1    A1      {A2}            282    36621  [251, 257, 258, 265, 266]                                                                 [2, 3, 4, 5, 6, 7, 8]                                                                     0              1              0              0              
468   1    A1      3{A1}           219    21687  [188, 196, 200, 202, 210]                                                                 [2, 3, 4, 5, 6, 7, 8]                                                                     0              1              0              0              
469   1    A1      3{A1}           219    21693  [188, 189, 194, 195, 196, 200, 201, 202, 206, 209]                                        [2, 3, 4, 5, 6, 7, 8]                                                                     0              1              0              0              
470   1    A1      {A1}+{A2}       183    14993  [152, 153, 159, 160, 164, 165, 166, 167, 170, 171, 174]                                   [2, 3, 4, 5, 6, 7, 8]                                                                     0              1              0              0              
471   1    A1      {A3}            141    8794   [118, 123, 124, 125, 126, 129, 130, 132]                                                  [2, 3, 4, 5, 6, 7, 8]                                                                     0              1              0              0              
472   1    A1      2{A1}+{A2}      119    6115   [90, 96, 97, 101, 102, 103, 104, 106, 107, 109, 110, 112]                                 [2, 3, 4, 5, 6, 7, 8]                                                                     0              1              0              0              
473   1    A1      2{A2}           97     3976   [68, 75, 79, 80, 82, 84, 85, 89]                                                          [2, 3, 4, 5, 6, 7]                                                                        0              1              0              0              
474   1    A1      4{A1}           144    9093   [114, 121, 122, 125, 126, 127, 131, 134, 135, 137]                                        [2, 3, 4, 5, 6, 7, 8]                                                                     0              1              0              0              
475   1    A1      4{A1}           144    9096   [115, 121, 127, 134, 135]                                                                 [2, 3, 4, 5, 6, 7, 8]                                                                     0              1              0              0              
476   1    A1      {A1}+{A3}       90     3423   [68, 72, 73, 75, 77, 79, 81, 82, 85]                                                      [2, 3, 4, 5, 6, 7, 8]                                                                     0              1              0              0              
477   1    A1      {A1}+{A3}       90     3427   [67, 68, 73, 74, 75, 77, 78, 79, 80, 81, 83, 84]                                          [2, 3, 4, 5, 6, 7, 8]                                                                     0              1              0              0              
478   1    A1      {A4}            63     1627   [46, 48, 51, 52, 53, 55, 56]                                                              [2, 3, 4, 5, 6, 7, 8]                                                                     0              1              0              0              
479   1    A1      {D4}            57     1344   [42, 47, 48, 52]                                                                          [2, 3, 4, 5, 6, 7, 8]                                                                     0              1              0              0              
480   1    A1      2{A1}+{A3}      58     1345   [37, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54]                                  [2, 3, 4, 5, 6, 7, 8]                                                                     0              1              0              0              
481   1    A1      2{A1}+{A3}      58     1347   [37, 42, 43, 47, 49, 50, 51, 52, 53]                                                      [2, 3, 4, 5, 6, 7, 8]                                                                     0              1              0              0              
482   1    A1      3{A1}+{A2}      78     2514   [56, 57, 61, 62, 63, 66, 67, 69, 71, 73]                                                  [2, 3, 4, 5, 6, 7, 8]                                                                     0              1              0              0              
483   1    A1      5{A1}           95     3809   [66, 73, 74, 78, 79, 82, 85, 86, 88, 90]                                                  [2, 3, 4, 5, 6, 7, 8]                                                                     0              1              0              0              
484   1    A1      {A1}+2{A2}      63     1591   [42, 46, 47, 48, 49, 51, 52, 54, 55, 56, 57]                                              [2, 3, 4, 5, 6, 7]                                                                        0              1              0              0              
485   1    A1      {A1}+{A4}       40     612    [24, 25, 26, 29, 30, 31, 32, 34, 36]                                                      [2, 3, 4, 5, 6, 7, 8]                                                                     0              1              0              0              
486   1    A1      {A1}+{D4}       36     500    [22, 25, 26, 27, 29, 30, 31, 33]                                                          [2, 3, 4, 5, 6, 7, 8]                                                                     0              1              0              0              
487   1    A1      {A2}+{A3}       46     811    [25, 30, 32, 34, 35, 37, 38, 39, 40, 41]                                                  [2, 3, 4, 5, 6, 7]                                                                        0              1              0              0              
488   1    A1      {A5}            25     216    [14, 16, 18, 21]                                                                          [2, 3, 4, 5, 6]                                                                           0              1              0              0              
489   1    A1      {A5}            25     218    [14, 16, 18, 19, 20]                                                                      [2, 3, 4, 5, 6, 7]                                                                        0              1              0              0              
490   1    A1      {D5}            20     142    [11, 13, 14, 15, 16, 17]                                                                  [2, 3, 4, 5, 6, 7, 8]                                                                     0              1              0              0              
491   1    A1      2{A1}+{D4}      23     187    [10, 13, 14, 15, 17, 18, 19, 20]                                                          [2, 3, 4, 5, 6]                                                                           0              1              0              0              
492   1    A1      2{A3}           21     142    [8, 11, 14, 15, 16, 17]                                                                   [2, 3, 4, 5, 6]                                                                           0              1              0              0              
493   1    A1      3{A1}+{A3}      38     542    [22, 23, 24, 27, 28, 29, 30, 32, 33, 35]                                                  [2, 3, 4, 5, 6, 7, 8]                                                                     0              1              0              0              
494   1    A1      3{A2}           33     390    [18, 20, 22, 26, 27]                                                                      [2, 3, 4, 5, 6]                                                                           0              1              0              0              
495   1    A1      6{A1}           63     1599   [42, 47, 48, 54, 56, 58]                                                                  [2, 3, 4, 5, 6]                                                                           0              1              0              0              
496   1    A1      {A1}+{A2}+{A3}  30     319    [15, 17, 19, 20, 21, 22, 23, 24, 25, 26]                                                  [2, 3, 4, 5, 6]                                                                           0              1              0              0              
497   1    A1      {A1}+{A5}       16     79     [6, 7, 8, 9, 10, 11, 12, 13]                                                              [2, 3, 4, 5, 6]                                                                           0              1              0              0              
498   1    A1      {A1}+{A5}       16     80     [6, 8, 9, 11, 12]                                                                         [2, 3, 4, 5, 6]                                                                           0              1              0              0              
499   1    A1      {A1}+{D5}       13     55     [5, 8, 9, 10, 11]                                                                         [2, 3, 4, 5, 6, 7, 8]                                                                     0              1              0              0              
500   1    A1      {A2}+{A4}       20     130    [7, 10, 12, 13, 14, 15, 17]                                                               [2, 3, 4, 5, 6, 7]                                                                        0              1              0              0              
501   1    A1      {A6}            9      20     [2, 4, 5, 6]                                                                              [2, 3, 4, 6]                                                                              0              1              0              0              
502   1    A1      {D6}            6      8      [1, 3, 4]                                                                                 [2, 3, 4]                                                                                 0              1              0              0              
503   1    A1      {E6}            5      6      [2, 3]                                                                                    [2, 4, 6]                                                                                 0              1              0              0              
504   1    A1      3{A1}+{D4}      15     72     [6, 7, 11, 12]                                                                            [2, 3, 4]                                                                                 0              1              0              0              
505   1    A1      7{A1}           42     672    [27, 37]                                                                                  [2, 3, 4]                                                                                 0              1              0              0              
506   1    A1      {A1}+2{A3}      14     57     [5, 7, 10, 11]                                                                            [2, 3, 4]                                                                                 0              1              0              0              
507   1    A1      {A1}+{D6}       4      3      [0, 2]                                                                                    [2]                                                                                       0              0              0              1              
508   1    A1      {A2}+{A5}       8      15     [1, 2, 5]                                                                                 [2, 3]                                                                                    0              1              0              0              
509   1    A1      {A7}            3      1      [0, 1]                                                                                    [2]                                                                                       0              0              0              1              
510   1    A1      {E7}            1      0      [0]                                                                                       []                                                                                        1              1              1              1              
511   1    2A1     A0              252    29706  [235, 251]                                                                                [2, 3, 4, 5, 6, 7, 8]                                                                     0              1              0              0              
512   1    2A1     {A1}            162    12017  [145, 146, 149, 153, 161]                                                                 [2, 3, 4, 5, 6, 7, 8]                                                                     0              1              0              0              
513   1    2A1     2A1             171    13415  [154, 158, 170]                                                                           [2, 3, 4, 5, 6, 7, 8]                                                                     0              1              0              0              
514   1    2A1     2{A1}           105    4916   [90, 92, 100, 104]                                                                        [2, 3, 4, 5, 6, 7, 8]                                                                     0              1              0              0              
515   1    2A1     2{A1}           105    4924   [88, 89, 90, 92, 93, 96, 98, 104]                                                         [2, 3, 4, 5, 6, 7, 8]                                                                     0              1              0              0              
516   1    2A1     {A2}            84     3094   [69, 71, 72, 75, 76, 83]                                                                  [2, 3, 4, 5, 6, 7, 8]                                                                     0              1              0              0              
517   1    2A1     2A1+{A1}        111    5505   [94, 95, 98, 99, 101, 102, 110]                                                           [2, 3, 4, 5, 6, 7, 8]                                                                     0              1              0              0              
518   1    2A1     3{A1}           69     2066   [54, 55, 56, 57, 58, 60, 62, 64, 65, 68]                                                  [2, 3, 4, 5, 6, 7, 8]                                                                     0              1              0              0              
519   1    2A1     3{A1}           69     2070   [54, 58, 60, 62, 64, 68]                                                                  [2, 3, 4, 5, 6, 7, 8]                                                                     0              1              0              0              
520   1    2A1     {A1}+{A2}       55     1287   [40, 41, 43, 44, 47, 48, 49, 50, 54]                                                      [2, 3, 4, 5, 6, 7, 8]                                                                     0              1              0              0              
521   1    2A1     [A3]            81     2888   [68, 69, 76, 80]                                                                          [2, 3, 4, 5, 6, 7, 8]                                                                     0              1              0              0              
522   1    2A1     {A3}            39     621    [28, 30, 35, 38]                                                                          [2, 3, 4, 5, 6, 8]                                                                        0              1              0              0              
523   1    2A1     {A3}            39     625    [28, 30, 31, 32, 33, 34, 38]                                                              [2, 3, 4, 5, 6, 7, 8]                                                                     0              1              0              0              
524   1    2A1     2A1+{A2}        59     1479   [44, 46, 47, 48, 49, 50, 51, 52, 58]                                                      [2, 3, 4, 5, 6, 7, 8]                                                                     0              1              0              0              
525   1    2A1     2{A1}+{A2}      37     566    [24, 26, 27, 29, 30, 31, 33, 34, 36]                                                      [2, 3, 4, 5, 6, 7, 8]                                                                     0              1              0              0              
526   1    2A1     2{A2}           29     338    [16, 19, 22, 23, 25, 28]                                                                  [2, 3, 4, 5, 6, 7]                                                                        0              1              0              0              
527   1    2A1     4A1             114    5801   [97, 101, 105, 113]                                                                       [2, 3, 4, 5, 6, 7, 8]                                                                     0              1              0              0              
528   1    2A1     2A1+2{A1}       72     2236   [57, 59, 61, 62, 67, 71]                                                                  [2, 3, 4, 5, 6, 7, 8]                                                                     0              1              0              0              
529   1    2A1     2A1+2{A1}       72     2242   [56, 57, 59, 60, 62, 63, 65, 71]                                                          [2, 3, 4, 5, 6, 7, 8]                                                                     0              1              0              0              
530   1    2A1     4{A1}           46     891    [33, 35, 37, 42, 45]                                                                      [2, 3, 4, 5, 6, 8]                                                                        0              1              0              0              
531   1    2A1     4{A1}           46     893    [32, 35, 36, 39, 41, 42, 43, 45]                                                          [2, 3, 4, 5, 6, 7, 8]                                                                     0              1              0              0              
532   1    2A1     {A1}+[A3]       54     1247   [41, 42, 43, 45, 47, 49, 50, 53]                                                          [2, 3, 4, 5, 6, 7, 8]                                                                     0              1              0              0              
533   1    2A1     {A1}+{A3}       26     267    [15, 16, 18, 19, 21, 22, 23, 25]                                                          [2, 3, 4, 5, 6, 8]                                                                        0              1              0              0              
534   1    2A1     {A1}+{A3}       26     269    [16, 19, 20, 21, 22, 23, 25]                                                              [2, 3, 4, 5, 6, 7, 8]                                                                     0              1              0              0              
535   1    2A1     {A4}            17     110    [10, 12, 13, 16]                                                                          [2, 3, 4, 5, 6, 7, 8]                                                                     0              1              0              0              
536   1    2A1     [D4]            33     444    [24, 29, 32]                                                                              [2, 3, 4, 5, 6, 8]                                                                        0              1              0              0              
537   1    2A1     {D4}            15     85     [8, 10, 12, 14]                                                                           [2, 3, 4, 6, 8]                                                                           0              1              0              0              
538   1    2A1     2A1+[A3]        54     1231   [41, 42, 44, 46, 49, 53]                                                                  [2, 3, 4, 5, 6, 7, 8]                                                                     0              1              0              0              
539   1    2A1     2{A1}+[A3]      36     534    [25, 26, 27, 32, 35]                                                                      [2, 3, 4, 5, 6, 8]                                                                        0              1              0              0              
540   1    2A1     2{A1}+[A3]      36     536    [25, 28, 29, 31, 32, 33, 35]                                                              [2, 3, 4, 5, 6, 7, 8]                                                                     0              1              0              0              
541   1    2A1     2A1+{A3}        28     306    [17, 19, 20, 21, 24, 27]                                                                  [2, 3, 4, 5, 6, 8]                                                                        0              1              0              0              
542   1    2A1     2A1+{A3}        28     309    [17, 20, 21, 22, 24, 27]                                                                  [2, 3, 4, 5, 6, 7, 8]                                                                     0              1              0              0              
543   1    2A1     2{A1}+{A3}      18     125    [9, 11, 15, 17]                                                                           [2, 3, 4, 6, 8]                                                                           0              1              0              0              
544   1    2A1     2{A1}+{A3}      18     126    [9, 12, 13, 14, 15, 16, 17]                                                               [2, 3, 4, 5, 6, 7, 8]                                                                     0              1              0              0              
545   1    2A1     2A1+{A1}+{A2}   38     587    [24, 27, 29, 30, 31, 32, 33, 37]                                                          [2, 3, 4, 5, 6, 7]                                                                        0              1              0              0              
546   1    2A1     4A1+{A1}        75     2431   [58, 59, 62, 63, 65, 66, 68, 74]                                                          [2, 3, 4, 5, 6, 7, 8]                                                                     0              1              0              0              
547   1    2A1     2A1+3{A1}       47     917    [32, 33, 35, 36, 37, 38, 39, 40, 42, 43, 46]                                              [2, 3, 4, 5, 6, 7, 8]                                                                     0              1              0              0              
548   1    2A1     5{A1}           31     393    [18, 21, 22, 26, 27, 28, 30]                                                              [2, 3, 4, 5, 6]                                                                           0              1              0              0              
549   1    2A1     {A1}+[D4]       22     190    [13, 14, 16, 17, 18, 19, 21]                                                              [2, 3, 4, 5, 6, 8]                                                                        0              1              0              0              
550   1    2A1     {A1}+{D4}       10     36     [4, 7, 8, 9]                                                                              [2, 3, 4, 6]                                                                              0              1              0              0              
551   1    2A1     {A2}+[A3]       30     367    [19, 20, 21, 22, 24, 26, 27, 29]                                                          [2, 3, 4, 5, 6, 7, 8]                                                                     0              1              0              0              
552   1    2A1     {A2}+{A3}       14     73     [5, 8, 10, 11, 12, 13]                                                                    [2, 3, 4, 5, 6]                                                                           0              1              0              0              
553   1    2A1     {A5}            7      17     [4, 5, 6]                                                                                 [2, 4, 6]                                                                                 0              1              0              0              
554   1    2A1     [D5]            14     75     [8, 9, 11, 13]                                                                            [2, 3, 4, 6, 8]                                                                           0              1              0              0              
555   1    2A1     {D5}            6      13     [3, 4, 5]                                                                                 [2, 4, 6, 8]                                                                              0              1              0              0              
556   1    2A1     2A1+{A4}        12     51     [7, 8, 9, 11]                                                                             [2, 3, 4, 5, 6, 7]                                                                        0              1              0              0              
557   1    2A1     2A1+[D4]        23     205    [14, 16, 17, 19, 22]                                                                      [2, 3, 4, 5, 6, 8]                                                                        0              1              0              0              
558   1    2A1     2{A1}+[D4]      15     85     [8, 9, 12, 14]                                                                            [2, 3, 4, 6, 8]                                                                           0              1              0              0              
559   1    2A1     2A1+{D4}        11     43     [4, 6, 7, 8, 10]                                                                          [2, 3, 4, 6, 8]                                                                           0              1              0              0              
560   1    2A1     2{A1}+{D4}      7      17     [2, 5, 6]                                                                                 [2, 4]                                                                                    0              1              0              0              
561   1    2A1     2[A3]           27     291    [18, 20, 23, 26]                                                                          [2, 3, 4, 5, 6, 8]                                                                        0              1              0              0              
562   1    2A1     {A3}+[A3]       15     85     [8, 9, 12, 14]                                                                            [2, 3, 4, 6, 8]                                                                           0              1              0              0              
563   1    2A1     [A3]+{A3}       15     86     [8, 10, 11, 12, 13, 14]                                                                   [2, 3, 4, 5, 6, 7, 8]                                                                     0              1              0              0              
564   1    2A1     2{A3}           7      17     [2, 5, 6]                                                                                 [2, 4]                                                                                    0              1              0              0              
565   1    2A1     2A1+{A1}+[A3]   36     526    [24, 25, 26, 27, 28, 29, 30, 31, 32, 35]                                                  [2, 3, 4, 5, 6, 7, 8]                                                                     0              1              0              0              
566   1    2A1     3{A1}+[A3]      24     228    [14, 16, 17, 19, 20, 21, 23]                                                              [2, 3, 4, 5, 6]                                                                           0              1              0              0              
567   1    2A1     2A1+{A1}+{A3}   18     119    [8, 10, 12, 13, 14, 15, 17]                                                               [2, 3, 4, 5, 6]                                                                           0              1              0              0              
568   1    2A1     4A1+{A2}        41     686    [26, 29, 30, 31, 32, 33, 34, 36, 40]                                                      [2, 3, 4, 5, 6, 7, 8]                                                                     0              1              0              0              
569   1    2A1     2A1+2{A1}+{A2}  25     242    [12, 15, 17, 19, 20, 21, 22, 24]                                                          [2, 3, 4, 5, 6, 7]                                                                        0              1              0              0              
570   1    2A1     4A1+2{A1}       49     992    [34, 36, 38, 39, 42, 44, 48]                                                              [2, 3, 4, 5, 6, 8]                                                                        0              1              0              0              
571   1    2A1     4A1+2{A1}       49     996    [34, 37, 40, 42, 44, 48]                                                                  [2, 3, 4, 5, 6, 7, 8]                                                                     0              1              0              0              
572   1    2A1     4{A1}+2A1       31     381    [18, 20, 23, 24, 27, 30]                                                                  [2, 3, 4, 5, 6, 8]                                                                        0              1              0              0              
573   1    2A1     6{A1}           21     174    [12, 18, 20]                                                                              [2, 3, 4]                                                                                 0              1              0              0              
574   1    2A1     {A1}+[D5]       9      29     [4, 6, 7, 8]                                                                              [2, 3, 4, 6]                                                                              0              1              0              0              
575   1    2A1     {A2}+[D4]       12     53     [5, 7, 8, 9, 10, 11]                                                                      [2, 3, 4, 5, 6]                                                                           0              1              0              0              
576   1    2A1     [D6]            6      13     [3, 4, 5]                                                                                 [2, 4, 6, 8]                                                                              0              1              0              0              
577   1    2A1     {D6}            2      1      [1]                                                                                       [2]                                                                                       1              1              1              1              
578   1    2A1     2A1+{A2}+[A3]   20     152    [10, 12, 14, 16, 17, 19]                                                                  [2, 3, 4, 5, 6, 7]                                                                        0              1              0              0              
579   1    2A1     2A1+[D5]        10     36     [4, 6, 7, 9]                                                                              [2, 3, 4, 6, 8]                                                                           0              1              0              0              
580   1    2A1     2{A1}+[D5]      6      12     [2, 4, 5]                                                                                 [2, 4]                                                                                    0              1              0              0              
581   1    2A1     2A1+{D5}        4      5      [2, 3]                                                                                    [2, 4]                                                                                    0              1              0              0              
582   1    2A1     2A1+{A1}+[D4]   15     82     [7, 9, 10, 11, 12, 14]                                                                    [2, 3, 4, 5, 6]                                                                           0              1              0              0              
583   1    2A1     2A1+2{A1}+[A3]  24     222    [13, 14, 15, 16, 17, 18, 20, 23]                                                          [2, 3, 4, 5, 6, 8]                                                                        0              1              0              0              
584   1    2A1     4A1+{A3}        20     148    [9, 12, 13, 15, 16, 19]                                                                   [2, 3, 4, 6, 8]                                                                           0              1              0              0              
585   1    2A1     4A1+{A3}        20     150    [12, 13, 14, 15, 17, 19]                                                                  [2, 3, 4, 5, 6, 7, 8]                                                                     0              1              0              0              
586   1    2A1     4{A1}+[A3]      16     96     [7, 9, 13, 15]                                                                            [2, 3, 4]                                                                                 0              1              0              0              
587   1    2A1     2A1+2{A1}+{A3}  12     50     [3, 7, 9, 11]                                                                             [2, 3, 4]                                                                                 0              1              0              0              
588   1    2A1     4A1+3{A1}       32     402    [18, 21, 23, 24, 25, 27, 28, 31]                                                          [2, 3, 4, 5, 6]                                                                           0              1              0              0              
589   1    2A1     {A1}+2[A3]      18     123    [10, 11, 13, 14, 15, 17]                                                                  [2, 3, 4, 5, 6]                                                                           0              1              0              0              
590   1    2A1     [A3]+[D4]       12     53     [6, 7, 9, 11]                                                                             [2, 3, 4, 6, 8]                                                                           0              1              0              0              
591   1    2A1     {A3}+[D4]       6      12     [2, 4, 5]                                                                                 [2, 4]                                                                                    0              1              0              0              
592   1    2A1     [A3]+{D4}       6      12     [2, 4, 5]                                                                                 [2, 4]                                                                                    0              1              0              0              
593   1    2A1     [D7]            2      1      [1]                                                                                       [2]                                                                                       1              1              1              1              
594   1    2A1     2{A1}+2[A3]     12     51     [5, 7, 9, 11]                                                                             [2, 3, 4]                                                                                 0              1              0              0              
595   1    2A1     2A1+{A3}+[A3]   10     34     [3, 5, 6, 7, 9]                                                                           [2, 3, 4]                                                                                 0              1              0              0              
596   1    2A1     2A1+[D6]        4      5      [2, 3]                                                                                    [2, 4]                                                                                    0              1              0              0              
597   1    2A1     2[D4]           5      8      [2, 3, 4]                                                                                 [2, 4]                                                                                    0              1              0              0              
598   1    2A1     2A1+2{A1}+[D4]  10     34     [3, 5, 6, 7, 9]                                                                           [2, 3, 4]                                                                                 0              1              0              0              
599   1    2A1     4A1+{D4}        8      21     [3, 5, 7]                                                                                 [2, 4]                                                                                    0              1              0              0              
600   1    2A1     4{A1}+4A1       21     162    [8, 13, 16, 17, 20]                                                                       [2, 3, 4]                                                                                 0              1              0              0              
601   1    2A1     [A3]+[D5]       5      8      [2, 3, 4]                                                                                 [2, 4]                                                                                    0              1              0              0              
602   1    3A1     A0              72     2364   [63, 71]                                                                                  [2, 3, 4, 5, 6, 7, 8]                                                                     0              1              0              0              
603   1    3A1     {A1}            48     1032   [39, 47]                                                                                  [2, 3, 4, 6, 8]                                                                           0              1              0              0              
604   1    3A1     {A1}            48     1040   [39, 40, 43, 47]                                                                          [2, 3, 4, 5, 6, 7, 8]                                                                     0              1              0              0              
605   1    3A1     2A1             51     1155   [42, 44, 50]                                                                              [2, 3, 4, 5, 6, 7, 8]                                                                     0              1              0              0              
606   1    3A1     2{A1}           33     484    [24, 25, 28, 32]                                                                          [2, 3, 4, 6, 8]                                                                           0              1              0              0              
607   1    3A1     2{A1}           33     488    [26, 28, 30, 32]                                                                          [2, 3, 4, 5, 6, 7, 8]                                                                     0              1              0              0              
608   1    3A1     [A2]            48     1032   [39, 47]                                                                                  [2, 3, 4, 6, 8]                                                                           0              1              0              0              
609   1    3A1     {A2}            26     301    [19, 22, 25]                                                                              [2, 3, 4, 5, 6, 7, 8]                                                                     0              1              0              0              
610   1    3A1     2A1+{A1}        33     468    [24, 26, 32]                                                                              [2, 3, 4, 6, 8]                                                                           0              1              0              0              
611   1    3A1     2A1+{A1}        33     474    [25, 26, 27, 28, 29, 32]                                                                  [2, 3, 4, 5, 6, 7, 8]                                                                     0              1              0              0              
612   1    3A1     3{A1}           23     233    [16, 18, 20, 22]                                                                          [2, 3, 4, 6, 8]                                                                           0              1              0              0              
613   1    3A1     3{A1}           23     235    [17, 20, 21, 22]                                                                          [2, 3, 4, 5, 6, 7, 8]                                                                     0              1              0              0              
614   1    3A1     {A1}+[A2]       33     484    [24, 25, 28, 32]                                                                          [2, 3, 4, 6, 8]                                                                           0              1              0              0              
615   1    3A1     {A1}+{A2}       19     159    [12, 15, 18]                                                                              [2, 3, 4, 6, 8]                                                                           0              1              0              0              
616   1    3A1     [A3]            27     319    [21, 22, 24, 26]                                                                          [2, 3, 4, 5, 6, 7, 8]                                                                     0              1              0              0              
617   1    3A1     {A3}            13     74     [10, 11, 12]                                                                              [2, 4, 5, 6, 8]                                                                           0              1              0              0              
618   1    3A1     2A1+[A2]        33     468    [24, 26, 32]                                                                              [2, 3, 4, 6, 8]                                                                           0              1              0              0              
619   1    3A1     2{A1}+[A2]      23     233    [16, 18, 20, 22]                                                                          [2, 3, 4, 6, 8]                                                                           0              1              0              0              
620   1    3A1     2A1+{A2}        17     122    [12, 13, 14, 16]                                                                          [2, 3, 4, 5, 6, 7]                                                                        0              1              0              0              
621   1    3A1     2A2             31     405    [24, 26, 30]                                                                              [2, 3, 4, 5, 6, 7, 8]                                                                     0              1              0              0              
622   1    3A1     {A2}+[A2]       19     159    [12, 15, 18]                                                                              [2, 3, 4, 6, 8]                                                                           0              1              0              0              
623   1    3A1     4A1             36     558    [27, 29, 31, 35]                                                                          [2, 3, 4, 5, 6, 7, 8]                                                                     0              1              0              0              
624   1    3A1     2A1+2{A1}       22     204    [14, 15, 16, 17, 18, 21]                                                                  [2, 3, 4, 6, 8]                                                                           0              1              0              0              
625   1    3A1     2A1+2{A1}       22     207    [15, 17, 18, 19, 21]                                                                      [2, 3, 4, 5, 6, 7, 8]                                                                     0              1              0              0              
626   1    3A1     4{A1}           16     111    [10, 13, 14, 15]                                                                          [2, 3, 4, 6]                                                                              0              1              0              0              
627   1    3A1     4{A1}           16     112    [11, 14, 15]                                                                              [2, 4, 5, 6]                                                                              0              1              0              0              
628   1    3A1     {A1}+[A3]       18     137    [12, 13, 15, 17]                                                                          [2, 3, 4, 6, 8]                                                                           0              1              0              0              
629   1    3A1     {A1}+[A3]       18     139    [13, 15, 16, 17]                                                                          [2, 3, 4, 5, 6, 7, 8]                                                                     0              1              0              0              
630   1    3A1     {A1}+{A3}       10     43     [7, 8, 9]                                                                                 [2, 4, 6, 8]                                                                              0              1              0              0              
631   1    3A1     [D4]            11     51     [8, 9, 10]                                                                                [2, 4, 5, 6, 8]                                                                           0              1              0              0              
632   1    3A1     {D4}            5      10     [4]                                                                                       [2, 4]                                                                                    1              1              1              1              
633   1    3A1     2A1+[A3]        18     135    [12, 14, 15, 17]                                                                          [2, 3, 4, 5, 6, 7, 8]                                                                     0              1              0              0              
634   1    3A1     2{A1}+[A3]      12     59     [7, 9, 10, 11]                                                                            [2, 3, 4, 6]                                                                              0              1              0              0              
635   1    3A1     2{A1}+[A3]      12     60     [8, 10, 11]                                                                               [2, 4, 5, 6]                                                                              0              1              0              0              
636   1    3A1     2A1+{A3}        8      26     [6, 7]                                                                                    [2, 4, 5]                                                                                 0              1              0              0              
637   1    3A1     2A1+{A1}+[A2]   22     204    [14, 15, 16, 17, 18, 21]                                                                  [2, 3, 4, 6, 8]                                                                           0              1              0              0              
638   1    3A1     3{A1}+[A2]      16     111    [10, 13, 14, 15]                                                                          [2, 3, 4, 6]                                                                              0              1              0              0              
639   1    3A1     2A1+{A1}+{A2}   12     59     [7, 8, 9, 11]                                                                             [2, 3, 4, 6]                                                                              0              1              0              0              
640   1    3A1     4A1+{A1}        23     217    [14, 16, 18, 22]                                                                          [2, 3, 4, 6, 8]                                                                           0              1              0              0              
641   1    3A1     4A1+{A1}        23     221    [17, 18, 20, 22]                                                                          [2, 3, 4, 5, 6, 7, 8]                                                                     0              1              0              0              
642   1    3A1     2A1+3{A1}       15     93     [8, 10, 11, 12, 14]                                                                       [2, 3, 4, 6, 8]                                                                           0              1              0              0              
643   1    3A1     5{A1}           11     51     [6, 9, 10]                                                                                [2, 4]                                                                                    0              1              0              0              
644   1    3A1     {A1}+2A2        19     141    [12, 14, 18]                                                                              [2, 3, 4, 6]                                                                              0              1              0              0              
645   1    3A1     {A1}+2A2        19     145    [13, 14, 15, 18]                                                                          [2, 3, 4, 5, 6, 7]                                                                        0              1              0              0              
646   1    3A1     {A1}+[D4]       8      26     [5, 6, 7]                                                                                 [2, 4, 6, 8]                                                                              0              1              0              0              
647   1    3A1     {A1}+{D4}       4      6      [3]                                                                                       [2]                                                                                       1              1              1              1              
648   1    3A1     [A2]+[A3]       18     137    [12, 13, 15, 17]                                                                          [2, 3, 4, 6, 8]                                                                           0              1              0              0              
649   1    3A1     [A2]+{A3}       10     43     [7, 8, 9]                                                                                 [2, 4, 6, 8]                                                                              0              1              0              0              
650   1    3A1     [A5]            13     68     [9, 10, 11, 12]                                                                           [2, 3, 4, 5, 6, 7, 8]                                                                     0              1              0              0              
651   1    3A1     [D5]            4      6      [3]                                                                                       [2, 4]                                                                                    1              1              1              1              
652   1    3A1     2{A1}+2A2       12     53     [6, 7, 8, 11]                                                                             [2, 3, 4, 6]                                                                              0              1              0              0              
653   1    3A1     2A1+{A2}+[A2]   12     59     [7, 8, 9, 11]                                                                             [2, 3, 4, 6]                                                                              0              1              0              0              
654   1    3A1     2A1+[D4]        7      19     [5, 6]                                                                                    [2, 4, 5]                                                                                 0              1              0              0              
655   1    3A1     2A3             17     112    [12, 14, 16]                                                                              [2, 3, 4, 5, 6, 7, 8]                                                                     0              1              0              0              
656   1    3A1     2[A3]           9      32     [6, 7, 8]                                                                                 [2, 4, 5, 6]                                                                              0              1              0              0              
657   1    3A1     2A1+{A1}+[A3]   12     57     [6, 8, 9, 11]                                                                             [2, 3, 4, 6, 8]                                                                           0              1              0              0              
658   1    3A1     3{A1}+[A3]      8      25     [4, 6, 7]                                                                                 [2, 4]                                                                                    0              1              0              0              
659   1    3A1     2A1+{A1}+{A3}   6      14     [4, 5]                                                                                    [2, 4]                                                                                    0              1              0              0              
660   1    3A1     2A2+[A2]        19     141    [12, 14, 18]                                                                              [2, 3, 4, 6]                                                                              0              1              0              0              
661   1    3A1     2A2+{A2}        9      30     [6, 8]                                                                                    [2, 4, 5]                                                                                 0              1              0              0              
662   1    3A1     2A1+2{A1}+[A2]  15     93     [8, 10, 11, 12, 14]                                                                       [2, 3, 4, 6, 8]                                                                           0              1              0              0              
663   1    3A1     4{A1}+[A2]      11     51     [6, 9, 10]                                                                                [2, 4]                                                                                    0              1              0              0              
664   1    3A1     4A1+2{A1}       15     89     [9, 10, 12, 14]                                                                           [2, 3, 4, 6]                                                                              0              1              0              0              
665   1    3A1     4A1+2{A1}       15     91     [10, 12, 14]                                                                              [2, 4, 5, 6]                                                                              0              1              0              0              
666   1    3A1     {A1}+[A2]+[A3]  12     59     [7, 9, 10, 11]                                                                            [2, 3, 4, 6]                                                                              0              1              0              0              
667   1    3A1     {A1}+[A5]       8      23     [4, 5, 6, 7]                                                                              [2, 3, 4, 6]                                                                              0              1              0              0              
668   1    3A1     {A1}+[A5]       8      24     [5, 6, 7]                                                                                 [2, 4, 5, 6]                                                                              0              1              0              0              
669   1    3A1     {A1}+[D5]       3      3      [2]                                                                                       [2]                                                                                       1              1              1              1              
670   1    3A1     [A2]+[D4]       8      26     [5, 6, 7]                                                                                 [2, 4, 6, 8]                                                                              0              1              0              0              
671   1    3A1     [A2]+{D4}       4      6      [3]                                                                                       [2]                                                                                       1              1              1              1              
672   1    3A1     [E6]            3      3      [2]                                                                                       [2, 4]                                                                                    1              1              1              1              
673   1    3A1     2{A1}+[A2]+[A3] 8      25     [4, 6, 7]                                                                                 [2, 4]                                                                                    0              1              0              0              
674   1    3A1     2A1+[A2]+{A3}   6      14     [4, 5]                                                                                    [2, 4]                                                                                    0              1              0              0              
675   1    3A1     2{A1}+[A5]      5      8      [2, 3, 4]                                                                                 [2, 4]                                                                                    0              1              0              0              
676   1    3A1     2A1+{A1}+[D4]   5      9      [3, 4]                                                                                    [2, 4]                                                                                    0              1              0              0              
677   1    3A1     4A1+3{A1}       10     38     [5, 7, 9]                                                                                 [2, 4]                                                                                    0              1              0              0              
678   1    3A1     {A1}+2A3        10     33     [5, 7, 9]                                                                                 [2, 3, 4, 6]                                                                              0              1              0              0              
679   1    3A1     {A1}+2A3        10     35     [6, 7, 9]                                                                                 [2, 4, 5, 6]                                                                              0              1              0              0              
680   1    3A1     {A1}+2[A3]      6      13     [3, 4, 5]                                                                                 [2, 4]                                                                                    0              1              0              0              
681   1    3A1     {A1}+2A2+[A2]   12     53     [6, 7, 8, 11]                                                                             [2, 3, 4, 6]                                                                              0              1              0              0              
682   1    3A1     {A1}+2A2+{A2}   6      12     [3, 5]                                                                                    [2, 4]                                                                                    0              1              0              0              
683   1    3A1     {A1}+[E6]       2      1      [1]                                                                                       [2]                                                                                       1              1              1              1              
684   1    3A1     [A2]+[A5]       8      23     [4, 5, 6, 7]                                                                              [2, 3, 4, 6]                                                                              0              1              0              0              
685   1    3A1     [A2]+[D5]       3      3      [2]                                                                                       [2]                                                                                       1              1              1              1              
686   1    3A1     [A7]            5      8      [3, 4]                                                                                    [2, 4, 5]                                                                                 0              1              0              0              
687   1    3A1     2{A1}+2A3       6      10     [2, 3, 5]                                                                                 [2, 4]                                                                                    0              1              0              0              
688   1    3A1     2A2+{A2}+[A2]   6      12     [3, 5]                                                                                    [2, 4]                                                                                    0              1              0              0              
689   1    3A1     {A1}+[A2]+[A5]  5      8      [2, 3, 4]                                                                                 [2, 4]                                                                                    0              1              0              0              
690   1    3A1     {A1}+[A7]       3      2      [1, 2]                                                                                    [2]                                                                                       0              1              0              1              
691   1    3A1     [A2]+[E6]       2      1      [1]                                                                                       [2]                                                                                       1              1              1              1              
692   1    4A1     A0              24     276    [23]                                                                                      [2, 4, 6, 8]                                                                              1              1              1              1              
693   1    4A1     {A1}            18     153    [17]                                                                                      [2, 4, 6, 8]                                                                              1              1              1              1              
694   1    4A1     2A1             15     105    [14]                                                                                      [2, 4, 6, 8]                                                                              1              1              1              1              
695   1    4A1     2{A1}           13     78     [12]                                                                                      [2, 4, 6, 8]                                                                              1              1              1              1              
696   1    4A1     [A2]            18     153    [17]                                                                                      [2, 4, 6, 8]                                                                              1              1              1              1              
697   1    4A1     2A1+{A1}        11     55     [10]                                                                                      [2, 4, 6, 8]                                                                              1              1              1              1              
698   1    4A1     3{A1}           9      36     [8]                                                                                       [2, 4, 6]                                                                                 1              1              1              1              
699   1    4A1     {A1}+[A2]       13     78     [12]                                                                                      [2, 4, 6, 8]                                                                              1              1              1              1              
700   1    4A1     [A3]            9      36     [8]                                                                                       [2, 4, 6, 8]                                                                              1              1              1              1              
701   1    4A1     2A1+[A2]        11     55     [10]                                                                                      [2, 4, 6, 8]                                                                              1              1              1              1              
702   1    4A1     2{A1}+[A2]      9      36     [8]                                                                                       [2, 4, 6]                                                                                 1              1              1              1              
703   1    4A1     2[A2]           13     78     [12]                                                                                      [2, 4, 6, 8]                                                                              1              1              1              1              
704   1    4A1     2A2             7      21     [6]                                                                                       [2, 4, 6]                                                                                 1              1              1              1              
705   1    4A1     4A1             10     45     [9]                                                                                       [2, 4, 6, 8]                                                                              1              1              1              1              
706   1    4A1     4A1             10     45     [9]                                                                                       [2, 4, 6, 8]                                                                              1              1              1              1              
707   1    4A1     2A1+2{A1}       8      28     [7]                                                                                       [2, 4, 6, 8]                                                                              1              1              1              1              
708   1    4A1     4{A1}           6      15     [5]                                                                                       [2, 4]                                                                                    1              1              1              1              
709   1    4A1     {A1}+[A3]       6      15     [5]                                                                                       [2, 4, 6]                                                                                 1              1              1              1              
710   1    4A1     [A4]            9      36     [8]                                                                                       [2, 4, 6, 8]                                                                              1              1              1              1              
711   1    4A1     2A1+[A3]        6      15     [5]                                                                                       [2, 4, 6, 8]                                                                              1              1              1              1              
712   1    4A1     2{A1}+[A3]      4      6      [3]                                                                                       [2, 4]                                                                                    1              1              1              1              
713   1    4A1     2A1+{A1}+[A2]   8      28     [7]                                                                                       [2, 4, 6, 8]                                                                              1              1              1              1              
714   1    4A1     3{A1}+[A2]      6      15     [5]                                                                                       [2, 4]                                                                                    1              1              1              1              
715   1    4A1     4A1+{A1}        7      21     [6]                                                                                       [2, 4, 6]                                                                                 1              1              1              1              
716   1    4A1     {A1}+2[A2]      9      36     [8]                                                                                       [2, 4, 6]                                                                                 1              1              1              1              
717   1    4A1     {A1}+2A2        5      10     [4]                                                                                       [2, 4, 6]                                                                                 1              1              1              1              
718   1    4A1     {A1}+[A4]       6      15     [5]                                                                                       [2, 4, 6]                                                                                 1              1              1              1              
719   1    4A1     [A2]+[A3]       6      15     [5]                                                                                       [2, 4, 6]                                                                                 1              1              1              1              
720   1    4A1     [A5]            3      3      [2]                                                                                       [2, 4]                                                                                    1              1              1              1              
721   1    4A1     2{A1}+2[A2]     6      15     [5]                                                                                       [2, 4]                                                                                    1              1              1              1              
722   1    4A1     2A1+[A4]        6      15     [5]                                                                                       [2, 4, 6, 8]                                                                              1              1              1              1              
723   1    4A1     2{A1}+[A4]      4      6      [3]                                                                                       [2, 4]                                                                                    1              1              1              1              
724   1    4A1     2A3             3      3      [2]                                                                                       [2, 4]                                                                                    1              1              1              1              
725   1    4A1     2A3             3      3      [2]                                                                                       [2, 4]                                                                                    1              1              1              1              
726   1    4A1     2[A3]           3      3      [2]                                                                                       [2, 4]                                                                                    1              1              1              1              
727   1    4A1     3[A2]           9      36     [8]                                                                                       [2, 4, 6]                                                                                 1              1              1              1              
728   1    4A1     [A2]+2A2        5      10     [4]                                                                                       [2, 4, 6]                                                                                 1              1              1              1              
729   1    4A1     6A1             7      21     [6]                                                                                       [2, 4, 6, 8]                                                                              1              1              1              1              
730   1    4A1     4A1+2{A1}       5      10     [4]                                                                                       [2, 4]                                                                                    1              1              1              1              
731   1    4A1     {A1}+[A2]+[A3]  4      6      [3]                                                                                       [2, 4]                                                                                    1              1              1              1              
732   1    4A1     {A1}+[A5]       2      1      [1]                                                                                       [2]                                                                                       1              1              1              1              
733   1    4A1     [A2]+[A4]       6      15     [5]                                                                                       [2, 4, 6]                                                                                 1              1              1              1              
734   1    4A1     [A6]            3      3      [2]                                                                                       [2, 4]                                                                                    1              1              1              1              
735   1    4A1     4A1+[A3]        4      6      [3]                                                                                       [2, 4]                                                                                    1              1              1              1              
736   1    4A1     {A1}+2A3        2      1      [1]                                                                                       [2]                                                                                       1              1              1              1              
737   1    4A1     {A1}+3[A2]      6      15     [5]                                                                                       [2, 4]                                                                                    1              1              1              1              
738   1    4A1     {A1}+[A2]+[A4]  4      6      [3]                                                                                       [2, 4]                                                                                    1              1              1              1              
739   1    4A1     {A1}+[A6]       2      1      [1]                                                                                       [2]                                                                                       1              1              1              1              
740   1    4A1     [A2]+[A5]       2      1      [1]                                                                                       [2]                                                                                       1              1              1              1              
741   1    4A1     [A3]+[A4]       3      3      [2]                                                                                       [2, 4]                                                                                    1              1              1              1              
742   1    4A1     [A7]            1      0      [0]                                                                                       []                                                                                        1              1              1              1              
743   1    4A1     2[A4]           3      3      [2]                                                                                       [2, 4]                                                                                    1              1              1              1              
744   1    4A1     2D4             1      0      [0]                                                                                       []                                                                                        1              1              1              1              
745   1    4A1     4[A2]           6      15     [5]                                                                                       [2, 4]                                                                                    1              1              1              1              
746   1    4A1     8A1             5      10     [4]                                                                                       [2, 4]                                                                                    1              1              1              1              
747   1    4A1     [A8]            1      0      [0]                                                                                       []                                                                                        1              1              1              1              
748   1    D4      A0              24     276    [23]                                                                                      [2, 4, 6, 8]                                                                              1              1              1              1              
749   1    D4      {A1}            18     153    [17]                                                                                      [2, 4, 6, 8]                                                                              1              1              1              1              
750   1    D4      2A1             15     105    [14]                                                                                      [2, 4, 6, 8]                                                                              1              1              1              1              
751   1    D4      2{A1}           13     78     [12]                                                                                      [2, 4, 6, 8]                                                                              1              1              1              1              
752   1    D4      {A2}            12     66     [11]                                                                                      [2, 4, 6, 8]                                                                              1              1              1              1              
753   1    D4      2A1+{A1}        11     55     [10]                                                                                      [2, 4, 6, 8]                                                                              1              1              1              1              
754   1    D4      3{A1}           9      36     [8]                                                                                       [2, 4, 6]                                                                                 1              1              1              1              
755   1    D4      [A3]            9      36     [8]                                                                                       [2, 4, 6, 8]                                                                              1              1              1              1              
756   1    D4      {A3}            7      21     [6]                                                                                       [2, 4, 6, 8]                                                                              1              1              1              1              
757   1    D4      2A1+{A2}        7      21     [6]                                                                                       [2, 4, 6]                                                                                 1              1              1              1              
758   1    D4      2A2             7      21     [6]                                                                                       [2, 4, 6]                                                                                 1              1              1              1              
759   1    D4      4A1             10     45     [9]                                                                                       [2, 4, 6, 8]                                                                              1              1              1              1              
760   1    D4      2A1+2{A1}       8      28     [7]                                                                                       [2, 4, 6, 8]                                                                              1              1              1              1              
761   1    D4      4{A1}           6      15     [5]                                                                                       [2, 4]                                                                                    1              1              1              1              
762   1    D4      {A1}+[A3]       6      15     [5]                                                                                       [2, 4, 6]                                                                                 1              1              1              1              
763   1    D4      [D4]            5      10     [4]                                                                                       [2, 4, 6, 8]                                                                              1              1              1              1              
764   1    D4      {D4}            3      3      [2]                                                                                       [2]                                                                                       1              1              1              1              
765   1    D4      2A1+[A3]        6      15     [5]                                                                                       [2, 4, 6, 8]                                                                              1              1              1              1              
766   1    D4      2{A1}+[A3]      4      6      [3]                                                                                       [2, 4]                                                                                    1              1              1              1              
767   1    D4      2A1+{A3}        4      6      [3]                                                                                       [2, 4]                                                                                    1              1              1              1              
768   1    D4      4A1+{A1}        7      21     [6]                                                                                       [2, 4, 6]                                                                                 1              1              1              1              
769   1    D4      {A1}+2A2        5      10     [4]                                                                                       [2, 4, 6]                                                                                 1              1              1              1              
770   1    D4      [A5]            3      3      [2]                                                                                       [2, 4]                                                                                    1              1              1              1              
771   1    D4      [D5]            2      1      [1]                                                                                       [2]                                                                                       1              1              1              1              
772   1    D4      2A1+[D4]        3      3      [2]                                                                                       [2, 4]                                                                                    1              1              1              1              
773   1    D4      2A3             3      3      [2]                                                                                       [2, 4]                                                                                    1              1              1              1              
774   1    D4      2[A3]           3      3      [2]                                                                                       [2, 4]                                                                                    1              1              1              1              
775   1    D4      2A2+{A2}        3      3      [2]                                                                                       [2]                                                                                       1              1              1              1              
776   1    D4      6A1             7      21     [6]                                                                                       [2, 4, 6, 8]                                                                              1              1              1              1              
777   1    D4      4A1+2{A1}       5      10     [4]                                                                                       [2, 4]                                                                                    1              1              1              1              
778   1    D4      {A1}+[A5]       2      1      [1]                                                                                       [2]                                                                                       1              1              1              1              
779   1    D4      [E6]            1      0      [0]                                                                                       []                                                                                        1              1              1              1              
780   1    D4      4A1+[A3]        4      6      [3]                                                                                       [2, 4]                                                                                    1              1              1              1              
781   1    D4      {A1}+2A3        2      1      [1]                                                                                       [2]                                                                                       1              1              1              1              
782   1    D4      [A7]            1      0      [0]                                                                                       []                                                                                        1              1              1              1              
783   1    D4      2D4             1      0      [0]                                                                                       []                                                                                        1              1              1              1              
784   1    D4      8A1             5      10     [4]                                                                                       [2, 4]                                                                                    1              1              1              1              
785   1    A1+D4   A0              12     66     [11]                                                                                      [2, 4, 6, 8]                                                                              1              1              1              1              
786   1    A1+D4   {A1}            8      28     [7]                                                                                       [2, 4, 6, 8]                                                                              1              1              1              1              
787   1    A1+D4   2A1             7      21     [6]                                                                                       [2, 4, 6, 8]                                                                              1              1              1              1              
788   1    A1+D4   2{A1}           5      10     [4]                                                                                       [2, 4, 6]                                                                                 1              1              1              1              
789   1    A1+D4   [A2]            8      28     [7]                                                                                       [2, 4, 6, 8]                                                                              1              1              1              1              
790   1    A1+D4   2A1+{A1}        5      10     [4]                                                                                       [2, 4, 6, 8]                                                                              1              1              1              1              
791   1    A1+D4   3{A1}           3      3      [2]                                                                                       [2]                                                                                       1              1              1              1              
792   1    A1+D4   {A1}+[A2]       5      10     [4]                                                                                       [2, 4, 6]                                                                                 1              1              1              1              
793   1    A1+D4   [A3]            3      3      [2]                                                                                       [2, 4]                                                                                    1              1              1              1              
794   1    A1+D4   2A1+[A2]        5      10     [4]                                                                                       [2, 4, 6, 8]                                                                              1              1              1              1              
795   1    A1+D4   2{A1}+[A2]      3      3      [2]                                                                                       [2]                                                                                       1              1              1              1              
796   1    A1+D4   2[A2]           5      10     [4]                                                                                       [2, 4, 6]                                                                                 1              1              1              1              
797   1    A1+D4   2A2             3      3      [2]                                                                                       [2, 6]                                                                                    1              1              1              1              
798   1    A1+D4   4A1             4      6      [3]                                                                                       [2, 4]                                                                                    1              1              1              1              
799   1    A1+D4   {A1}+[A3]       2      1      [1]                                                                                       [2]                                                                                       1              1              1              1              
800   1    A1+D4   [A4]            3      3      [2]                                                                                       [2, 4]                                                                                    1              1              1              1              
801   1    A1+D4   4A1+{A1}        3      3      [2]                                                                                       [2, 4]                                                                                    1              1              1              1              
802   1    A1+D4   {A1}+2[A2]      3      3      [2]                                                                                       [2]                                                                                       1              1              1              1              
803   1    A1+D4   {A1}+[A4]       2      1      [1]                                                                                       [2]                                                                                       1              1              1              1              
804   1    A1+D4   [A2]+[A3]       2      1      [1]                                                                                       [2]                                                                                       1              1              1              1              
805   1    A1+D4   [A5]            1      0      [0]                                                                                       []                                                                                        1              1              1              1              
806   1    A1+D4   2A3             1      0      [0]                                                                                       []                                                                                        1              1              1              1              
807   1    A1+D4   3[A2]           3      3      [2]                                                                                       [2]                                                                                       1              1              1              1              
808   1    A1+D4   4A1+[A2]        3      3      [2]                                                                                       [2, 4]                                                                                    1              1              1              1              
809   1    A1+D4   [A2]+[A4]       2      1      [1]                                                                                       [2]                                                                                       1              1              1              1              
810   1    A1+D4   [A6]            1      0      [0]                                                                                       []                                                                                        1              1              1              1              
811   1    D6      A0              4      6      [3]                                                                                       [4, 8]                                                                                    1              1              1              1              
812   1    D6      {A1}            2      1      [1]                                                                                       [4]                                                                                       1              1              1              1              
813   1    D6      2A1             3      3      [2]                                                                                       [4, 8]                                                                                    1              1              1              1              
814   1    D6      2{A1}           1      0      [0]                                                                                       []                                                                                        1              1              1              1              
815   1    D6      [A2]            2      1      [1]                                                                                       [4]                                                                                       1              1              1              1              
816   1    D6      {A1}+[A2]       1      0      [0]                                                                                       []                                                                                        1              1              1              1              
817   1    D6      [A3]            1      0      [0]                                                                                       []                                                                                        1              1              1              1              
818   1    D6      2[A2]           1      0      [0]                                                                                       []                                                                                        1              1              1              1              
819   1    D6      4A1             2      1      [1]                                                                                       [4]                                                                                       1              1              1              1              
820   1    D6      [A4]            1      0      [0]                                                                                       []                                                                                        1              1              1              1              
821   1    E7      A0              0      0      []                                                                                        []                                                                                        1              1              0              1              
822   1    E7      {A1}            0      0      []                                                                                        []                                                                                        1              1              0              1              
823   1    E7      [A2]            0      0      []                                                                                        []                                                                                        1              1              0              1              
824   1    E8      A0              0      0      []                                                                                        []                                                                                        1              1              0              1              
 
usecase__graphs(145): Saving data for simple family graphs... 
usecase__graphs(150): Plotting a simple family graph... 
usecase__graphs(159): #components = 5 
usecase__construct_surfaces(188): 
	{ 5, <<x^3 + 2*y^2*z - x*z^2 - 2*y*z^2, x^2*y, x*y^2 - 2*y^2*z + 2*y*z^2, x*y*z - 2*y^2*z + 2*y*z^2, y^3 - 2*y^2*z + y*z^2>>, QQ[x, y, z] }
	chart=z, depth=0, mult=1, sol=(0, 1), { 5, <<x^3 + 2*y^2 - x - 2*y, x^2*y, x*y^2 - 2*y^2 + 2*y, x*y - 2*y^2 + 2*y, y^3 - 2*y^2 + y>>, QQ[x, y] }
	    chart=t, depth=1, mult=1, sol=(2, 0), { 5, <<x^3*y^2 - x + 2*y + 2, x^2*y^2 + x^2*y, x*y^2 + 2*x*y + x - 2*y - 2, x*y + x - 2*y - 2, y^2 + y>>, QQ[x, y] }
	chart=z, depth=0, mult=1, sol=(1, 0), { 5, <<x^3 + 2*y^2 - x - 2*y, x^2*y, x*y^2 - 2*y^2 + 2*y, x*y - 2*y^2 + 2*y, y^3 - 2*y^2 + y>>, QQ[x, y] }
	chart=z, depth=0, mult=1, sol=(0, 0), { 5, <<x^3 + 2*y^2 - x - 2*y, x^2*y, x*y^2 - 2*y^2 + 2*y, x*y - 2*y^2 + 2*y, y^3 - 2*y^2 + y>>, QQ[x, y] }
	chart=z, depth=0, mult=1, sol=(-1, 0), { 5, <<x^3 + 2*y^2 - x - 2*y, x^2*y, x*y^2 - 2*y^2 + 2*y, x*y - 2*y^2 + 2*y, y^3 - 2*y^2 + y>>, QQ[x, y] } 
usecase__construct_surfaces(189): implicit equation =
	 [x2^2 - 2*x2*x3 + x3^2 - x1*x4, x1^2 - x0*x2 - 2*x1*x2 + 2*x1*x3 - x3^2 + 2*x0*x4 + 2*x3*x4] 
usecase__construct_surfaces(200): Neron-Severi lattice = 
==================================================
Degree          = 4
Rank            = 6
Intersection    = [(1, 0, 0, 0, 0, 0), (0, -1, 0, 0, 0, 0), (0, 0, -1, 0, 0, 0), (0, 0, 0, -1, 0, 0), (0, 0, 0, 0, -1, 0), (0, 0, 0, 0, 0, -1)]
Real structure  = A0
Singularities   = 2A1
Cardinalities   = (6, 2)
Real involution:
	e0  --->  e0
	e1  --->  e1
	e2  --->  e2
	e3  --->  e3
	e4  --->  e4
	e5  --->  e5
Indecomposable (-2)-classes:
	e0-e1-e2-e3  --->  e0-e1-e2-e3
	e4-e5  --->  e4-e5
	#real = 2
Indecomposable (-1)-classes:
	e1  --->  e1
	e2  --->  e2
	e3  --->  e3
	e5  --->  e5
	e0-e1-e4  --->  e0-e1-e4
	e0-e2-e4  --->  e0-e2-e4
	e0-e3-e4  --->  e0-e3-e4
	e0-e4-e5  --->  e0-e4-e5
	#real = 8
Classes of conical families:
	e0-e1  --->  e0-e1
	e0-e2  --->  e0-e2
	e0-e3  --->  e0-e3
	e0-e4  --->  e0-e4
	2e0-e1-e2-e4-e5  --->  2e0-e1-e2-e4-e5
	2e0-e1-e3-e4-e5  --->  2e0-e1-e3-e4-e5
	2e0-e2-e3-e4-e5  --->  2e0-e2-e3-e4-e5
	#real = 7
==================================================
 
usecase__roman_circles(231): sp_lst = 
usecase__roman_circles(232): 		 x^4 + 3*x^2*y^2 + y^4 + 3*x^2*z^2 + 3*y^2*z^2 + z^4 
usecase__roman_circles(232): 		 (-2) * z * x * (x^2 + y^2 + z^2) 
usecase__roman_circles(232): 		 (-2) * y * x * (x^2 + y^2 + z^2) 
usecase__roman_circles(232): 		 (2) * z * y * (x^2 + y^2 + z^2) 
usecase__roman_circles(232): 		 (-1) * (x^4 + x^2*y^2 + y^4 + x^2*z^2 + y^2*z^2 + z^4) 
usecase__roman_circles(233): gcd(sp_lst) = 1 
usecase__roman_circles(240): 
	{ 5, <<x^4 + 3*x^2*y^2 + y^4 + 3*x^2*z^2 + 3*y^2*z^2 + z^4, -2*x^3*z - 2*x*y^2*z - 2*x*z^3, -2*x^3*y - 2*x*y^3 - 2*x*y*z^2, 2*x^2*y*z + 2*y^3*z + 2*y*z^3, -x^4 - x^2*y^2 - y^4 - x^2*z^2 - y^2*z^2 - z^4>>, QQ( <a0|t^2 - t + 1>, <a1|t^4 + 3*t^2 + 1>, <a2|t^2 + 2*a0>, <a3|t^2 - 3*a1^2 - 6> )[x, y, z] }
	chart=z, depth=0, mult=1, sol=(a0 - 1, -a0), { 5, <<x^4 + 3*x^2*y^2 + y^4 + 3*x^2 + 3*y^2 + 1, -2*x^3 - 2*x*y^2 - 2*x, -2*x^3*y - 2*x*y^3 - 2*x*y, 2*x^2*y + 2*y^3 + 2*y, -x^4 - x^2*y^2 - y^4 - x^2 - y^2 - 1>>, QQ( <a0|t^2 - t + 1>, <a1|t^4 + 3*t^2 + 1>, <a2|t^2 + 2*a0>, <a3|t^2 - 3*a1^2 - 6> )[x, y] }
	chart=z, depth=0, mult=1, sol=(-a0 + 1, a0), { 5, <<x^4 + 3*x^2*y^2 + y^4 + 3*x^2 + 3*y^2 + 1, -2*x^3 - 2*x*y^2 - 2*x, -2*x^3*y - 2*x*y^3 - 2*x*y, 2*x^2*y + 2*y^3 + 2*y, -x^4 - x^2*y^2 - y^4 - x^2 - y^2 - 1>>, QQ( <a0|t^2 - t + 1>, <a1|t^4 + 3*t^2 + 1>, <a2|t^2 + 2*a0>, <a3|t^2 - 3*a1^2 - 6> )[x, y] }
	chart=z, depth=0, mult=1, sol=(a0 - 1, a0), { 5, <<x^4 + 3*x^2*y^2 + y^4 + 3*x^2 + 3*y^2 + 1, -2*x^3 - 2*x*y^2 - 2*x, -2*x^3*y - 2*x*y^3 - 2*x*y, 2*x^2*y + 2*y^3 + 2*y, -x^4 - x^2*y^2 - y^4 - x^2 - y^2 - 1>>, QQ( <a0|t^2 - t + 1>, <a1|t^4 + 3*t^2 + 1>, <a2|t^2 + 2*a0>, <a3|t^2 - 3*a1^2 - 6> )[x, y] }
	chart=z, depth=0, mult=1, sol=(-a0, -a0 + 1), { 5, <<x^4 + 3*x^2*y^2 + y^4 + 3*x^2 + 3*y^2 + 1, -2*x^3 - 2*x*y^2 - 2*x, -2*x^3*y - 2*x*y^3 - 2*x*y, 2*x^2*y + 2*y^3 + 2*y, -x^4 - x^2*y^2 - y^4 - x^2 - y^2 - 1>>, QQ( <a0|t^2 - t + 1>, <a1|t^4 + 3*t^2 + 1>, <a2|t^2 + 2*a0>, <a3|t^2 - 3*a1^2 - 6> )[x, y] }
	chart=z, depth=0, mult=1, sol=(a0, -a0 + 1), { 5, <<x^4 + 3*x^2*y^2 + y^4 + 3*x^2 + 3*y^2 + 1, -2*x^3 - 2*x*y^2 - 2*x, -2*x^3*y - 2*x*y^3 - 2*x*y, 2*x^2*y + 2*y^3 + 2*y, -x^4 - x^2*y^2 - y^4 - x^2 - y^2 - 1>>, QQ( <a0|t^2 - t + 1>, <a1|t^4 + 3*t^2 + 1>, <a2|t^2 + 2*a0>, <a3|t^2 - 3*a1^2 - 6> )[x, y] }
	chart=z, depth=0, mult=1, sol=(-a0, a0 - 1), { 5, <<x^4 + 3*x^2*y^2 + y^4 + 3*x^2 + 3*y^2 + 1, -2*x^3 - 2*x*y^2 - 2*x, -2*x^3*y - 2*x*y^3 - 2*x*y, 2*x^2*y + 2*y^3 + 2*y, -x^4 - x^2*y^2 - y^4 - x^2 - y^2 - 1>>, QQ( <a0|t^2 - t + 1>, <a1|t^4 + 3*t^2 + 1>, <a2|t^2 + 2*a0>, <a3|t^2 - 3*a1^2 - 6> )[x, y] }
	chart=z, depth=0, mult=1, sol=(-a0 + 1, -a0), { 5, <<x^4 + 3*x^2*y^2 + y^4 + 3*x^2 + 3*y^2 + 1, -2*x^3 - 2*x*y^2 - 2*x, -2*x^3*y - 2*x*y^3 - 2*x*y, 2*x^2*y + 2*y^3 + 2*y, -x^4 - x^2*y^2 - y^4 - x^2 - y^2 - 1>>, QQ( <a0|t^2 - t + 1>, <a1|t^4 + 3*t^2 + 1>, <a2|t^2 + 2*a0>, <a3|t^2 - 3*a1^2 - 6> )[x, y] }
	chart=z, depth=0, mult=1, sol=(a0, a0 - 1), { 5, <<x^4 + 3*x^2*y^2 + y^4 + 3*x^2 + 3*y^2 + 1, -2*x^3 - 2*x*y^2 - 2*x, -2*x^3*y - 2*x*y^3 - 2*x*y, 2*x^2*y + 2*y^3 + 2*y, -x^4 - x^2*y^2 - y^4 - x^2 - y^2 - 1>>, QQ( <a0|t^2 - t + 1>, <a1|t^4 + 3*t^2 + 1>, <a2|t^2 + 2*a0>, <a3|t^2 - 3*a1^2 - 6> )[x, y] } 
usecase__roman_circles(258): Classes of circles up to permutation: 
usecase__roman_circles(260): 		 2e0-e1-e2-e3-e4-e5-e6 
usecase__roman_circles(260): 		 e0-e1-e2 
usecase__roman_circles(274): basepoints = [(a0 - 1, -a0), (-a0, a0 - 1), (-a0 + 1, a0), (a0, -a0 + 1), (a0 - 1, a0), (-a0, -a0 + 1), (-a0 + 1, -a0), (a0, a0 - 1)] 
usecase__roman_circles(275): { 1, <<x^2 + y^2 + z^2>>, QQ( <a0|t^2 - t + 1>, <a1|t^4 + 3*t^2 + 1>, <a2|t^2 + 2*a0>, <a3|t^2 - 3*a1^2 - 6> )[x, y, z] } 
usecase__roman_circles(282): basepoints = [(a0 - 1, -a0), (-a0, a0 - 1)] 
usecase__roman_circles(283): { 1, <<x + y + z>>, QQ( <a0|t^2 - t + 1>, <a1|t^4 + 3*t^2 + 1>, <a2|t^2 + 2*a0>, <a3|t^2 - 3*a1^2 - 6> )[x, y, z] } 
usecase__roman_circles(290): basepoints = [(-a0 + 1, a0), (a0, -a0 + 1)] 
usecase__roman_circles(291): { 1, <<x + y - z>>, QQ( <a0|t^2 - t + 1>, <a1|t^4 + 3*t^2 + 1>, <a2|t^2 + 2*a0>, <a3|t^2 - 3*a1^2 - 6> )[x, y, z] } 
usecase__roman_circles(298): basepoints = [(a0 - 1, a0), (-a0, -a0 + 1)] 
usecase__roman_circles(299): { 1, <<x - y + z>>, QQ( <a0|t^2 - t + 1>, <a1|t^4 + 3*t^2 + 1>, <a2|t^2 + 2*a0>, <a3|t^2 - 3*a1^2 - 6> )[x, y, z] } 
usecase__roman_circles(306): basepoints = [(-a0 + 1, -a0), (a0, a0 - 1)] 
usecase__roman_circles(307): { 1, <<x - y - z>>, QQ( <a0|t^2 - t + 1>, <a1|t^4 + 3*t^2 + 1>, <a2|t^2 + 2*a0>, <a3|t^2 - 3*a1^2 - 6> )[x, y, z] } 
end_timer(213): time passed = 199196.669954 
<module>(354): The End 
